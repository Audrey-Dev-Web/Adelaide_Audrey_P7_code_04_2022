{"ast":null,"code":"var _jsxFileName = \"F:\\\\Works\\\\Formation OC\\\\SOUTENANCES\\\\P7\\\\groupomania\\\\client\\\\src\\\\components\\\\DeletePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { useParams } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport { BiTrash } from \"react-icons/bi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeletePost(props) {\n  _s();\n\n  let navigate = useNavigate();\n  let {\n    postSlug\n  } = useParams(); // const { access } = props;\n  // On récupère l'id du post à supprimer\n\n  const {\n    post_id,\n    author_id,\n    access\n  } = props;\n  const [isAuthorized, setIsAuthorized] = useState(false);\n  const token = access;\n  const decoded = jwt_decode(token);\n  const user_id = decoded.userId;\n  const user_role = decoded.role; // On configure la requête\n\n  const url = `http://localhost:8080/api/articles/${post_id}`;\n  const reqOptions = {\n    method: \"DELETE\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  }; // On vérifi si l'utilisateur est autorisé à supprimer le commentaire\n\n  const authorization = async () => {\n    if (user_id === author_id || user_role === \"admin\") {\n      setIsAuthorized(true);\n    }\n  };\n\n  useEffect(() => {\n    authorization();\n  }, []);\n\n  const del = async e => {\n    // e.preventDefault();\n    console.log(\"click\");\n\n    try {\n      let res = await fetch(url, reqOptions);\n      let deleteRes = await res.json();\n\n      if (res.ok) {\n        // window.location.reload();\n        if (postSlug === undefined) {\n          window.location.reload();\n        }\n\n        navigate(\"/\");\n      } else {\n        throw new Error(\"Error\");\n      } // window.location.reload();\n\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !isAuthorized ? null :\n    /*#__PURE__*/\n    // <button className=\"post__delete btn btn__delete\" onClick={(e) => del(e)}>\n    _jsxDEV(\"button\", {\n      className: \"post__delete btn btn__delete\",\n      onClick: () => {\n        const confirmBox = window.confirm(\"Voulez vous vraiment supprimer ce post ?\");\n\n        if (confirmBox === true) {\n          del();\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(BiTrash, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DeletePost, \"n1gST+Oh3VDKqjDJWkGevK5GKrg=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = DeletePost;\nexport default DeletePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeletePost\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","jwt_decode","BiTrash","DeletePost","props","navigate","postSlug","post_id","author_id","access","isAuthorized","setIsAuthorized","token","decoded","user_id","userId","user_role","role","url","reqOptions","method","headers","Authorization","Accept","authorization","del","e","console","log","res","fetch","deleteRes","json","ok","undefined","window","location","reload","Error","err","confirmBox","confirm"],"sources":["F:/Works/Formation OC/SOUTENANCES/P7/groupomania/client/src/components/DeletePost.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport { BiTrash } from \"react-icons/bi\";\r\n\r\nfunction DeletePost(props) {\r\n    let navigate = useNavigate();\r\n    let { postSlug } = useParams();\r\n    // const { access } = props;\r\n\r\n    // On récupère l'id du post à supprimer\r\n    const { post_id, author_id, access } = props;\r\n\r\n    const [isAuthorized, setIsAuthorized] = useState(false);\r\n\r\n    const token = access;\r\n    const decoded = jwt_decode(token);\r\n    const user_id = decoded.userId;\r\n    const user_role = decoded.role;\r\n\r\n    // On configure la requête\r\n    const url = `http://localhost:8080/api/articles/${post_id}`;\r\n    const reqOptions = {\r\n        method: \"DELETE\",\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    // On vérifi si l'utilisateur est autorisé à supprimer le commentaire\r\n    const authorization = async () => {\r\n        if (user_id === author_id || user_role === \"admin\") {\r\n            setIsAuthorized(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        authorization();\r\n    }, []);\r\n\r\n    const del = async (e) => {\r\n        // e.preventDefault();\r\n\r\n        console.log(\"click\");\r\n        try {\r\n            let res = await fetch(url, reqOptions);\r\n            let deleteRes = await res.json();\r\n\r\n            if (res.ok) {\r\n                // window.location.reload();\r\n                if (postSlug === undefined) {\r\n                    window.location.reload();\r\n                }\r\n\r\n                navigate(\"/\");\r\n            } else {\r\n                throw new Error(\"Error\");\r\n            }\r\n\r\n            // window.location.reload();\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!isAuthorized ? null : (\r\n                // <button className=\"post__delete btn btn__delete\" onClick={(e) => del(e)}>\r\n                <button\r\n                    className=\"post__delete btn btn__delete\"\r\n                    onClick={() => {\r\n                        const confirmBox = window.confirm(\"Voulez vous vraiment supprimer ce post ?\");\r\n\r\n                        if (confirmBox === true) {\r\n                            del();\r\n                        }\r\n                    }}\r\n                >\r\n                    <BiTrash />\r\n                </button>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DeletePost;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,OAAT,QAAwB,gBAAxB;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;EAAA;;EACvB,IAAIC,QAAQ,GAAGN,WAAW,EAA1B;EACA,IAAI;IAAEO;EAAF,IAAeN,SAAS,EAA5B,CAFuB,CAGvB;EAEA;;EACA,MAAM;IAAEO,OAAF;IAAWC,SAAX;IAAsBC;EAAtB,IAAiCL,KAAvC;EAEA,MAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,KAAD,CAAhD;EAEA,MAAMe,KAAK,GAAGH,MAAd;EACA,MAAMI,OAAO,GAAGZ,UAAU,CAACW,KAAD,CAA1B;EACA,MAAME,OAAO,GAAGD,OAAO,CAACE,MAAxB;EACA,MAAMC,SAAS,GAAGH,OAAO,CAACI,IAA1B,CAbuB,CAevB;;EACA,MAAMC,GAAG,GAAI,sCAAqCX,OAAQ,EAA1D;EACA,MAAMY,UAAU,GAAG;IACfC,MAAM,EAAE,QADO;IAEfC,OAAO,EAAE;MACLC,aAAa,EAAG,UAASV,KAAM,EAD1B;MAELW,MAAM,EAAE,kBAFH;MAGL,gBAAgB;IAHX;EAFM,CAAnB,CAjBuB,CA0BvB;;EACA,MAAMC,aAAa,GAAG,YAAY;IAC9B,IAAIV,OAAO,KAAKN,SAAZ,IAAyBQ,SAAS,KAAK,OAA3C,EAAoD;MAChDL,eAAe,CAAC,IAAD,CAAf;IACH;EACJ,CAJD;;EAMAb,SAAS,CAAC,MAAM;IACZ0B,aAAa;EAChB,CAFQ,EAEN,EAFM,CAAT;;EAIA,MAAMC,GAAG,GAAG,MAAOC,CAAP,IAAa;IACrB;IAEAC,OAAO,CAACC,GAAR,CAAY,OAAZ;;IACA,IAAI;MACA,IAAIC,GAAG,GAAG,MAAMC,KAAK,CAACZ,GAAD,EAAMC,UAAN,CAArB;MACA,IAAIY,SAAS,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAtB;;MAEA,IAAIH,GAAG,CAACI,EAAR,EAAY;QACR;QACA,IAAI3B,QAAQ,KAAK4B,SAAjB,EAA4B;UACxBC,MAAM,CAACC,QAAP,CAAgBC,MAAhB;QACH;;QAEDhC,QAAQ,CAAC,GAAD,CAAR;MACH,CAPD,MAOO;QACH,MAAM,IAAIiC,KAAJ,CAAU,OAAV,CAAN;MACH,CAbD,CAeA;;IACH,CAhBD,CAgBE,OAAOC,GAAP,EAAY;MACVZ,OAAO,CAACC,GAAR,CAAYW,GAAZ;IACH;EACJ,CAvBD;;EAyBA,oBACI;IAAA,UACK,CAAC7B,YAAD,GAAgB,IAAhB;IAAA;IACG;IACA;MACI,SAAS,EAAC,8BADd;MAEI,OAAO,EAAE,MAAM;QACX,MAAM8B,UAAU,GAAGL,MAAM,CAACM,OAAP,CAAe,0CAAf,CAAnB;;QAEA,IAAID,UAAU,KAAK,IAAnB,EAAyB;UACrBf,GAAG;QACN;MACJ,CARL;MAAA,uBAUI,QAAC,OAAD;QAAA;QAAA;QAAA;MAAA;IAVJ;MAAA;MAAA;MAAA;IAAA;EAHR;IAAA;IAAA;IAAA;EAAA,QADJ;AAmBH;;GAjFQtB,U;UACUJ,W,EACIC,S;;;KAFdG,U;AAmFT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}