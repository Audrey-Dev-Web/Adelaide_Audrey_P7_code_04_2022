{"ast":null,"code":"var _jsxFileName = \"F:\\\\Works\\\\Formation OC\\\\SOUTENANCES\\\\P7\\\\groupomania\\\\client\\\\src\\\\webpages\\\\articles\\\\Posts.js\";\nimport React, { Component } from \"react\";\nimport { Link, Outlet } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Posts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [],\n      DataIsLoaded: false\n    };\n  }\n\n  async componentDidMount() {\n    const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\n    const token = user.pass;\n    const url = `http://localhost:8080/api/articles`;\n    const reqOptions = {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await fetch(url, reqOptions);\n      const data = await res.json();\n      this.setState({\n        posts: data.articlesFound,\n        DataIsLoaded: true\n      });\n      console.log(this.state);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  render() {\n    const {\n      DataIsLoaded,\n      posts\n    } = this.state;\n    if (!DataIsLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Pleses wait some time.... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this);\n    const showPosts = posts.map((post, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"article\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/articles/\" + post.article.id,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"article__header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"article__header--title\",\n              children: post.article.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"article__header--author\",\n              children: [!post.article.author_avatar ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"author__img initiales\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: `${post.article.author_firstName} ${post.article.author_lastName}\n                                            `.match(/\\b\\w/g).join(\"\").toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"author__img\",\n                src: post.article.author_avatar\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"article__info\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"author__name\",\n                  children: post.article.author_firstName + \" \" + post.article.author_lastName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"article__header--datetime\",\n                  children: post.article.timestamp\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, post.article.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this);\n    });\n    return showPosts; // return (\n    //     <div>\n    //         {posts.map((post, index) => {\n    //             <div className=\"article\" key={post.article.id}>\n    //                 <Link to={\"/articles/\" + post.article.id}>\n    //                     <div className=\"article__header\">\n    //                         <h2 className=\"article__header--title\">{post.article.title}</h2>\n    //                         <div className=\"article__header--author\">\n    //                             {!post.article.author_avatar ? (\n    //                                 <div className=\"author__img initiales\">\n    //                                     <p>\n    //                                         {`${post.article.author_firstName} ${post.article.author_lastName}\n    //                                         `\n    //                                             .match(/\\b\\w/g)\n    //                                             .join(\"\")\n    //                                             .toUpperCase()}\n    //                                     </p>\n    //                                 </div>\n    //                             ) : (\n    //                                 <img className=\"author__img\" src={post.article.author_avatar} />\n    //                             )}\n    //                         </div>\n    //                     </div>\n    //                 </Link>\n    //                 <Outlet />\n    //             </div>;\n    //         })}\n    //     </div>\n    // );\n  }\n\n} // export default Posts;","map":{"version":3,"names":["React","Component","Link","Outlet","Posts","constructor","props","state","posts","DataIsLoaded","componentDidMount","user","JSON","parse","sessionStorage","getItem","token","pass","url","reqOptions","method","headers","Authorization","Accept","res","fetch","data","json","setState","articlesFound","console","log","err","render","showPosts","map","post","index","article","id","title","author_avatar","author_firstName","author_lastName","match","join","toUpperCase","timestamp"],"sources":["F:/Works/Formation OC/SOUTENANCES/P7/groupomania/client/src/webpages/articles/Posts.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link, Outlet } from \"react-router-dom\";\r\n\r\nexport default class Posts extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            posts: [],\r\n            DataIsLoaded: false,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\r\n        const token = user.pass;\r\n\r\n        const url = `http://localhost:8080/api/articles`;\r\n        const reqOptions = {\r\n            method: \"GET\",\r\n            headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        try {\r\n            const res = await fetch(url, reqOptions);\r\n            const data = await res.json();\r\n\r\n            this.setState({ posts: data.articlesFound, DataIsLoaded: true });\r\n            console.log(this.state);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { DataIsLoaded, posts } = this.state;\r\n\r\n        if (!DataIsLoaded)\r\n            return (\r\n                <div>\r\n                    <h1> Pleses wait some time.... </h1>\r\n                </div>\r\n            );\r\n\r\n        const showPosts = posts.map((post, index) => {\r\n            return (\r\n                <div className=\"article\" key={post.article.id}>\r\n                    <Link to={\"/articles/\" + post.article.id}>\r\n                        <div className=\"article__header\">\r\n                            <h2 className=\"article__header--title\">{post.article.title}</h2>\r\n                            <div className=\"article__header--author\">\r\n                                {!post.article.author_avatar ? (\r\n                                    <div className=\"author__img initiales\">\r\n                                        <p>\r\n                                            {`${post.article.author_firstName} ${post.article.author_lastName}\r\n                                            `\r\n                                                .match(/\\b\\w/g)\r\n                                                .join(\"\")\r\n                                                .toUpperCase()}\r\n                                        </p>\r\n                                    </div>\r\n                                ) : (\r\n                                    <img className=\"author__img\" src={post.article.author_avatar} />\r\n                                )}\r\n\r\n                                <div className=\"article__info\">\r\n                                    <p className=\"author__name\">\r\n                                        {post.article.author_firstName + \" \" + post.article.author_lastName}\r\n                                    </p>\r\n                                    <div className=\"article__header--datetime\">{post.article.timestamp}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n                    <Outlet />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return showPosts;\r\n\r\n        // return (\r\n        //     <div>\r\n        //         {posts.map((post, index) => {\r\n        //             <div className=\"article\" key={post.article.id}>\r\n        //                 <Link to={\"/articles/\" + post.article.id}>\r\n        //                     <div className=\"article__header\">\r\n        //                         <h2 className=\"article__header--title\">{post.article.title}</h2>\r\n        //                         <div className=\"article__header--author\">\r\n        //                             {!post.article.author_avatar ? (\r\n        //                                 <div className=\"author__img initiales\">\r\n        //                                     <p>\r\n        //                                         {`${post.article.author_firstName} ${post.article.author_lastName}\r\n        //                                         `\r\n        //                                             .match(/\\b\\w/g)\r\n        //                                             .join(\"\")\r\n        //                                             .toUpperCase()}\r\n        //                                     </p>\r\n        //                                 </div>\r\n        //                             ) : (\r\n        //                                 <img className=\"author__img\" src={post.article.author_avatar} />\r\n        //                             )}\r\n        //                         </div>\r\n        //                     </div>\r\n        //                 </Link>\r\n        //                 <Outlet />\r\n        //             </div>;\r\n        //         })}\r\n        //     </div>\r\n        // );\r\n    }\r\n}\r\n\r\n// export default Posts;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}