{"ast":null,"code":"var _jsxFileName = \"F:\\\\Works\\\\Formation OC\\\\SOUTENANCES\\\\P7\\\\groupomania\\\\client\\\\src\\\\components\\\\usersProfile\\\\DeleteAccount.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { useParams } from \"react-router-dom\"; // Gestion des cookies\n\nimport { useCookies } from \"react-cookie\";\nimport jwt_decode from \"jwt-decode\";\nimport { BiTrash } from \"react-icons/bi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeleteAccount(props) {\n  _s();\n\n  const {\n    userId,\n    access\n  } = props;\n  let navigate = useNavigate();\n  let {\n    userSlug\n  } = useParams();\n  const [cookies, setCookies, removeCookie] = useCookies([\"access\"]);\n  const [deleteMsg, setDeleteMsg] = useState(\"\");\n  const [deleteOK, setDeleteOK] = useState(false);\n  const [errorMgs, setErrorMsg] = useState(null);\n  const token = access;\n  const decoded = jwt_decode(token);\n  const user_id = decoded.userId;\n  const user_role = decoded.role; // On configure la requête\n\n  const url = `http://localhost:8080/api/profiles/${userSlug}`;\n  const reqOptions = {\n    method: \"DELETE\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  }; // Requête pour supprimer le compte\n\n  const delAccount = async e => {\n    try {\n      let res = await fetch(url, reqOptions);\n      let deleteRes = await res.json();\n      console.log(deleteRes);\n\n      if (res.ok) {\n        if (user_id === userSlug) {\n          setDeleteMsg(\"Votre compte a été supprimé avec succès!\");\n          setDeleteOK(true);\n          removeCookie(\"access\", \"\", {\n            path: \"/\"\n          });\n          setTimeout(function () {\n            navigate(\"/\");\n            window.location.reload();\n          }, 3000);\n        } else if (user_role === \"admin\") {\n          // Afficher une page pour l'admin lui confirmant que le compte a bien été supprimé\n          setDeleteMsg(\"Le compte de cet utilisateur a bien été supprimé\");\n          setDeleteOK(true);\n          setTimeout(function () {\n            navigate(\"/\");\n            window.location.reload();\n          }, 3500);\n        }\n      } else {\n        setDeleteOK(false);\n        throw new Error(\"Error\");\n      }\n    } catch (err) {\n      setErrorMsg(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: deleteOK ? deleteMsg : errorMgs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), user_id === userId || user_role === \"admin\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"account__delete btn btn__delete\",\n        onClick: () => {\n          const confirmBox = window.confirm(\"Voulez vous vraiment supprimer votre compte ?\");\n\n          if (confirmBox === true) {\n            delAccount();\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          hidden: true,\n          children: \"Supprimer ce compte\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(BiTrash, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DeleteAccount, \"cgrst/5xU+vCeWbVDzMr4MMQedc=\", false, function () {\n  return [useNavigate, useParams, useCookies];\n});\n\n_c = DeleteAccount;\nexport default DeleteAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteAccount\");","map":{"version":3,"names":["React","useState","useNavigate","useParams","useCookies","jwt_decode","BiTrash","DeleteAccount","props","userId","access","navigate","userSlug","cookies","setCookies","removeCookie","deleteMsg","setDeleteMsg","deleteOK","setDeleteOK","errorMgs","setErrorMsg","token","decoded","user_id","user_role","role","url","reqOptions","method","headers","Authorization","Accept","delAccount","e","res","fetch","deleteRes","json","console","log","ok","path","setTimeout","window","location","reload","Error","err","confirmBox","confirm"],"sources":["F:/Works/Formation OC/SOUTENANCES/P7/groupomania/client/src/components/usersProfile/DeleteAccount.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// Gestion des cookies\r\nimport { useCookies } from \"react-cookie\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport { BiTrash } from \"react-icons/bi\";\r\n\r\nfunction DeleteAccount(props) {\r\n    const { userId, access } = props;\r\n    let navigate = useNavigate();\r\n    let { userSlug } = useParams();\r\n\r\n    const [cookies, setCookies, removeCookie] = useCookies([\"access\"]);\r\n    const [deleteMsg, setDeleteMsg] = useState(\"\");\r\n    const [deleteOK, setDeleteOK] = useState(false);\r\n    const [errorMgs, setErrorMsg] = useState(null);\r\n\r\n    const token = access;\r\n    const decoded = jwt_decode(token);\r\n    const user_id = decoded.userId;\r\n    const user_role = decoded.role;\r\n\r\n    // On configure la requête\r\n    const url = `http://localhost:8080/api/profiles/${userSlug}`;\r\n    const reqOptions = {\r\n        method: \"DELETE\",\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    // Requête pour supprimer le compte\r\n    const delAccount = async (e) => {\r\n        try {\r\n            let res = await fetch(url, reqOptions);\r\n            let deleteRes = await res.json();\r\n\r\n            console.log(deleteRes);\r\n\r\n            if (res.ok) {\r\n                if (user_id === userSlug) {\r\n                    setDeleteMsg(\"Votre compte a été supprimé avec succès!\");\r\n                    setDeleteOK(true);\r\n                    removeCookie(\"access\", \"\", { path: \"/\" });\r\n                    setTimeout(function () {\r\n                        navigate(\"/\");\r\n                        window.location.reload();\r\n                    }, 3000);\r\n                } else if (user_role === \"admin\") {\r\n                    // Afficher une page pour l'admin lui confirmant que le compte a bien été supprimé\r\n                    setDeleteMsg(\"Le compte de cet utilisateur a bien été supprimé\");\r\n                    setDeleteOK(true);\r\n\r\n                    setTimeout(function () {\r\n                        navigate(\"/\");\r\n                        window.location.reload();\r\n                    }, 3500);\r\n                }\r\n            } else {\r\n                setDeleteOK(false);\r\n                throw new Error(\"Error\");\r\n            }\r\n        } catch (err) {\r\n            setErrorMsg(err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <p>{deleteOK ? deleteMsg : errorMgs}</p>\r\n            {user_id === userId || user_role === \"admin\" ? (\r\n                <div>\r\n                    <button\r\n                        className=\"account__delete btn btn__delete\"\r\n                        onClick={() => {\r\n                            const confirmBox = window.confirm(\"Voulez vous vraiment supprimer votre compte ?\");\r\n\r\n                            if (confirmBox === true) {\r\n                                delAccount();\r\n                            }\r\n                        }}\r\n                    >\r\n                        <p hidden>Supprimer ce compte</p>\r\n                        <BiTrash />\r\n                    </button>\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DeleteAccount;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}