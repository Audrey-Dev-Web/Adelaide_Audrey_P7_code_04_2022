{"ast":null,"code":"var _jsxFileName = \"F:\\\\Works\\\\Formation OC\\\\SOUTENANCES\\\\P7\\\\groupomania\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n// import logo from \"./logo.svg\";\n// import \"./sass/App.scss\";\n// import React, { useState, Suspense, lazy } from \"react\";\n// import { BrowserRouter as Router, Route, Routes, Navigate } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport { Routes, Route, BrowserRouter, Router } from \"react-router-dom\";\nimport { Navigation, Footer, Login, Signup, Home, UserProfile } from \"./webpages\"; // import ProtectedRoutes from \"./routes/ProtectedRoutes\"; //Authenticated routes\n// function SayHello(props) {\n//     return props.name;\n// }\n\nimport SayHello from \"./components/SayHello\";\nimport UserLoggedIn from \"./components/UserLoggedIn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst token_test = sessionStorage.getItem(\"isAuthenticate\");\nlet user_id;\n\nif (token_test) {\n  user_id = JSON.parse(token_test).id;\n} else {\n  user_id = \"\";\n}\n\nconst test = /*#__PURE__*/_jsxDEV(SayHello, {\n  name: \"Audrey\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 28,\n  columnNumber: 14\n}, this); // const propsToken = <UserLoggedIn userId={user_id} />;\n\n\nfunction App() {\n  _s();\n\n  // const [user, setUser] = useState(\"\");\n  const user = sessionStorage.getItem(\"isAuthenticate\");\n  const [isAuthenticated, setIsAuthenticated] = useState(user ? true : false); // if (user) {\n  //     setIsAuthenticated(true);\n  // }\n\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App__bgColor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/signup\",\n            element: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 56\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App__bgColor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), test]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile\",\n          element: /*#__PURE__*/_jsxDEV(UserProfile, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this) // ===================> NOT WORKING\n  // const [isAuthenticated, setIsAuthenticated] = useState(false);\n  // <BrowserRouter>\n  //     <div className=\"App\">\n  //         <div className=\"App__bgColor\"></div>\n  //         {/* {isLoggedIn ? <button onClick={logOut}>Logout</button> : <button onClick={logIn}>Login</button>} */}\n  //         <Routes>\n  //             <Navigation />\n  //             {/* <Route path=\"/\" element={<Login />} /> */}\n  //             {/* <Route\n  //                 path=\"/Navigation\"\n  //                 element={\n  //                     <ProtectedRoutes isAuthenticated={isAuthenticated}>\n  //                         <Navigation />\n  //                     </ProtectedRoutes>\n  //                 }\n  //             /> */}\n  //             <Route\n  //                 path=\"/Home\"\n  //                 element={\n  //                     <ProtectedRoutes isAuthenticated={isAuthenticated}>\n  //                         <Home />\n  //                     </ProtectedRoutes>\n  //                 }\n  //             />\n  //             <Route\n  //                 path=\"/UserProfile\"\n  //                 element={\n  //                     <ProtectedRoutes isAuthenticated={isAuthenticated}>\n  //                         <UserProfile />\n  //                     </ProtectedRoutes>\n  //                 }\n  //             />\n  //             {/* <Route path=\"/\" isAuthenticated={isAuthenticated} element={Login} />\n  //         <Route path=\"/home\" isAuthenticated={isAuthenticated} element={Home} /> */}\n  //             {/* <PublicRoute path=\"/signup\" isAuthenticated={isAuthenticated} component={Signup} exact={true} /> */}\n  //             <Footer />\n  //         </Routes>\n  //     </div>\n  // </BrowserRouter>\n  ;\n}\n\n_s(App, \"iwJ2lKQmLfXX6CltGf9olRpeksU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Routes","Route","BrowserRouter","Router","Navigation","Footer","Login","Signup","Home","UserProfile","SayHello","UserLoggedIn","token_test","sessionStorage","getItem","user_id","JSON","parse","id","test","App","user","isAuthenticated","setIsAuthenticated"],"sources":["F:/Works/Formation OC/SOUTENANCES/P7/groupomania/client/src/App.js"],"sourcesContent":["// import logo from \"./logo.svg\";\n// import \"./sass/App.scss\";\n// import React, { useState, Suspense, lazy } from \"react\";\n// import { BrowserRouter as Router, Route, Routes, Navigate } from \"react-router-dom\";\n\nimport React, { useState } from \"react\";\nimport { Routes, Route, BrowserRouter, Router } from \"react-router-dom\";\nimport { Navigation, Footer, Login, Signup, Home, UserProfile } from \"./webpages\";\n\n// import ProtectedRoutes from \"./routes/ProtectedRoutes\"; //Authenticated routes\n\n// function SayHello(props) {\n//     return props.name;\n// }\n\nimport SayHello from \"./components/SayHello\";\nimport UserLoggedIn from \"./components/UserLoggedIn\";\n\nconst token_test = sessionStorage.getItem(\"isAuthenticate\");\n\nlet user_id;\nif (token_test) {\n    user_id = JSON.parse(token_test).id;\n} else {\n    user_id = \"\";\n}\n\nconst test = <SayHello name=\"Audrey\" />;\n// const propsToken = <UserLoggedIn userId={user_id} />;\n\nfunction App() {\n    // const [user, setUser] = useState(\"\");\n\n    const user = sessionStorage.getItem(\"isAuthenticate\");\n\n    const [isAuthenticated, setIsAuthenticated] = useState(user ? true : false);\n\n    // if (user) {\n    //     setIsAuthenticated(true);\n\n    // }\n\n    if (!isAuthenticated) {\n        return (\n            <BrowserRouter>\n                <div className=\"App\">\n                    <div className=\"App__bgColor\"></div>\n                    {/* <Login /> */}\n                    <Routes>\n                        <Route path=\"/\" element={<Login />} />\n                        {/* <Route path=\"/\" element={<Login />} /> */}\n                        <Route path=\"/signup\" element={<Signup />} />\n                    </Routes>\n                </div>\n            </BrowserRouter>\n        );\n    }\n\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n                <div className=\"App__bgColor\"></div>\n                <header className=\"App-header\">\n                    <Navigation />\n                    {test}\n                </header>\n                <Routes>\n                    <Route path=\"/\" element={<Home />} />\n                    <Route path=\"/profile\" element={<UserProfile />} />\n                </Routes>\n                <Footer />\n            </div>\n        </BrowserRouter>\n\n        // ===================> NOT WORKING\n\n        // const [isAuthenticated, setIsAuthenticated] = useState(false);\n        // <BrowserRouter>\n        //     <div className=\"App\">\n        //         <div className=\"App__bgColor\"></div>\n        //         {/* {isLoggedIn ? <button onClick={logOut}>Logout</button> : <button onClick={logIn}>Login</button>} */}\n        //         <Routes>\n        //             <Navigation />\n        //             {/* <Route path=\"/\" element={<Login />} /> */}\n        //             {/* <Route\n        //                 path=\"/Navigation\"\n        //                 element={\n        //                     <ProtectedRoutes isAuthenticated={isAuthenticated}>\n        //                         <Navigation />\n        //                     </ProtectedRoutes>\n        //                 }\n        //             /> */}\n        //             <Route\n        //                 path=\"/Home\"\n        //                 element={\n        //                     <ProtectedRoutes isAuthenticated={isAuthenticated}>\n        //                         <Home />\n        //                     </ProtectedRoutes>\n        //                 }\n        //             />\n        //             <Route\n        //                 path=\"/UserProfile\"\n        //                 element={\n        //                     <ProtectedRoutes isAuthenticated={isAuthenticated}>\n        //                         <UserProfile />\n        //                     </ProtectedRoutes>\n        //                 }\n        //             />\n        //             {/* <Route path=\"/\" isAuthenticated={isAuthenticated} element={Login} />\n        //         <Route path=\"/home\" isAuthenticated={isAuthenticated} element={Home} /> */}\n        //             {/* <PublicRoute path=\"/signup\" isAuthenticated={isAuthenticated} component={Signup} exact={true} /> */}\n        //             <Footer />\n        //         </Routes>\n        //     </div>\n        // </BrowserRouter>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}