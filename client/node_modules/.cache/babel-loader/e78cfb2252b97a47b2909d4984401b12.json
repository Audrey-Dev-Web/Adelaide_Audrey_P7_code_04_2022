{"ast":null,"code":"var _jsxFileName = \"F:\\\\Works\\\\Formation OC\\\\SOUTENANCES\\\\P7\\\\groupomania\\\\client\\\\src\\\\components\\\\PostForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostForm() {\n  _s();\n\n  // ===========> CREATE NEW POST\n  const [postTitle, setPostTitle] = useState(null);\n  const [postContent, setPostContent] = useState(null);\n  const [postImg, setPostImg] = useState(null);\n  const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\n  const token = user.pass;\n  const postObject = {\n    title: postTitle,\n    content: postContent,\n    image: postImg\n  };\n  const formData = new FormData();\n  formData.append(\"title\", postTitle);\n  formData.append(\"content\", postContent);\n  formData.append(\"images\", postImg); // console.log(postImg);\n  // requêtes pour créer un nouvel article\n\n  const sendNewPost = async e => {\n    e.preventDefault();\n\n    try {\n      let res = await fetch(\"http://localhost:8080/api/articles/\", {\n        method: \"POST\",\n        // body: JSON.stringify(postObject),\n        body: formData,\n        headers: {\n          Authorization: `Bearer ${token}`,\n          // Accept: \"application/json\",\n          \"Content-Type\": \"multipart/form-data\" // \"Content-Type\": \"application/json\",\n\n        }\n      });\n      const data = await res.json();\n      console.log(\"======> Verifier l'envoi du post\");\n      console.log(data);\n      window.location.reload();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendNewPost,\n      className: \"newPost__add\",\n      method: \"POST\",\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"newPost__add--title\",\n          type: \"text\",\n          name: \"title\",\n          placeholder: \"Votre titre ici...\",\n          onChange: e => setPostTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"newPost__add--content\",\n          type: \"text\",\n          name: \"content\",\n          placeholder: \"Votre text ici....\",\n          onChange: e => setPostContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"newPost__btn\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"btn\",\n          type: \"file\",\n          name: \"image\",\n          onChange: e => setPostImg(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"newPost__add--send btn\",\n          type: \"submit\",\n          value: \"Envoyer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PostForm, \"IzFLjpoPyaqOe3wixlyYVGTHXYc=\");\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useState","PostForm","postTitle","setPostTitle","postContent","setPostContent","postImg","setPostImg","user","JSON","parse","sessionStorage","getItem","token","pass","postObject","title","content","image","formData","FormData","append","sendNewPost","e","preventDefault","res","fetch","method","body","headers","Authorization","data","json","console","log","window","location","reload","err","target","value"],"sources":["F:/Works/Formation OC/SOUTENANCES/P7/groupomania/client/src/components/PostForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction PostForm() {\r\n    // ===========> CREATE NEW POST\r\n\r\n    const [postTitle, setPostTitle] = useState(null);\r\n    const [postContent, setPostContent] = useState(null);\r\n    const [postImg, setPostImg] = useState(null);\r\n\r\n    const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\r\n    const token = user.pass;\r\n\r\n    const postObject = {\r\n        title: postTitle,\r\n        content: postContent,\r\n        image: postImg,\r\n    };\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"title\", postTitle);\r\n    formData.append(\"content\", postContent);\r\n    formData.append(\"images\", postImg);\r\n    // console.log(postImg);\r\n\r\n    // requêtes pour créer un nouvel article\r\n    const sendNewPost = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            let res = await fetch(\"http://localhost:8080/api/articles/\", {\r\n                method: \"POST\",\r\n                // body: JSON.stringify(postObject),\r\n                body: formData,\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                    // Accept: \"application/json\",\r\n                    \"Content-Type\": \"multipart/form-data\",\r\n                    // \"Content-Type\": \"application/json\",\r\n                },\r\n            });\r\n\r\n            const data = await res.json();\r\n            console.log(\"======> Verifier l'envoi du post\");\r\n            console.log(data);\r\n\r\n            window.location.reload();\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={sendNewPost} className=\"newPost__add\" method=\"POST\" encType=\"multipart/form-data\">\r\n                <label>\r\n                    <input\r\n                        className=\"newPost__add--title\"\r\n                        type=\"text\"\r\n                        name=\"title\"\r\n                        placeholder=\"Votre titre ici...\"\r\n                        onChange={(e) => setPostTitle(e.target.value)}\r\n                    />\r\n                </label>\r\n\r\n                <label>\r\n                    <textarea\r\n                        className=\"newPost__add--content\"\r\n                        type=\"text\"\r\n                        name=\"content\"\r\n                        placeholder=\"Votre text ici....\"\r\n                        onChange={(e) => setPostContent(e.target.value)}\r\n                    />\r\n                </label>\r\n\r\n                <div className=\"newPost__btn\">\r\n                    <input className=\"btn\" type=\"file\" name=\"image\" onChange={(e) => setPostImg(e.target.value)} />\r\n                    <input className=\"newPost__add--send btn\" type=\"submit\" value=\"Envoyer\" />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostForm;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,QAAT,GAAoB;EAAA;;EAChB;EAEA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,IAAD,CAA9C;EACA,MAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;EAEA,MAAMQ,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,gBAAvB,CAAX,CAAb;EACA,MAAMC,KAAK,GAAGL,IAAI,CAACM,IAAnB;EAEA,MAAMC,UAAU,GAAG;IACfC,KAAK,EAAEd,SADQ;IAEfe,OAAO,EAAEb,WAFM;IAGfc,KAAK,EAAEZ;EAHQ,CAAnB;EAMA,MAAMa,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;EACAD,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBnB,SAAzB;EACAiB,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2BjB,WAA3B;EACAe,QAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0Bf,OAA1B,EAnBgB,CAoBhB;EAEA;;EACA,MAAMgB,WAAW,GAAG,MAAOC,CAAP,IAAa;IAC7BA,CAAC,CAACC,cAAF;;IAEA,IAAI;MACA,IAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,qCAAD,EAAwC;QACzDC,MAAM,EAAE,MADiD;QAEzD;QACAC,IAAI,EAAET,QAHmD;QAIzDU,OAAO,EAAE;UACLC,aAAa,EAAG,UAASjB,KAAM,EAD1B;UAEL;UACA,gBAAgB,qBAHX,CAIL;;QAJK;MAJgD,CAAxC,CAArB;MAYA,MAAMkB,IAAI,GAAG,MAAMN,GAAG,CAACO,IAAJ,EAAnB;MACAC,OAAO,CAACC,GAAR,CAAY,kCAAZ;MACAD,OAAO,CAACC,GAAR,CAAYH,IAAZ;MAEAI,MAAM,CAACC,QAAP,CAAgBC,MAAhB;IACH,CAlBD,CAkBE,OAAOC,GAAP,EAAY;MACVL,OAAO,CAACC,GAAR,CAAYI,GAAZ;IACH;EACJ,CAxBD;;EA0BA,oBACI;IAAA,uBACI;MAAM,QAAQ,EAAEhB,WAAhB;MAA6B,SAAS,EAAC,cAAvC;MAAsD,MAAM,EAAC,MAA7D;MAAoE,OAAO,EAAC,qBAA5E;MAAA,wBACI;QAAA,uBACI;UACI,SAAS,EAAC,qBADd;UAEI,IAAI,EAAC,MAFT;UAGI,IAAI,EAAC,OAHT;UAII,WAAW,EAAC,oBAJhB;UAKI,QAAQ,EAAGC,CAAD,IAAOpB,YAAY,CAACoB,CAAC,CAACgB,MAAF,CAASC,KAAV;QALjC;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eAWI;QAAA,uBACI;UACI,SAAS,EAAC,uBADd;UAEI,IAAI,EAAC,MAFT;UAGI,IAAI,EAAC,SAHT;UAII,WAAW,EAAC,oBAJhB;UAKI,QAAQ,EAAGjB,CAAD,IAAOlB,cAAc,CAACkB,CAAC,CAACgB,MAAF,CAASC,KAAV;QALnC;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAXJ,eAqBI;QAAK,SAAS,EAAC,cAAf;QAAA,wBACI;UAAO,SAAS,EAAC,KAAjB;UAAuB,IAAI,EAAC,MAA5B;UAAmC,IAAI,EAAC,OAAxC;UAAgD,QAAQ,EAAGjB,CAAD,IAAOhB,UAAU,CAACgB,CAAC,CAACgB,MAAF,CAASC,KAAV;QAA3E;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAO,SAAS,EAAC,wBAAjB;UAA0C,IAAI,EAAC,QAA/C;UAAwD,KAAK,EAAC;QAA9D;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QArBJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AA8BH;;GA/EQvC,Q;;KAAAA,Q;AAiFT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}