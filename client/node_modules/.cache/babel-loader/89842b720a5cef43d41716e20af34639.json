{"ast":null,"code":"var _jsxFileName = \"F:\\\\Works\\\\Formation OC\\\\SOUTENANCES\\\\P7\\\\groupomania\\\\client\\\\src\\\\components\\\\EditPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditPost(props) {\n  _s();\n\n  // On récupère les données utiles\n  const {\n    post_id,\n    author_id,\n    post_title,\n    post_content,\n    post_img\n  } = props; // On prépare le state local\n\n  const [title, setTitle] = useState(post_title);\n  const [content, setContent] = useState(post_content);\n  const [image, setImage] = useState(post_img); // On récupère les données pour les authorisations\n\n  const [isAuthor, setIsAuthor] = useState(false);\n  const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\n  const token = user.pass;\n  const user_id = user.id; // On créer le formData\n\n  const formData = new FormData();\n  formData.append(\"title\", title);\n  formData.append(\"content\", content);\n  formData.append(\"image\", image); // On configure la requête\n\n  const url = `http://localhost:8080/api/articles/${post_id}`;\n  const reqOptions = {\n    method: \"PUT\",\n    body: formData,\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n\n  const set_author = () => {\n    if (user_id === author_id) {\n      setIsAuthor(true);\n    }\n  };\n\n  useEffect(() => {\n    set_author();\n  }, []); //   const toggleEdit = () => {\n  //     if (!editMod) {\n  //         setEditMod(true);\n  //         console.log(\"mode edition activée !\");\n  //     } else {\n  //         setEditMod(false);\n  //         console.log(\"mode edition désactivée !\");\n  //     }\n  // };\n  // Fonction pour modifier un commentaire\n\n  const editPost = async e => {\n    e.preventDefault();\n\n    try {\n      let res = await fetch(url, reqOptions);\n      let editRes = await res.json();\n      console.log(\"=====> Réponse commentaire envoyé : \");\n      console.log(editRes);\n      window.location.reload();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"EditPost\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 12\n  }, this);\n}\n\n_s(EditPost, \"BLo1UFXCfW55GT6Q3a5C5FW5234=\");\n\n_c = EditPost;\nexport default EditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["React","useState","useEffect","EditPost","props","post_id","author_id","post_title","post_content","post_img","title","setTitle","content","setContent","image","setImage","isAuthor","setIsAuthor","user","JSON","parse","sessionStorage","getItem","token","pass","user_id","id","formData","FormData","append","url","reqOptions","method","body","headers","Authorization","set_author","editPost","e","preventDefault","res","fetch","editRes","json","console","log","window","location","reload","err"],"sources":["F:/Works/Formation OC/SOUTENANCES/P7/groupomania/client/src/components/EditPost.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction EditPost(props) {\r\n    // On récupère les données utiles\r\n    const { post_id, author_id, post_title, post_content, post_img } = props;\r\n\r\n    // On prépare le state local\r\n    const [title, setTitle] = useState(post_title);\r\n    const [content, setContent] = useState(post_content);\r\n    const [image, setImage] = useState(post_img);\r\n\r\n    // On récupère les données pour les authorisations\r\n    const [isAuthor, setIsAuthor] = useState(false);\r\n    const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\r\n    const token = user.pass;\r\n    const user_id = user.id;\r\n\r\n    // On créer le formData\r\n    const formData = new FormData();\r\n    formData.append(\"title\", title);\r\n    formData.append(\"content\", content);\r\n    formData.append(\"image\", image);\r\n\r\n    // On configure la requête\r\n    const url = `http://localhost:8080/api/articles/${post_id}`;\r\n    const reqOptions = {\r\n        method: \"PUT\",\r\n        body: formData,\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    };\r\n\r\n    const set_author = () => {\r\n        if (user_id === author_id) {\r\n            setIsAuthor(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        set_author();\r\n    }, []);\r\n\r\n    //   const toggleEdit = () => {\r\n    //     if (!editMod) {\r\n    //         setEditMod(true);\r\n    //         console.log(\"mode edition activée !\");\r\n    //     } else {\r\n    //         setEditMod(false);\r\n    //         console.log(\"mode edition désactivée !\");\r\n    //     }\r\n    // };\r\n\r\n    // Fonction pour modifier un commentaire\r\n    const editPost = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            let res = await fetch(url, reqOptions);\r\n            let editRes = await res.json();\r\n\r\n            console.log(\"=====> Réponse commentaire envoyé : \");\r\n            console.log(editRes);\r\n\r\n            window.location.reload();\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    return <div>EditPost</div>;\r\n}\r\n\r\nexport default EditPost;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EACrB;EACA,MAAM;IAAEC,OAAF;IAAWC,SAAX;IAAsBC,UAAtB;IAAkCC,YAAlC;IAAgDC;EAAhD,IAA6DL,KAAnE,CAFqB,CAIrB;;EACA,MAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAACM,UAAD,CAAlC;EACA,MAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAACO,YAAD,CAAtC;EACA,MAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAACQ,QAAD,CAAlC,CAPqB,CASrB;;EACA,MAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,KAAD,CAAxC;EACA,MAAMiB,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,gBAAvB,CAAX,CAAb;EACA,MAAMC,KAAK,GAAGL,IAAI,CAACM,IAAnB;EACA,MAAMC,OAAO,GAAGP,IAAI,CAACQ,EAArB,CAbqB,CAerB;;EACA,MAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;EACAD,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBnB,KAAzB;EACAiB,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2BjB,OAA3B;EACAe,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBf,KAAzB,EAnBqB,CAqBrB;;EACA,MAAMgB,GAAG,GAAI,sCAAqCzB,OAAQ,EAA1D;EACA,MAAM0B,UAAU,GAAG;IACfC,MAAM,EAAE,KADO;IAEfC,IAAI,EAAEN,QAFS;IAGfO,OAAO,EAAE;MACLC,aAAa,EAAG,UAASZ,KAAM;IAD1B;EAHM,CAAnB;;EAQA,MAAMa,UAAU,GAAG,MAAM;IACrB,IAAIX,OAAO,KAAKnB,SAAhB,EAA2B;MACvBW,WAAW,CAAC,IAAD,CAAX;IACH;EACJ,CAJD;;EAMAf,SAAS,CAAC,MAAM;IACZkC,UAAU;EACb,CAFQ,EAEN,EAFM,CAAT,CArCqB,CAyCrB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;;EACA,MAAMC,QAAQ,GAAG,MAAOC,CAAP,IAAa;IAC1BA,CAAC,CAACC,cAAF;;IACA,IAAI;MACA,IAAIC,GAAG,GAAG,MAAMC,KAAK,CAACX,GAAD,EAAMC,UAAN,CAArB;MACA,IAAIW,OAAO,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAApB;MAEAC,OAAO,CAACC,GAAR,CAAY,sCAAZ;MACAD,OAAO,CAACC,GAAR,CAAYH,OAAZ;MAEAI,MAAM,CAACC,QAAP,CAAgBC,MAAhB;IACH,CARD,CAQE,OAAOC,GAAP,EAAY;MACVL,OAAO,CAACC,GAAR,CAAYI,GAAZ;IACH;EACJ,CAbD;;EAeA,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AACH;;GApEQ9C,Q;;KAAAA,Q;AAsET,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}