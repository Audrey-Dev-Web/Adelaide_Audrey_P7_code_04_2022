{"ast":null,"code":"var _jsxFileName = \"F:\\\\Works\\\\Formation OC\\\\SOUTENANCES\\\\P7\\\\groupomania\\\\client\\\\src\\\\components\\\\EditPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditPost(props) {\n  _s();\n\n  // On récupère les données utiles\n  const {\n    post_id,\n    author_id,\n    post_title,\n    post_content,\n    post_img\n  } = props; // On prépare le state local\n\n  const [title, setTitle] = useState(post_title);\n  const [content, setContent] = useState(post_content);\n  const [image, setImage] = useState(post_img);\n  const [editMod, setEditMod] = useState(false); // On récupère les données pour les authorisations\n\n  const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\n  const token = user.pass;\n  const user_id = user.id;\n  const [isAuthor, setIsAuthor] = useState(false); // console.log(props);\n  // On créer le formData\n\n  const formData = new FormData();\n  formData.append(\"title\", title);\n  formData.append(\"content\", content);\n  formData.append(\"image\", image); // On configure la requête\n\n  const url = `http://localhost:8080/api/articles/${post_id}`;\n  const reqOptions = {\n    method: \"PUT\",\n    body: formData,\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }; // On vérifis si l'utilisateur est l'auteur du post\n\n  const set_author = () => {\n    if (user_id === author_id) {\n      setIsAuthor(true);\n    }\n  };\n\n  useEffect(() => {\n    set_author();\n  }, []); // console.log(\"Est-ce que l'utilisateur est l'auteur du post ? \", isAuthor, author_id);\n  // console.log(user_id);\n  // Fonction pour modifier un commentaire\n\n  const editPost = async e => {\n    e.preventDefault();\n\n    try {\n      let res = await fetch(url, reqOptions);\n      let editRes = await res.json();\n      console.log(\"=====> Réponse commentaire envoyé : \");\n      console.log(editRes);\n      window.location.reload();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  function handleChange(e) {\n    setImage(e.target.files[0]);\n  } // function handleDelete(e) {\n  //     setImage(null);\n  // }\n\n\n  const toggleEdit = () => {\n    if (!editMod) {\n      setEditMod(true);\n      console.log(\"mode edition activée !\");\n    } else {\n      setEditMod(false);\n      console.log(\"mode edition désactivée !\");\n    }\n  }; // console.log(image);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"postForm postForm__editMod editMod\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: editPost,\n        className: \"postForm__edit--form\",\n        method: \"PUT\",\n        encType: \"multipart/form-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Modifier cet article\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"postForm__edit--title\",\n            type: \"text\",\n            name: \"title\",\n            value: title,\n            placeholder: \"Votre titre ici...\",\n            onChange: e => setTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"postForm__edit--textarea\",\n            type: \"text\",\n            name: \"content\",\n            value: content,\n            placeholder: \"Votre text ici....\",\n            onChange: e => setContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"postForm__edit--imgPreview\",\n          src: image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postForm__edit--btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"btn\",\n            type: \"file\",\n            name: \"image\",\n            src: image,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"postForm__edit--send btn\",\n            type: \"submit\",\n            value: \"Envoyer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditPost, \"D2g1Yc0jadsFHaUOiDp2Fyw3/bg=\");\n\n_c = EditPost;\nexport default EditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["React","useState","useEffect","EditPost","props","post_id","author_id","post_title","post_content","post_img","title","setTitle","content","setContent","image","setImage","editMod","setEditMod","user","JSON","parse","sessionStorage","getItem","token","pass","user_id","id","isAuthor","setIsAuthor","formData","FormData","append","url","reqOptions","method","body","headers","Authorization","set_author","editPost","e","preventDefault","res","fetch","editRes","json","console","log","window","location","reload","err","handleChange","target","files","toggleEdit","value"],"sources":["F:/Works/Formation OC/SOUTENANCES/P7/groupomania/client/src/components/EditPost.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction EditPost(props) {\r\n    // On récupère les données utiles\r\n    const { post_id, author_id, post_title, post_content, post_img } = props;\r\n\r\n    // On prépare le state local\r\n    const [title, setTitle] = useState(post_title);\r\n    const [content, setContent] = useState(post_content);\r\n    const [image, setImage] = useState(post_img);\r\n\r\n    const [editMod, setEditMod] = useState(false);\r\n\r\n    // On récupère les données pour les authorisations\r\n    const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\r\n    const token = user.pass;\r\n    const user_id = user.id;\r\n\r\n    const [isAuthor, setIsAuthor] = useState(false);\r\n\r\n    // console.log(props);\r\n\r\n    // On créer le formData\r\n    const formData = new FormData();\r\n    formData.append(\"title\", title);\r\n    formData.append(\"content\", content);\r\n    formData.append(\"image\", image);\r\n\r\n    // On configure la requête\r\n    const url = `http://localhost:8080/api/articles/${post_id}`;\r\n    const reqOptions = {\r\n        method: \"PUT\",\r\n        body: formData,\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    };\r\n\r\n    // On vérifis si l'utilisateur est l'auteur du post\r\n    const set_author = () => {\r\n        if (user_id === author_id) {\r\n            setIsAuthor(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        set_author();\r\n    }, []);\r\n\r\n    // console.log(\"Est-ce que l'utilisateur est l'auteur du post ? \", isAuthor, author_id);\r\n    // console.log(user_id);\r\n\r\n    // Fonction pour modifier un commentaire\r\n    const editPost = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            let res = await fetch(url, reqOptions);\r\n            let editRes = await res.json();\r\n\r\n            console.log(\"=====> Réponse commentaire envoyé : \");\r\n            console.log(editRes);\r\n\r\n            window.location.reload();\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    function handleChange(e) {\r\n        setImage(e.target.files[0]);\r\n    }\r\n\r\n    // function handleDelete(e) {\r\n    //     setImage(null);\r\n    // }\r\n\r\n    const toggleEdit = () => {\r\n        if (!editMod) {\r\n            setEditMod(true);\r\n            console.log(\"mode edition activée !\");\r\n        } else {\r\n            setEditMod(false);\r\n            console.log(\"mode edition désactivée !\");\r\n        }\r\n    };\r\n\r\n    // console.log(image);\r\n\r\n    return (\r\n        <div>\r\n            {/* {!isAuthor ? null : (\r\n                <button className=\"postForm__edit btn btn__edit\" onClick={toggleEdit}>\r\n                    Editer\r\n                </button>\r\n            )} */}\r\n\r\n            {/* <span className=\"postForm postForm__editMod editMod\" style={{ display: editMod ? \"block\" : \"none\" }}> */}\r\n            <span className=\"postForm postForm__editMod editMod\">\r\n                <form onSubmit={editPost} className=\"postForm__edit--form\" method=\"PUT\" encType=\"multipart/form-data\">\r\n                    <h2>Modifier cet article</h2>\r\n                    <label>\r\n                        <input\r\n                            className=\"postForm__edit--title\"\r\n                            type=\"text\"\r\n                            name=\"title\"\r\n                            value={title}\r\n                            placeholder=\"Votre titre ici...\"\r\n                            onChange={(e) => setTitle(e.target.value)}\r\n                        />\r\n                    </label>\r\n\r\n                    <label>\r\n                        <textarea\r\n                            className=\"postForm__edit--textarea\"\r\n                            type=\"text\"\r\n                            name=\"content\"\r\n                            value={content}\r\n                            placeholder=\"Votre text ici....\"\r\n                            onChange={(e) => setContent(e.target.value)}\r\n                        />\r\n                    </label>\r\n\r\n                    <img className=\"postForm__edit--imgPreview\" src={image} />\r\n                    {/* <button type=\"button\" onClick={handleDelete}>\r\n                        Delete img\r\n                    </button> */}\r\n\r\n                    <div className=\"postForm__edit--btn\">\r\n                        {/* <button className=\"btn btn__file\">Ajouter une image</button> */}\r\n                        {/* <input\r\n                            className=\"btn hide\"\r\n                            type=\"file\"\r\n                            name=\"image\"\r\n                            onChange={(e) => setImage(setImage(e.target.files[0]))}\r\n                        /> */}\r\n                        {/* <input className=\"btn hide\" type=\"file\" name=\"image\" onChange={handleChange} /> */}\r\n                        <input className=\"btn\" type=\"file\" name=\"image\" src={image} onChange={handleChange} />\r\n                        <input className=\"postForm__edit--send btn\" type=\"submit\" value=\"Envoyer\" />\r\n                    </div>\r\n                </form>\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditPost;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}