{"ast":null,"code":"var _jsxFileName = \"F:\\\\Works\\\\Formation OC\\\\SOUTENANCES\\\\P7\\\\groupomania\\\\client\\\\src\\\\components\\\\comments\\\\CommentForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { BiCommentAdd } from \"react-icons/bi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CommentForm(props) {\n  _s();\n\n  const [comment, setComment] = useState(null);\n  const [message, setMessage] = useState(null);\n  const [errorMsg, setErrorMsg] = useState(null);\n  const [error, setError] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const {\n    post_id,\n    access\n  } = props;\n  const token = access;\n  const user_id = access.user_id;\n  const user_role = access.role;\n  const commentObject = {\n    comment: comment\n  };\n  const url = `http://localhost:8080/api/articles/${post_id}/comments`;\n  const reqOptions = {\n    method: \"POST\",\n    body: JSON.stringify(commentObject),\n    headers: {\n      Authorization: `Bearer ${token}`,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  }; // Fonction pour ajouter un commentaire\n\n  const sendComment = async e => {\n    e.preventDefault();\n\n    if (!comment) {\n      setErrorMsg(\"Aucun texte a envoyer\");\n      setError(true);\n      setTimeout(function () {\n        setErrorMsg(null);\n        setError(false);\n      }, 3000);\n    } else {\n      try {\n        let res = await fetch(url, reqOptions);\n        let commentRes = await res.json();\n\n        if (res.ok) {\n          setMessage(\"Commentaire ajouté avec succès\");\n          setSuccess(true);\n          setTimeout(function () {\n            setMessage(null);\n            setSuccess(false);\n            window.location.reload();\n          }, 3000);\n        } else {\n          setErrorMsg(err);\n          setError(true);\n          setTimeout(function () {\n            setErrorMsg(null);\n            setError(false);\n          }, 3000);\n        }\n      } catch (err) {\n        setErrorMsg(err);\n        setError(true);\n        setTimeout(function () {\n          setErrorMsg(null);\n          setError(false);\n        }, 3000);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"commentForm\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendComment,\n      className: \"commentForm__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Ajouter un commentaire\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"comment\",\n          className: \"commentForm__form--textarea\",\n          type: \"text\",\n          name: \"content\",\n          placeholder: \"Ajouter un nouveau commentaire\",\n          onChange: e => setComment(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), !error ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"errorMsg\",\n        children: errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 34\n      }, this), !success ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"validateMsg\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"commentForm__form--btn btn\",\n          type: \"submit\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            hidden: true,\n            children: \"Envoyer votre commentaire\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(BiCommentAdd, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CommentForm, \"jgmIx8LlRXY2LwtCmc0rFv+HG18=\");\n\n_c = CommentForm;\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"names":["React","useState","BiCommentAdd","CommentForm","props","comment","setComment","message","setMessage","errorMsg","setErrorMsg","error","setError","success","setSuccess","post_id","access","token","user_id","user_role","role","commentObject","url","reqOptions","method","body","JSON","stringify","headers","Authorization","Accept","sendComment","e","preventDefault","setTimeout","res","fetch","commentRes","json","ok","window","location","reload","err","target","value"],"sources":["F:/Works/Formation OC/SOUTENANCES/P7/groupomania/client/src/components/comments/CommentForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { BiCommentAdd } from \"react-icons/bi\";\r\n\r\nfunction CommentForm(props) {\r\n    const [comment, setComment] = useState(null);\r\n    const [message, setMessage] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState(null);\r\n    const [error, setError] = useState(false);\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    const { post_id, access } = props;\r\n\r\n    const token = access;\r\n    const user_id = access.user_id;\r\n    const user_role = access.role;\r\n\r\n    const commentObject = {\r\n        comment: comment,\r\n    };\r\n\r\n    const url = `http://localhost:8080/api/articles/${post_id}/comments`;\r\n    const reqOptions = {\r\n        method: \"POST\",\r\n        body: JSON.stringify(commentObject),\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    // Fonction pour ajouter un commentaire\r\n    const sendComment = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!comment) {\r\n            setErrorMsg(\"Aucun texte a envoyer\");\r\n            setError(true);\r\n            setTimeout(function () {\r\n                setErrorMsg(null);\r\n                setError(false);\r\n            }, 3000);\r\n        } else {\r\n            try {\r\n                let res = await fetch(url, reqOptions);\r\n                let commentRes = await res.json();\r\n\r\n                if (res.ok) {\r\n                    setMessage(\"Commentaire ajouté avec succès\");\r\n                    setSuccess(true);\r\n                    setTimeout(function () {\r\n                        setMessage(null);\r\n                        setSuccess(false);\r\n                        window.location.reload();\r\n                    }, 3000);\r\n                } else {\r\n                    setErrorMsg(err);\r\n                    setError(true);\r\n                    setTimeout(function () {\r\n                        setErrorMsg(null);\r\n                        setError(false);\r\n                    }, 3000);\r\n                }\r\n            } catch (err) {\r\n                setErrorMsg(err);\r\n                setError(true);\r\n                setTimeout(function () {\r\n                    setErrorMsg(null);\r\n                    setError(false);\r\n                }, 3000);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"commentForm\">\r\n            <form onSubmit={sendComment} className=\"commentForm__form\">\r\n                <label htmlFor=\"comment\">\r\n                    <h3>Ajouter un commentaire</h3>\r\n                    <textarea\r\n                        id=\"comment\"\r\n                        className=\"commentForm__form--textarea\"\r\n                        type=\"text\"\r\n                        name=\"content\"\r\n                        placeholder=\"Ajouter un nouveau commentaire\"\r\n                        onChange={(e) => setComment(e.target.value)}\r\n                    />\r\n                </label>\r\n\r\n                {!error ? null : <div className=\"errorMsg\">{errorMsg}</div>}\r\n                {!success ? null : <div className=\"validateMsg\">{message}</div>}\r\n\r\n                <div>\r\n                    <button className=\"commentForm__form--btn btn\" type=\"submit\">\r\n                        <p hidden>Envoyer votre commentaire</p>\r\n                        <BiCommentAdd />\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CommentForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}