{"ast":null,"code":"var _jsxFileName = \"F:\\\\Works\\\\Formation OC\\\\SOUTENANCES\\\\P7\\\\groupomania\\\\client\\\\src\\\\App.js\";\n// import logo from \"./logo.svg\";\n// import \"./sass/App.scss\";\n// import React, { useState, Suspense, lazy } from \"react\";\n// import { BrowserRouter as Router, Route, Routes, Navigate } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport { Routes, Route, BrowserRouter } from \"react-router-dom\";\nimport { Navigation, Footer, Login, Home, UserProfile } from \"./webpages\"; // Tutoriel Private Routes react\n// import Loader from \"shareComponent/Loader\";\n\nimport ProtectedRoutes from \"./routes/ProtectedRoutes\"; //Authenticated routes\n// import PublicRoute from \"./routes/PublicRoute\";\n// import PrivateRoute from \"./routes/PrivateRoute\";\n// const LoginPage = lazy(() => import(\"./webpages/Login\"));\n// const Register = lazy(() => import(\"components/Register\"));\n// const ForgotPassword = lazy(() => import(\"components/ForgotPassword\"));\n// const NoFoundComponent = lazy(() => import(\"components/NoFoundComponent\"));\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  // let isLoggedIn = localStorage.getItem(\"user_id\");\n  // // console.log(isLoggedIn);\n  // const UserContext = React.createContext(\"user_logged_in\");\n  // if (!isLoggedIn) {\n  //     return (\n  //         <div className=\"App\">\n  //             <div className=\"App__bgColor\"></div>\n  //             <Router>\n  //                 <Login />\n  //             </Router>\n  //         </div>\n  //     );\n  // }\n  // function getToken() {\n  //     return localStorage.getItem(\"user_token\");\n  // }\n  // const isAuthenticated = getToken();\n  const isAuthenticated = localStorage.getItem(\"user_token\");\n  return (\n    /*#__PURE__*/\n    // <UserContext.Provider value=\"user_not_logged_in\"></UserContext.Provider>\n    // <div className=\"App\">\n    //     <div className=\"App__bgColor\"></div>\n    //     <Router>\n    //         {/* <Login /> */}\n    //         <header className=\"App-header\">\n    //             <Navigation isLoggedIn={isLoggedIn} />\n    //         </header>\n    //         <Routes>\n    //             <Route path=\"/Home\" element={<Home isLoggedIn={isLoggedIn} />} />\n    //             <Route path=\"/User_profile\" element={<User_profile isLoggedIn={isLoggedIn} />} />\n    //         </Routes>\n    //         <Footer />\n    //     </Router>\n    // </div>\n    // const [isAuthenticated, setIsAuthenticated] = useState(false);\n    _jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App__bgColor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/home\",\n            element: /*#__PURE__*/_jsxDEV(ProtectedRoutes, {\n              isAuthenticated: isAuthenticated,\n              children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/profile\",\n            element: /*#__PURE__*/_jsxDEV(ProtectedRoutes, {\n              isAuthenticated: isAuthenticated,\n              children: /*#__PURE__*/_jsxDEV(UserProfile, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) // <Router>\n    //     {/* <Suspense fallback={<Loader />}> */}\n    //     <Suspense>\n    //         <Routes>\n    //             <PrivateRoute path=\"/Home\" is isAuthenticated={isAuthenticated} component={Home} exact={true} />\n    //             <PublicRoute path=\"/\" isAuthenticated={isAuthenticated} component={Login} exact={true} />\n    //             {/* <Login /> */}\n    //             {/* </PublicRoute> */}\n    //             {/* <PublicRoute path=\"/register\" isAuthenticated={isAuthenticated}>\n    //                 <Register />\n    //             </PublicRoute> */}\n    //             {/* <PublicRoute path=\"/forgot-password\" isAuthenticated={isAuthenticated}>\n    //                 <ForgotPassword />\n    //             </PublicRoute> */}\n    //             {/* <PrivateRoute path=\"/\" isAuthenticated={isAuthenticated}>\n    //                 <ProtectedRoutes />\n    //             </PrivateRoute> */}\n    //             {/* <Route path=\"*\">\n    //                 <NoFoundComponent />\n    //             </Route> */}\n    //         </Routes>\n    //     </Suspense>\n    // </Router>\n\n  );\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Routes","Route","BrowserRouter","Navigation","Footer","Login","Home","UserProfile","ProtectedRoutes","App","isAuthenticated","localStorage","getItem"],"sources":["F:/Works/Formation OC/SOUTENANCES/P7/groupomania/client/src/App.js"],"sourcesContent":["// import logo from \"./logo.svg\";\n// import \"./sass/App.scss\";\n// import React, { useState, Suspense, lazy } from \"react\";\n// import { BrowserRouter as Router, Route, Routes, Navigate } from \"react-router-dom\";\n\nimport React, { useState } from \"react\";\nimport { Routes, Route, BrowserRouter } from \"react-router-dom\";\nimport { Navigation, Footer, Login, Home, UserProfile } from \"./webpages\";\n\n// Tutoriel Private Routes react\n// import Loader from \"shareComponent/Loader\";\nimport ProtectedRoutes from \"./routes/ProtectedRoutes\"; //Authenticated routes\n// import PublicRoute from \"./routes/PublicRoute\";\n// import PrivateRoute from \"./routes/PrivateRoute\";\n\n// const LoginPage = lazy(() => import(\"./webpages/Login\"));\n// const Register = lazy(() => import(\"components/Register\"));\n// const ForgotPassword = lazy(() => import(\"components/ForgotPassword\"));\n// const NoFoundComponent = lazy(() => import(\"components/NoFoundComponent\"));\n\nfunction App() {\n    // let isLoggedIn = localStorage.getItem(\"user_id\");\n    // // console.log(isLoggedIn);\n\n    // const UserContext = React.createContext(\"user_logged_in\");\n\n    // if (!isLoggedIn) {\n    //     return (\n    //         <div className=\"App\">\n    //             <div className=\"App__bgColor\"></div>\n    //             <Router>\n    //                 <Login />\n    //             </Router>\n    //         </div>\n    //     );\n    // }\n\n    // function getToken() {\n    //     return localStorage.getItem(\"user_token\");\n    // }\n\n    // const isAuthenticated = getToken();\n    const isAuthenticated = localStorage.getItem(\"user_token\");\n\n    return (\n        // <UserContext.Provider value=\"user_not_logged_in\"></UserContext.Provider>\n        // <div className=\"App\">\n        //     <div className=\"App__bgColor\"></div>\n        //     <Router>\n        //         {/* <Login /> */}\n        //         <header className=\"App-header\">\n        //             <Navigation isLoggedIn={isLoggedIn} />\n        //         </header>\n        //         <Routes>\n        //             <Route path=\"/Home\" element={<Home isLoggedIn={isLoggedIn} />} />\n        //             <Route path=\"/User_profile\" element={<User_profile isLoggedIn={isLoggedIn} />} />\n        //         </Routes>\n        //         <Footer />\n        //     </Router>\n        // </div>\n\n        // const [isAuthenticated, setIsAuthenticated] = useState(false);\n        <BrowserRouter>\n            <div className=\"App\">\n                <div className=\"App__bgColor\"></div>\n                <Routes>\n                    {/* <Navigation /> */}\n                    <Route path=\"/\" element={<Login />} />\n                    <Route\n                        path=\"/home\"\n                        element={\n                            <ProtectedRoutes isAuthenticated={isAuthenticated}>\n                                <Home />\n                            </ProtectedRoutes>\n                        }\n                    />\n                    <Route\n                        path=\"/profile\"\n                        element={\n                            <ProtectedRoutes isAuthenticated={isAuthenticated}>\n                                <UserProfile />\n                            </ProtectedRoutes>\n                        }\n                    />\n                    {/* <Route path=\"/\" isAuthenticated={isAuthenticated} element={Login} />\n                <Route path=\"/home\" isAuthenticated={isAuthenticated} element={Home} /> */}\n                    {/* <PublicRoute path=\"/signup\" isAuthenticated={isAuthenticated} component={Signup} exact={true} /> */}\n                </Routes>\n            </div>\n        </BrowserRouter>\n        // <Router>\n        //     {/* <Suspense fallback={<Loader />}> */}\n        //     <Suspense>\n        //         <Routes>\n        //             <PrivateRoute path=\"/Home\" is isAuthenticated={isAuthenticated} component={Home} exact={true} />\n        //             <PublicRoute path=\"/\" isAuthenticated={isAuthenticated} component={Login} exact={true} />\n        //             {/* <Login /> */}\n        //             {/* </PublicRoute> */}\n        //             {/* <PublicRoute path=\"/register\" isAuthenticated={isAuthenticated}>\n        //                 <Register />\n        //             </PublicRoute> */}\n        //             {/* <PublicRoute path=\"/forgot-password\" isAuthenticated={isAuthenticated}>\n        //                 <ForgotPassword />\n        //             </PublicRoute> */}\n        //             {/* <PrivateRoute path=\"/\" isAuthenticated={isAuthenticated}>\n        //                 <ProtectedRoutes />\n        //             </PrivateRoute> */}\n        //             {/* <Route path=\"*\">\n        //                 <NoFoundComponent />\n        //             </Route> */}\n        //         </Routes>\n        //     </Suspense>\n        // </Router>\n    );\n}\n\nexport default App;\n"],"mappings":";AAAA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,aAAxB,QAA6C,kBAA7C;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,KAA7B,EAAoCC,IAApC,EAA0CC,WAA1C,QAA6D,YAA7D,C,CAEA;AACA;;AACA,OAAOC,eAAP,MAA4B,0BAA5B,C,CAAwD;AACxD;AACA;AAEA;AACA;AACA;AACA;;;;AAEA,SAASC,GAAT,GAAe;EACX;EACA;EAEA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA,MAAMC,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAxB;EAEA;IAAA;IACI;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA,QAAC,aAAD;MAAA,uBACI;QAAK,SAAS,EAAC,KAAf;QAAA,wBACI;UAAK,SAAS,EAAC;QAAf;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,MAAD;UAAA,wBAEI,QAAC,KAAD;YAAO,IAAI,EAAC,GAAZ;YAAgB,OAAO,eAAE,QAAC,KAAD;cAAA;cAAA;cAAA;YAAA;UAAzB;YAAA;YAAA;YAAA;UAAA,QAFJ,eAGI,QAAC,KAAD;YACI,IAAI,EAAC,OADT;YAEI,OAAO,eACH,QAAC,eAAD;cAAiB,eAAe,EAAEF,eAAlC;cAAA,uBACI,QAAC,IAAD;gBAAA;gBAAA;gBAAA;cAAA;YADJ;cAAA;cAAA;cAAA;YAAA;UAHR;YAAA;YAAA;YAAA;UAAA,QAHJ,eAWI,QAAC,KAAD;YACI,IAAI,EAAC,UADT;YAEI,OAAO,eACH,QAAC,eAAD;cAAiB,eAAe,EAAEA,eAAlC;cAAA,uBACI,QAAC,WAAD;gBAAA;gBAAA;gBAAA;cAAA;YADJ;cAAA;cAAA;cAAA;YAAA;UAHR;YAAA;YAAA;YAAA;UAAA,QAXJ;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAlBJ,CA8CI;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;EApEJ;AAsEH;;KA9FQD,G;AAgGT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}