{"ast":null,"code":"var _jsxFileName = \"F:\\\\Works\\\\Formation OC\\\\SOUTENANCES\\\\P7\\\\groupomania\\\\client\\\\src\\\\components\\\\Comments.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Comments(props) {\n  _s();\n\n  const {\n    post_id\n  } = props;\n  const [data, setData] = useState({\n    data: []\n  });\n  const [dataIsLoaded, setDataIsLoaded] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [err, setErr] = useState(\"\");\n  const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\n  const token = user.pass;\n  const url = `http://localhost:8080/api/articles/${post_id}/comments`;\n  const reqOptions = {\n    method: \"GET\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  const handleClick = async () => {\n    setIsLoading(true);\n\n    try {\n      const res = await fetch(url, reqOptions);\n\n      if (!res.ok) {\n        throw new Error(`Error! status: ${res.status}`);\n      }\n\n      const result = await res.json();\n      console.log(\"result is: \", result);\n      console.log(\"Résultat de data.allComments[0].id: \", data.allComments[0].id); // console.log(\"result is: \", JSON.stringify(result, null, 4));\n\n      setData(result);\n    } catch (err) {\n      setErr(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  if (!DataIsLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Pleses wait some time.... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [err && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: err\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Fetch data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 27\n    }, this), data.allComments.map(comment => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this) // return(\n  // <div>\n  //     Comments\n  // </div>\n  // );\n  ;\n}\n\n_s(Comments, \"QsgCAcYkSwU4TxyDPeUhyNbYPZw=\");\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","Comments","props","post_id","data","setData","dataIsLoaded","setDataIsLoaded","isLoading","setIsLoading","err","setErr","user","JSON","parse","sessionStorage","getItem","token","pass","url","reqOptions","method","headers","Authorization","Accept","handleClick","res","fetch","ok","Error","status","result","json","console","log","allComments","id","message","DataIsLoaded","map","comment"],"sources":["F:/Works/Formation OC/SOUTENANCES/P7/groupomania/client/src/components/Comments.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Comments(props) {\r\n    const { post_id } = props;\r\n\r\n    const [data, setData] = useState({ data: [] });\r\n    const [dataIsLoaded, setDataIsLoaded] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [err, setErr] = useState(\"\");\r\n\r\n    const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\r\n    const token = user.pass;\r\n\r\n    const url = `http://localhost:8080/api/articles/${post_id}/comments`;\r\n    const reqOptions = {\r\n        method: \"GET\",\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    const handleClick = async () => {\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const res = await fetch(url, reqOptions);\r\n\r\n            if (!res.ok) {\r\n                throw new Error(`Error! status: ${res.status}`);\r\n            }\r\n\r\n            const result = await res.json();\r\n\r\n            console.log(\"result is: \", result);\r\n            console.log(\"Résultat de data.allComments[0].id: \", data.allComments[0].id);\r\n            // console.log(\"result is: \", JSON.stringify(result, null, 4));\r\n\r\n            setData(result);\r\n        } catch (err) {\r\n            setErr(err.message);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    if (!DataIsLoaded) {\r\n        return (\r\n            <div>\r\n                <h1> Pleses wait some time.... </h1>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    console.log(data);\r\n\r\n    return (\r\n        <div>\r\n            {err && <h2>{err}</h2>}\r\n            <button onClick={handleClick}>Fetch data</button>\r\n            {isLoading && <h2>Loading...</h2>}\r\n\r\n            {data.allComments.map((comment) => {\r\n                return (\r\n                    <div key={comment.id}>\r\n                        <p>{comment.comment}</p>\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n\r\n        // return(\r\n        // <div>\r\n        //     Comments\r\n        // </div>\r\n        // );\r\n    );\r\n}\r\n\r\nexport default Comments;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EACrB,MAAM;IAAEC;EAAF,IAAcD,KAApB;EAEA,MAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC;IAAEI,IAAI,EAAE;EAAR,CAAD,CAAhC;EACA,MAAM,CAACE,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,KAAD,CAAhD;EACA,MAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACU,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,EAAD,CAA9B;EAEA,MAAMY,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,gBAAvB,CAAX,CAAb;EACA,MAAMC,KAAK,GAAGL,IAAI,CAACM,IAAnB;EAEA,MAAMC,GAAG,GAAI,sCAAqChB,OAAQ,WAA1D;EACA,MAAMiB,UAAU,GAAG;IACfC,MAAM,EAAE,KADO;IAEfC,OAAO,EAAE;MACLC,aAAa,EAAG,UAASN,KAAM,EAD1B;MAELO,MAAM,EAAE,kBAFH;MAGL,gBAAgB;IAHX;EAFM,CAAnB;;EASA,MAAMC,WAAW,GAAG,YAAY;IAC5BhB,YAAY,CAAC,IAAD,CAAZ;;IAEA,IAAI;MACA,MAAMiB,GAAG,GAAG,MAAMC,KAAK,CAACR,GAAD,EAAMC,UAAN,CAAvB;;MAEA,IAAI,CAACM,GAAG,CAACE,EAAT,EAAa;QACT,MAAM,IAAIC,KAAJ,CAAW,kBAAiBH,GAAG,CAACI,MAAO,EAAvC,CAAN;MACH;;MAED,MAAMC,MAAM,GAAG,MAAML,GAAG,CAACM,IAAJ,EAArB;MAEAC,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,MAA3B;MACAE,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoD9B,IAAI,CAAC+B,WAAL,CAAiB,CAAjB,EAAoBC,EAAxE,EAVA,CAWA;;MAEA/B,OAAO,CAAC0B,MAAD,CAAP;IACH,CAdD,CAcE,OAAOrB,GAAP,EAAY;MACVC,MAAM,CAACD,GAAG,CAAC2B,OAAL,CAAN;IACH,CAhBD,SAgBU;MACN5B,YAAY,CAAC,KAAD,CAAZ;IACH;EACJ,CAtBD;;EAwBA,IAAI,CAAC6B,YAAL,EAAmB;IACf,oBACI;MAAA,uBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ;EAKH;;EAEDL,OAAO,CAACC,GAAR,CAAY9B,IAAZ;EAEA,oBACI;IAAA,WACKM,GAAG,iBAAI;MAAA,UAAKA;IAAL;MAAA;MAAA;MAAA;IAAA,QADZ,eAEI;MAAQ,OAAO,EAAEe,WAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,EAGKjB,SAAS,iBAAI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHlB,EAKKJ,IAAI,CAAC+B,WAAL,CAAiBI,GAAjB,CAAsBC,OAAD,IAAa;MAC/B,oBACI;QAAA,uBACI;UAAA,UAAIA,OAAO,CAACA;QAAZ;UAAA;UAAA;UAAA;QAAA;MADJ,GAAUA,OAAO,CAACJ,EAAlB;QAAA;QAAA;QAAA;MAAA,QADJ;IAKH,CANA,CALL;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ,CAeI;EACA;EACA;EACA;EACA;EAnBJ;AAqBH;;GA5EQnC,Q;;KAAAA,Q;AA8ET,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}