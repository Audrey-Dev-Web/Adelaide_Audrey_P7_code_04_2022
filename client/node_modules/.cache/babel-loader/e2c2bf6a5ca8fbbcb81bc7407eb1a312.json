{"ast":null,"code":"var _jsxFileName = \"F:\\\\Works\\\\Formation OC\\\\SOUTENANCES\\\\P7\\\\groupomania\\\\client\\\\src\\\\routes\\\\ProtectedRoutes.js\";\n// import { Suspense } from \"react\";\n// import { Route, Routes } from \"react-router-dom\";\n// import routes from \"./Routes\"; // Route list\n// // import Loader from \"sharedComponent/Loader\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoutes = _ref => {\n  let {\n    isAuthenticated,\n    children\n  } = _ref;\n\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 16\n    }, this);\n  }\n\n  return children; // <Routes>\n  //     {/* <Suspense fallback={<Loader />}> */}\n  //     <Suspense>\n  //         {routes.map(({ component: Component, path, exact }) => (\n  //             <Route path={`/${path}`} key={path} exact={exact}>\n  //                 <Component />\n  //             </Route>\n  //         ))}\n  //     </Suspense>\n  // </Routes>\n};\n\n_c = ProtectedRoutes;\nexport default ProtectedRoutes;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoutes\");","map":{"version":3,"names":["Navigate","ProtectedRoutes","isAuthenticated","children"],"sources":["F:/Works/Formation OC/SOUTENANCES/P7/groupomania/client/src/routes/ProtectedRoutes.js"],"sourcesContent":["// import { Suspense } from \"react\";\r\n// import { Route, Routes } from \"react-router-dom\";\r\n// import routes from \"./Routes\"; // Route list\r\n// // import Loader from \"sharedComponent/Loader\";\r\n\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst ProtectedRoutes = ({ isAuthenticated, children }) => {\r\n    if (!isAuthenticated) {\r\n        return <Navigate to=\"/\" replace />;\r\n    }\r\n\r\n    return children;\r\n    // <Routes>\r\n    //     {/* <Suspense fallback={<Loader />}> */}\r\n    //     <Suspense>\r\n    //         {routes.map(({ component: Component, path, exact }) => (\r\n    //             <Route path={`/${path}`} key={path} exact={exact}>\r\n    //                 <Component />\r\n    //             </Route>\r\n    //         ))}\r\n    //     </Suspense>\r\n    // </Routes>\r\n};\r\n\r\nexport default ProtectedRoutes;\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AAEA,SAASA,QAAT,QAAyB,kBAAzB;;;AAEA,MAAMC,eAAe,GAAG,QAAmC;EAAA,IAAlC;IAAEC,eAAF;IAAmBC;EAAnB,CAAkC;;EACvD,IAAI,CAACD,eAAL,EAAsB;IAClB,oBAAO,QAAC,QAAD;MAAU,EAAE,EAAC,GAAb;MAAiB,OAAO;IAAxB;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EAED,OAAOC,QAAP,CALuD,CAMvD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACH,CAhBD;;KAAMF,e;AAkBN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}