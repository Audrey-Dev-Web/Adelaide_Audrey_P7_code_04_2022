{"ast":null,"code":"var _jsxFileName = \"F:\\\\Works\\\\Formation OC\\\\SOUTENANCES\\\\P7\\\\groupomania\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n// import logo from \"./logo.svg\";\n// import \"./sass/App.scss\";\n// import React, { useState, Suspense, lazy } from \"react\";\n// import { BrowserRouter as Router, Route, Routes, Navigate } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport { Routes, Route, BrowserRouter, Router } from \"react-router-dom\";\nimport { Navigation, Footer, Login, Home, UserProfile } from \"./webpages\"; // import ProtectedRoutes from \"./routes/ProtectedRoutes\"; //Authenticated routes\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const [user, setUser] = useState(\"\");\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const user = sessionStorage.getItem(\"isAuthenticate\");\n\n  if (user) {\n    setIsAuthenticated(true);\n\n    if (isAuthenticated == false) {\n      return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"App__bgColor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"App__bgColor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n            className: \"App-header\",\n            children: /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 54\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/profile\",\n              element: /*#__PURE__*/_jsxDEV(UserProfile, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 61\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this) // ===================> NOT WORKING\n      // const [isAuthenticated, setIsAuthenticated] = useState(false);\n      // <BrowserRouter>\n      //     <div className=\"App\">\n      //         <div className=\"App__bgColor\"></div>\n      //         {/* {isLoggedIn ? <button onClick={logOut}>Logout</button> : <button onClick={logIn}>Login</button>} */}\n      //         <Routes>\n      //             <Navigation />\n      //             {/* <Route path=\"/\" element={<Login />} /> */}\n      //             {/* <Route\n      //                 path=\"/Navigation\"\n      //                 element={\n      //                     <ProtectedRoutes isAuthenticated={isAuthenticated}>\n      //                         <Navigation />\n      //                     </ProtectedRoutes>\n      //                 }\n      //             /> */}\n      //             <Route\n      //                 path=\"/Home\"\n      //                 element={\n      //                     <ProtectedRoutes isAuthenticated={isAuthenticated}>\n      //                         <Home />\n      //                     </ProtectedRoutes>\n      //                 }\n      //             />\n      //             <Route\n      //                 path=\"/UserProfile\"\n      //                 element={\n      //                     <ProtectedRoutes isAuthenticated={isAuthenticated}>\n      //                         <UserProfile />\n      //                     </ProtectedRoutes>\n      //                 }\n      //             />\n      //             {/* <Route path=\"/\" isAuthenticated={isAuthenticated} element={Login} />\n      //         <Route path=\"/home\" isAuthenticated={isAuthenticated} element={Home} /> */}\n      //             {/* <PublicRoute path=\"/signup\" isAuthenticated={isAuthenticated} component={Signup} exact={true} /> */}\n      //             <Footer />\n      //         </Routes>\n      //     </div>\n      // </BrowserRouter>\n      ;\n    }\n  }\n}\n\n_s(App, \"BT2f1XiqCgFHwobQTWR7kond0Ig=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Routes","Route","BrowserRouter","Router","Navigation","Footer","Login","Home","UserProfile","App","isAuthenticated","setIsAuthenticated","user","sessionStorage","getItem"],"sources":["F:/Works/Formation OC/SOUTENANCES/P7/groupomania/client/src/App.js"],"sourcesContent":["// import logo from \"./logo.svg\";\n// import \"./sass/App.scss\";\n// import React, { useState, Suspense, lazy } from \"react\";\n// import { BrowserRouter as Router, Route, Routes, Navigate } from \"react-router-dom\";\n\nimport React, { useState } from \"react\";\nimport { Routes, Route, BrowserRouter, Router } from \"react-router-dom\";\nimport { Navigation, Footer, Login, Home, UserProfile } from \"./webpages\";\n\n// import ProtectedRoutes from \"./routes/ProtectedRoutes\"; //Authenticated routes\n\nfunction App() {\n    // const [user, setUser] = useState(\"\");\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n    const user = sessionStorage.getItem(\"isAuthenticate\");\n\n    if (user) {\n        setIsAuthenticated(true);\n\n        if (isAuthenticated == false) {\n            return (\n                <BrowserRouter>\n                    <div className=\"App\">\n                        <div className=\"App__bgColor\"></div>\n                        <Login />\n                    </div>\n                </BrowserRouter>\n            );\n        } else {\n            return (\n                <BrowserRouter>\n                    <div className=\"App\">\n                        <div className=\"App__bgColor\"></div>\n                        {/* <Login /> */}\n                        <header className=\"App-header\">\n                            <Navigation />\n                        </header>\n                        <Routes>\n                            <Route path=\"/\" element={<Home />} />\n                            <Route path=\"/profile\" element={<UserProfile />} />\n                        </Routes>\n                        <Footer />\n                    </div>\n                </BrowserRouter>\n\n                // ===================> NOT WORKING\n\n                // const [isAuthenticated, setIsAuthenticated] = useState(false);\n                // <BrowserRouter>\n                //     <div className=\"App\">\n                //         <div className=\"App__bgColor\"></div>\n                //         {/* {isLoggedIn ? <button onClick={logOut}>Logout</button> : <button onClick={logIn}>Login</button>} */}\n                //         <Routes>\n                //             <Navigation />\n                //             {/* <Route path=\"/\" element={<Login />} /> */}\n                //             {/* <Route\n                //                 path=\"/Navigation\"\n                //                 element={\n                //                     <ProtectedRoutes isAuthenticated={isAuthenticated}>\n                //                         <Navigation />\n                //                     </ProtectedRoutes>\n                //                 }\n                //             /> */}\n                //             <Route\n                //                 path=\"/Home\"\n                //                 element={\n                //                     <ProtectedRoutes isAuthenticated={isAuthenticated}>\n                //                         <Home />\n                //                     </ProtectedRoutes>\n                //                 }\n                //             />\n                //             <Route\n                //                 path=\"/UserProfile\"\n                //                 element={\n                //                     <ProtectedRoutes isAuthenticated={isAuthenticated}>\n                //                         <UserProfile />\n                //                     </ProtectedRoutes>\n                //                 }\n                //             />\n                //             {/* <Route path=\"/\" isAuthenticated={isAuthenticated} element={Login} />\n                //         <Route path=\"/home\" isAuthenticated={isAuthenticated} element={Home} /> */}\n                //             {/* <PublicRoute path=\"/signup\" isAuthenticated={isAuthenticated} component={Signup} exact={true} /> */}\n                //             <Footer />\n                //         </Routes>\n                //     </div>\n                // </BrowserRouter>\n            );\n        }\n    }\n}\n\nexport default App;\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,aAAxB,EAAuCC,MAAvC,QAAqD,kBAArD;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,KAA7B,EAAoCC,IAApC,EAA0CC,WAA1C,QAA6D,YAA7D,C,CAEA;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACX;EACA,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCZ,QAAQ,CAAC,KAAD,CAAtD;EAEA,MAAMa,IAAI,GAAGC,cAAc,CAACC,OAAf,CAAuB,gBAAvB,CAAb;;EAEA,IAAIF,IAAJ,EAAU;IACND,kBAAkB,CAAC,IAAD,CAAlB;;IAEA,IAAID,eAAe,IAAI,KAAvB,EAA8B;MAC1B,oBACI,QAAC,aAAD;QAAA,uBACI;UAAK,SAAS,EAAC,KAAf;UAAA,wBACI;YAAK,SAAS,EAAC;UAAf;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI,QAAC,KAAD;YAAA;YAAA;YAAA;UAAA,QAFJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ;IAQH,CATD,MASO;MACH,oBACI,QAAC,aAAD;QAAA,uBACI;UAAK,SAAS,EAAC,KAAf;UAAA,wBACI;YAAK,SAAS,EAAC;UAAf;YAAA;YAAA;YAAA;UAAA,QADJ,eAGI;YAAQ,SAAS,EAAC,YAAlB;YAAA,uBACI,QAAC,UAAD;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA,QAHJ,eAMI,QAAC,MAAD;YAAA,wBACI,QAAC,KAAD;cAAO,IAAI,EAAC,GAAZ;cAAgB,OAAO,eAAE,QAAC,IAAD;gBAAA;gBAAA;gBAAA;cAAA;YAAzB;cAAA;cAAA;cAAA;YAAA,QADJ,eAEI,QAAC,KAAD;cAAO,IAAI,EAAC,UAAZ;cAAuB,OAAO,eAAE,QAAC,WAAD;gBAAA;gBAAA;gBAAA;cAAA;YAAhC;cAAA;cAAA;cAAA;YAAA,QAFJ;UAAA;YAAA;YAAA;YAAA;UAAA,QANJ,eAUI,QAAC,MAAD;YAAA;YAAA;YAAA;UAAA,QAVJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,CAgBI;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAxDJ;IA0DH;EACJ;AACJ;;GA/EQD,G;;KAAAA,G;AAiFT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}