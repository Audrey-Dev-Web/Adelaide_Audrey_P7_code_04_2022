{"ast":null,"code":"var _jsxFileName = \"F:\\\\Works\\\\Formation OC\\\\SOUTENANCES\\\\P7\\\\groupomania\\\\client\\\\src\\\\components\\\\comments\\\\CommentForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { BiCommentAdd } from \"react-icons/bi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CommentForm(props) {\n  _s();\n\n  const [comment, setComment] = useState(null);\n  const [message, setMessage] = useState(null);\n  const {\n    post_id,\n    access\n  } = props; // console.log(post_id);\n  // const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\n  // const token = user.pass;\n\n  const token = access;\n  const user_id = access.user_id;\n  const user_role = access.role;\n  const commentObject = {\n    comment: comment\n  };\n  const url = `http://localhost:8080/api/articles/${post_id}/comments`;\n  const reqOptions = {\n    method: \"POST\",\n    body: JSON.stringify(commentObject),\n    headers: {\n      Authorization: `Bearer ${token}`,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  }; // Fonction pour ajouter un commentaire\n\n  const sendComment = async e => {\n    e.preventDefault();\n\n    try {\n      let res = await fetch(url, reqOptions);\n      let commentRes = await res.json();\n\n      if (res.ok) {\n        setMessage(\"Commentaire ajouté avec succès\");\n      }\n\n      console.log(\"=====> Réponse commentaire envoyé : \");\n      console.log(commentRes);\n      window.location.reload();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"commentForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendComment,\n      className: \"commentForm__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Ajouter un commentaire\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"comment\",\n          className: \"commentForm__form--textarea\",\n          type: \"text\",\n          name: \"content\",\n          placeholder: \"Ajouter un nouveau commentaire\",\n          onChange: e => setComment(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"commentForm__form--btn btn\",\n          type: \"submit\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            hidden: true,\n            children: \"Envoyer votre commentaire\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(BiCommentAdd, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CommentForm, \"mNex8PsDbc47nCre1mCGKkfspZA=\");\n\n_c = CommentForm;\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"names":["React","useState","BiCommentAdd","CommentForm","props","comment","setComment","message","setMessage","post_id","access","token","user_id","user_role","role","commentObject","url","reqOptions","method","body","JSON","stringify","headers","Authorization","Accept","sendComment","e","preventDefault","res","fetch","commentRes","json","ok","console","log","window","location","reload","err","target","value"],"sources":["F:/Works/Formation OC/SOUTENANCES/P7/groupomania/client/src/components/comments/CommentForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { BiCommentAdd } from \"react-icons/bi\";\r\n\r\nfunction CommentForm(props) {\r\n    const [comment, setComment] = useState(null);\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const { post_id, access } = props;\r\n\r\n    // console.log(post_id);\r\n\r\n    // const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\r\n    // const token = user.pass;\r\n\r\n    const token = access;\r\n    const user_id = access.user_id;\r\n    const user_role = access.role;\r\n\r\n    const commentObject = {\r\n        comment: comment,\r\n    };\r\n\r\n    const url = `http://localhost:8080/api/articles/${post_id}/comments`;\r\n    const reqOptions = {\r\n        method: \"POST\",\r\n        body: JSON.stringify(commentObject),\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    // Fonction pour ajouter un commentaire\r\n    const sendComment = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            let res = await fetch(url, reqOptions);\r\n            let commentRes = await res.json();\r\n\r\n            if (res.ok) {\r\n                setMessage(\"Commentaire ajouté avec succès\");\r\n            }\r\n            console.log(\"=====> Réponse commentaire envoyé : \");\r\n            console.log(commentRes);\r\n\r\n            window.location.reload();\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"commentForm\">\r\n            {/* <h2 className=\"commentForm__title\">Ajouter un commentaire</h2> */}\r\n            <form onSubmit={sendComment} className=\"commentForm__form\">\r\n                <label htmlFor=\"comment\">\r\n                    <h3>Ajouter un commentaire</h3>\r\n                    <textarea\r\n                        id=\"comment\"\r\n                        className=\"commentForm__form--textarea\"\r\n                        type=\"text\"\r\n                        name=\"content\"\r\n                        placeholder=\"Ajouter un nouveau commentaire\"\r\n                        onChange={(e) => setComment(e.target.value)}\r\n                    />\r\n                </label>\r\n\r\n                <div>\r\n                    {/* <BiCommentAdd />\r\n                    <input className=\"commentForm__form--btn btn\" type=\"submit\" value=\"Envoyer\" /> */}\r\n                    <button className=\"commentForm__form--btn btn\" type=\"submit\">\r\n                        <p hidden>Envoyer votre commentaire</p>\r\n                        <BiCommentAdd />\r\n                    </button>\r\n                </div>\r\n            </form>\r\n            {message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CommentForm;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,YAAT,QAA6B,gBAA7B;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;EAAA;;EACxB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;EAEA,MAAM;IAAEQ,OAAF;IAAWC;EAAX,IAAsBN,KAA5B,CAJwB,CAMxB;EAEA;EACA;;EAEA,MAAMO,KAAK,GAAGD,MAAd;EACA,MAAME,OAAO,GAAGF,MAAM,CAACE,OAAvB;EACA,MAAMC,SAAS,GAAGH,MAAM,CAACI,IAAzB;EAEA,MAAMC,aAAa,GAAG;IAClBV,OAAO,EAAEA;EADS,CAAtB;EAIA,MAAMW,GAAG,GAAI,sCAAqCP,OAAQ,WAA1D;EACA,MAAMQ,UAAU,GAAG;IACfC,MAAM,EAAE,MADO;IAEfC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,aAAf,CAFS;IAGfO,OAAO,EAAE;MACLC,aAAa,EAAG,UAASZ,KAAM,EAD1B;MAELa,MAAM,EAAE,kBAFH;MAGL,gBAAgB;IAHX;EAHM,CAAnB,CApBwB,CA8BxB;;EACA,MAAMC,WAAW,GAAG,MAAOC,CAAP,IAAa;IAC7BA,CAAC,CAACC,cAAF;;IACA,IAAI;MACA,IAAIC,GAAG,GAAG,MAAMC,KAAK,CAACb,GAAD,EAAMC,UAAN,CAArB;MACA,IAAIa,UAAU,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAvB;;MAEA,IAAIH,GAAG,CAACI,EAAR,EAAY;QACRxB,UAAU,CAAC,gCAAD,CAAV;MACH;;MACDyB,OAAO,CAACC,GAAR,CAAY,sCAAZ;MACAD,OAAO,CAACC,GAAR,CAAYJ,UAAZ;MAEAK,MAAM,CAACC,QAAP,CAAgBC,MAAhB;IACH,CAXD,CAWE,OAAOC,GAAP,EAAY;MACVL,OAAO,CAACC,GAAR,CAAYI,GAAZ;IACH;EACJ,CAhBD;;EAkBA,oBACI;IAAK,SAAS,EAAC,aAAf;IAAA,wBAEI;MAAM,QAAQ,EAAEb,WAAhB;MAA6B,SAAS,EAAC,mBAAvC;MAAA,wBACI;QAAO,OAAO,EAAC,SAAf;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UACI,EAAE,EAAC,SADP;UAEI,SAAS,EAAC,6BAFd;UAGI,IAAI,EAAC,MAHT;UAII,IAAI,EAAC,SAJT;UAKI,WAAW,EAAC,gCALhB;UAMI,QAAQ,EAAGC,CAAD,IAAOpB,UAAU,CAACoB,CAAC,CAACa,MAAF,CAASC,KAAV;QAN/B;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAaI;QAAA,uBAGI;UAAQ,SAAS,EAAC,4BAAlB;UAA+C,IAAI,EAAC,QAApD;UAAA,wBACI;YAAG,MAAM,MAAT;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI,QAAC,YAAD;YAAA;YAAA;YAAA;UAAA,QAFJ;QAAA;UAAA;UAAA;UAAA;QAAA;MAHJ;QAAA;QAAA;QAAA;MAAA,QAbJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,EAwBKjC,OAxBL;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AA4BH;;GA7EQJ,W;;KAAAA,W;AA+ET,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}