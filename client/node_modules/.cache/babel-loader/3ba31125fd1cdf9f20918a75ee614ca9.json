{"ast":null,"code":"var _jsxFileName = \"F:\\\\Works\\\\Formation OC\\\\SOUTENANCES\\\\P7\\\\groupomania\\\\client\\\\src\\\\components\\\\Comments.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Comments(props) {\n  _s();\n\n  const {\n    post_id\n  } = props;\n  const [msg, setMsg] = useState(\"\");\n  const [comments, setComments] = useState([]);\n  const [dataIsLoaded, setDataIsLoaded] = useState(false); // Token de l'utilisateur\n\n  const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\n  const token = user.pass;\n  const user_id = user.id; // Request Options\n\n  const url = `http://localhost:8080/api/articles/${post_id}/comments`;\n  const reqOptions = {\n    method: \"GET\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  const fetchComments = () => {\n    fetch(url, reqOptions).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(data => {\n      // console.log(data);\n      if (!data) {\n        setMsg(\"Aucun commentaire\");\n        console.log(msg);\n      }\n\n      setComments(data);\n      setDataIsLoaded(true);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  useEffect(() => {\n    fetchComments();\n  }, [post_id]);\n  if (!dataIsLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", msg, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 13\n  }, this);\n  console.log(\"\", comments);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Affichage des commentaires ICI !\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Comments, \"DRPiLIjD5LSPyQdwpGSLwiz1JjM=\");\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","useEffect","Comments","props","post_id","msg","setMsg","comments","setComments","dataIsLoaded","setDataIsLoaded","user","JSON","parse","sessionStorage","getItem","token","pass","user_id","id","url","reqOptions","method","headers","Authorization","Accept","fetchComments","fetch","then","res","ok","json","data","console","log","catch","err"],"sources":["F:/Works/Formation OC/SOUTENANCES/P7/groupomania/client/src/components/Comments.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction Comments(props) {\r\n    const { post_id } = props;\r\n    const [msg, setMsg] = useState(\"\");\r\n    const [comments, setComments] = useState([]);\r\n    const [dataIsLoaded, setDataIsLoaded] = useState(false);\r\n\r\n    // Token de l'utilisateur\r\n    const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\r\n    const token = user.pass;\r\n    const user_id = user.id;\r\n\r\n    // Request Options\r\n    const url = `http://localhost:8080/api/articles/${post_id}/comments`;\r\n    const reqOptions = {\r\n        method: \"GET\",\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    const fetchComments = () => {\r\n        fetch(url, reqOptions)\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n            })\r\n            .then((data) => {\r\n                // console.log(data);\r\n                if (!data) {\r\n                    setMsg(\"Aucun commentaire\");\r\n                    console.log(msg);\r\n                }\r\n                setComments(data);\r\n                setDataIsLoaded(true);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchComments();\r\n    }, [post_id]);\r\n\r\n    if (!dataIsLoaded)\r\n        return (\r\n            <div>\r\n                <h1> {msg} </h1>\r\n            </div>\r\n        );\r\n\r\n    console.log(\"\", comments);\r\n\r\n    return <div>Affichage des commentaires ICI !</div>;\r\n}\r\n\r\nexport default Comments;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EACrB,MAAM;IAAEC;EAAF,IAAcD,KAApB;EACA,MAAM,CAACE,GAAD,EAAMC,MAAN,IAAgBN,QAAQ,CAAC,EAAD,CAA9B;EACA,MAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,KAAD,CAAhD,CAJqB,CAMrB;;EACA,MAAMW,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,gBAAvB,CAAX,CAAb;EACA,MAAMC,KAAK,GAAGL,IAAI,CAACM,IAAnB;EACA,MAAMC,OAAO,GAAGP,IAAI,CAACQ,EAArB,CATqB,CAWrB;;EACA,MAAMC,GAAG,GAAI,sCAAqChB,OAAQ,WAA1D;EACA,MAAMiB,UAAU,GAAG;IACfC,MAAM,EAAE,KADO;IAEfC,OAAO,EAAE;MACLC,aAAa,EAAG,UAASR,KAAM,EAD1B;MAELS,MAAM,EAAE,kBAFH;MAGL,gBAAgB;IAHX;EAFM,CAAnB;;EASA,MAAMC,aAAa,GAAG,MAAM;IACxBC,KAAK,CAACP,GAAD,EAAMC,UAAN,CAAL,CACKO,IADL,CACWC,GAAD,IAAS;MACX,IAAIA,GAAG,CAACC,EAAR,EAAY;QACR,OAAOD,GAAG,CAACE,IAAJ,EAAP;MACH;IACJ,CALL,EAMKH,IANL,CAMWI,IAAD,IAAU;MACZ;MACA,IAAI,CAACA,IAAL,EAAW;QACP1B,MAAM,CAAC,mBAAD,CAAN;QACA2B,OAAO,CAACC,GAAR,CAAY7B,GAAZ;MACH;;MACDG,WAAW,CAACwB,IAAD,CAAX;MACAtB,eAAe,CAAC,IAAD,CAAf;IACH,CAdL,EAeKyB,KAfL,CAeYC,GAAD,IAAS;MACZH,OAAO,CAACC,GAAR,CAAYE,GAAZ;IACH,CAjBL;EAkBH,CAnBD;;EAqBAnC,SAAS,CAAC,MAAM;IACZyB,aAAa;EAChB,CAFQ,EAEN,CAACtB,OAAD,CAFM,CAAT;EAIA,IAAI,CAACK,YAAL,EACI,oBACI;IAAA,uBACI;MAAA,gBAAMJ,GAAN;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;EAMJ4B,OAAO,CAACC,GAAR,CAAY,EAAZ,EAAgB3B,QAAhB;EAEA,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AACH;;GAzDQL,Q;;KAAAA,Q;AA2DT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}