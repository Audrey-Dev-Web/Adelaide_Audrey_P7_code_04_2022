{"ast":null,"code":"var _jsxFileName = \"F:\\\\Works\\\\Formation OC\\\\SOUTENANCES\\\\P7\\\\groupomania\\\\client\\\\src\\\\components\\\\comments\\\\Comments.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { BiPlus, BiX, BiCommentAdd } from \"react-icons/bi\";\nimport DateTime from \"../DateTime\";\nimport CommentForm from \"./CommentForm\";\nimport EditComment from \"./EditComment\";\nimport DeleteComment from \"./DeleteComment\";\nimport ErrorBoundary from \"../ErrorBoundary\"; // Permet d'afficher les informations de l'utilisateur qui a créé un post losque celui-ci est un post partagé\n\nimport UserData from \"../usersProfile/UserData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Comments(props) {\n  _s();\n\n  var _data$allComments;\n\n  const {\n    post_id,\n    access\n  } = props;\n  const [data, setData] = useState({\n    data: []\n  });\n  const [showComments, setShowComments] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [err, setErr] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [errorMsg, setErrorMsg] = useState(null);\n  const [error, setError] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [noComments, setNoComments] = useState(false); // State pour afficher ou non le formulaire de commentaire\n\n  const [createMod, setCreateMod] = useState(false); // const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\n  // const token = user.pass;\n\n  const token = access;\n  const user_id = access.user_id;\n  const user_role = access.role;\n  const url = `http://localhost:8080/api/articles/${post_id}/comments`;\n  const reqOptions = {\n    method: \"GET\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  const fetchComments = async () => {\n    // toggleComments();\n    if (isLoading) {\n      setIsLoading(false);\n    } else {\n      setIsLoading(true);\n\n      try {\n        const res = await fetch(url, reqOptions);\n\n        if (res.status === 201) {\n          setMessage(\"Soyez le premier à commenter cet article !\");\n          setNoComments(false);\n        }\n\n        if (res.ok) {\n          const result = await res.json();\n          setData(result);\n        } else {\n          setErrorMsg(err);\n          setError(true);\n          setTimeout(function () {\n            setErrorMsg(null);\n            setError(false);\n          }, 3000);\n        }\n      } catch (err) {\n        setErrorMsg(err);\n        setError(true);\n        setTimeout(function () {\n          setErrorMsg(null);\n          setError(false);\n        }, 3000);\n      }\n    }\n  };\n\n  useEffect(() => {\n    fetchComments();\n  }, []); // Lance le fetch au click\n\n  const toggleComments = () => {\n    if (!showComments) {\n      setShowComments(true);\n      console.log(\"mode edition activée !\");\n    } else {\n      setShowComments(false);\n      console.log(\"mode edition désactivée !\");\n    }\n  }; // Affiche le formulaire de commentaire au click\n  // function toggleCreateMod(e) {\n  //     setCreateMod(!createMod);\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"showComments\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"showCommentForm\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"showCommentForm\",\n          children: /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n            children: /*#__PURE__*/_jsxDEV(CommentForm, {\n              post_id: post_id,\n              access: access\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), err ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: err\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"comments__title\",\n        children: \"Commentaires :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 41\n      }, this), (_data$allComments = data.allComments) === null || _data$allComments === void 0 ? void 0 : _data$allComments.map(comment => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comments__post\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comments__header\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comments__author\",\n              children: /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n                children: /*#__PURE__*/_jsxDEV(UserData, {\n                  realAuthor_id: comment.author_id,\n                  dateTime: comment.timestamp,\n                  access: access\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comments__content\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: comment.comment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comments__buttons\",\n            children: /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n              children: /*#__PURE__*/_jsxDEV(EditComment, {\n                author_id: comment.author_id,\n                post_id: comment.article_id,\n                comment_id: comment.id,\n                comment_value: comment.comment,\n                access: access\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 29\n          }, this)]\n        }, comment.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Comments, \"mPos2JpN/s6eGareguX0vudBGR0=\");\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","useEffect","BiPlus","BiX","BiCommentAdd","DateTime","CommentForm","EditComment","DeleteComment","ErrorBoundary","UserData","Comments","props","post_id","access","data","setData","showComments","setShowComments","isLoading","setIsLoading","err","setErr","message","setMessage","errorMsg","setErrorMsg","error","setError","success","setSuccess","noComments","setNoComments","createMod","setCreateMod","token","user_id","user_role","role","url","reqOptions","method","headers","Authorization","Accept","fetchComments","res","fetch","status","ok","result","json","setTimeout","toggleComments","console","log","allComments","map","comment","author_id","timestamp","article_id","id"],"sources":["F:/Works/Formation OC/SOUTENANCES/P7/groupomania/client/src/components/comments/Comments.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { BiPlus, BiX, BiCommentAdd } from \"react-icons/bi\";\r\n\r\nimport DateTime from \"../DateTime\";\r\nimport CommentForm from \"./CommentForm\";\r\nimport EditComment from \"./EditComment\";\r\nimport DeleteComment from \"./DeleteComment\";\r\nimport ErrorBoundary from \"../ErrorBoundary\";\r\n\r\n// Permet d'afficher les informations de l'utilisateur qui a créé un post losque celui-ci est un post partagé\r\nimport UserData from \"../usersProfile/UserData\";\r\n\r\nfunction Comments(props) {\r\n    const { post_id, access } = props;\r\n\r\n    const [data, setData] = useState({ data: [] });\r\n    const [showComments, setShowComments] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [err, setErr] = useState(\"\");\r\n\r\n    const [message, setMessage] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState(null);\r\n    const [error, setError] = useState(false);\r\n    const [success, setSuccess] = useState(false);\r\n    const [noComments, setNoComments] = useState(false);\r\n\r\n    // State pour afficher ou non le formulaire de commentaire\r\n    const [createMod, setCreateMod] = useState(false);\r\n\r\n    // const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\r\n    // const token = user.pass;\r\n\r\n    const token = access;\r\n    const user_id = access.user_id;\r\n    const user_role = access.role;\r\n\r\n    const url = `http://localhost:8080/api/articles/${post_id}/comments`;\r\n    const reqOptions = {\r\n        method: \"GET\",\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    const fetchComments = async () => {\r\n        // toggleComments();\r\n\r\n        if (isLoading) {\r\n            setIsLoading(false);\r\n        } else {\r\n            setIsLoading(true);\r\n\r\n            try {\r\n                const res = await fetch(url, reqOptions);\r\n\r\n                if (res.status === 201) {\r\n                    setMessage(\"Soyez le premier à commenter cet article !\");\r\n                    setNoComments(false);\r\n                }\r\n\r\n                if (res.ok) {\r\n                    const result = await res.json();\r\n                    setData(result);\r\n                } else {\r\n                    setErrorMsg(err);\r\n                    setError(true);\r\n                    setTimeout(function () {\r\n                        setErrorMsg(null);\r\n                        setError(false);\r\n                    }, 3000);\r\n                }\r\n            } catch (err) {\r\n                setErrorMsg(err);\r\n                setError(true);\r\n                setTimeout(function () {\r\n                    setErrorMsg(null);\r\n                    setError(false);\r\n                }, 3000);\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchComments();\r\n    }, []);\r\n\r\n    // Lance le fetch au click\r\n    const toggleComments = () => {\r\n        if (!showComments) {\r\n            setShowComments(true);\r\n            console.log(\"mode edition activée !\");\r\n        } else {\r\n            setShowComments(false);\r\n            console.log(\"mode edition désactivée !\");\r\n        }\r\n    };\r\n\r\n    // Affiche le formulaire de commentaire au click\r\n    // function toggleCreateMod(e) {\r\n    //     setCreateMod(!createMod);\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            {/* <button className=\"btn\" onClick={handleClick}>\r\n                Afficher les commentaires\r\n            </button> */}\r\n            {/* <ErrorBoundary>\r\n                <CommentForm post_id={post.article.id} />\r\n            </ErrorBoundary> */}\r\n            {/* <div className=\"showComments\" style={{ display: showComments ? \"block\" : \"none\" }}> */}\r\n            <div className=\"showComments\">\r\n                {/* AFFICHAGE DU FORMULAIRE DE COMMENTAIRE */}\r\n                <div className=\"showCommentForm\">\r\n                    {/* <h3>Ajouter un commentaire</h3> */}\r\n                    {/* <button type=\"button\" className=\"btn\" onClick={toggleCreateMod}>\r\n                        <p hidden>Ajouter un commentaire</p>\r\n                        <BiCommentAdd />\r\n                    </button> */}\r\n                    <div className=\"showCommentForm\">\r\n                        <ErrorBoundary>\r\n                            <CommentForm post_id={post_id} access={access} />\r\n                        </ErrorBoundary>\r\n                    </div>\r\n                </div>\r\n\r\n                {err ? <h2>{err}</h2> : <h3 className=\"comments__title\">Commentaires :</h3>}\r\n\r\n                {data.allComments?.map((comment) => {\r\n                    return (\r\n                        <div className=\"comments__post\" key={comment.id}>\r\n                            <div className=\"comments__header\">\r\n                                <div className=\"comments__author\">\r\n                                    <ErrorBoundary>\r\n                                        <UserData\r\n                                            realAuthor_id={comment.author_id}\r\n                                            dateTime={comment.timestamp}\r\n                                            access={access}\r\n                                        />\r\n                                    </ErrorBoundary>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"comments__content\">\r\n                                <p>{comment.comment}</p>\r\n                            </div>\r\n\r\n                            <div className=\"comments__buttons\">\r\n                                <ErrorBoundary>\r\n                                    <EditComment\r\n                                        author_id={comment.author_id}\r\n                                        post_id={comment.article_id}\r\n                                        comment_id={comment.id}\r\n                                        comment_value={comment.comment}\r\n                                        access={access}\r\n                                    />\r\n                                </ErrorBoundary>\r\n\r\n                                {/* <DeleteComment\r\n                                    author_id={comment.author_id}\r\n                                    post_id={comment.article_id}\r\n                                    comment_id={comment.id}\r\n                                    access={access}\r\n                                /> */}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Comments;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}