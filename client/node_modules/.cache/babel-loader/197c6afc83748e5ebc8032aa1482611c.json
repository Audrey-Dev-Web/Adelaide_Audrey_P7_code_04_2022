{"ast":null,"code":"var _jsxFileName = \"F:\\\\Works\\\\Formation OC\\\\SOUTENANCES\\\\P7\\\\groupomania\\\\client\\\\src\\\\components\\\\PostForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport UserAvatar from \"./UserAvatar\";\nimport { BiPlus } from \"react-icons/bi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostForm() {\n  _s();\n\n  // ===========> CREATE NEW POST\n  const [postTitle, setPostTitle] = useState(null);\n  const [postContent, setPostContent] = useState(null);\n  const [postImg, setPostImg] = useState(null);\n  const [fileDataURL, setFileDataURL] = useState(null);\n  const [message, setMessage] = useState(null);\n  const [createMod, setCreateMod] = useState(false);\n  const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\n  const token = user.pass;\n  const user_id = user.id;\n  const postObject = {\n    title: postTitle,\n    content: postContent,\n    image: postImg\n  };\n  const formData = new FormData();\n  formData.append(\"title\", postTitle);\n  formData.append(\"content\", postContent);\n  formData.append(\"image\", postImg); // console.log(postImg);\n  // requêtes pour créer un nouvel article\n\n  const sendNewPost = async e => {\n    e.preventDefault();\n\n    if (!postTitle && !postContent && !postImg) {\n      setMessage(\"Vous avez ajouter au moins un titre avec du texte ou une image\");\n    } else if (!postTitle && postContent && !postImg) {\n      setMessage(\"Vous avez ajouter au moins un titre\");\n    } else if (!postTitle && !postContent && postImg) {\n      setMessage(\"Vous avez ajouter au moins un titre\");\n    } else if (!postTitle && postContent && postImg) {\n      setMessage(\"Vous avez ajouter un titre a votre article\");\n    } else {\n      try {\n        let res = await fetch(\"http://localhost:8080/api/articles/\", {\n          method: \"POST\",\n          body: formData,\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await res.json();\n        console.log(\"======> Verifier l'envoi du post\");\n        console.log(data);\n        window.location.reload();\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  function handleChange(event) {\n    setPostImg(event.target.files[0]);\n    var file = event.target.files[0];\n    var reader = new FileReader();\n\n    reader.onload = function (event) {\n      // The file's text will be printed here\n      const {\n        result\n      } = event.target;\n      console.log(event.target.result);\n      setFileDataURL(result);\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  function toggleCreateMod(e) {\n    setCreateMod(!createMod);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: createMod ? \"newPost__add--show\" : \"newPost__add--hide\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendNewPost,\n        className: \"newPost__add\",\n        method: \"POST\",\n        encType: \"multipart/form-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"newPost__add--title\",\n            type: \"text\",\n            name: \"title\",\n            placeholder: \"Votre titre ici...\",\n            onChange: e => setPostTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"newPost__add--content\",\n            type: \"text\",\n            name: \"content\",\n            placeholder: \"Votre text ici....\",\n            onChange: e => setPostContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), !postImg ? null : /*#__PURE__*/_jsxDEV(\"img\", {\n          width: \"300\",\n          src: fileDataURL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 40\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"newPost__btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"btn\",\n            type: \"file\",\n            id: \"image\",\n            name: \"image\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), message, /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"newPost__add--send btn\",\n            type: \"submit\",\n            value: \"Envoyer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PostForm, \"cyi5p9DTF5twINvb0jgmWZkJb2g=\");\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useEffect","useState","UserAvatar","BiPlus","PostForm","postTitle","setPostTitle","postContent","setPostContent","postImg","setPostImg","fileDataURL","setFileDataURL","message","setMessage","createMod","setCreateMod","user","JSON","parse","sessionStorage","getItem","token","pass","user_id","id","postObject","title","content","image","formData","FormData","append","sendNewPost","e","preventDefault","res","fetch","method","body","headers","Authorization","data","json","console","log","window","location","reload","err","handleChange","event","target","files","file","reader","FileReader","onload","result","readAsDataURL","toggleCreateMod","value"],"sources":["F:/Works/Formation OC/SOUTENANCES/P7/groupomania/client/src/components/PostForm.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport UserAvatar from \"./UserAvatar\";\r\n\r\nimport { BiPlus } from \"react-icons/bi\";\r\n\r\nfunction PostForm() {\r\n    // ===========> CREATE NEW POST\r\n\r\n    const [postTitle, setPostTitle] = useState(null);\r\n    const [postContent, setPostContent] = useState(null);\r\n    const [postImg, setPostImg] = useState(null);\r\n    const [fileDataURL, setFileDataURL] = useState(null);\r\n    const [message, setMessage] = useState(null);\r\n    const [createMod, setCreateMod] = useState(false);\r\n\r\n    const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\r\n    const token = user.pass;\r\n    const user_id = user.id;\r\n\r\n    const postObject = {\r\n        title: postTitle,\r\n        content: postContent,\r\n        image: postImg,\r\n    };\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"title\", postTitle);\r\n    formData.append(\"content\", postContent);\r\n    formData.append(\"image\", postImg);\r\n    // console.log(postImg);\r\n\r\n    // requêtes pour créer un nouvel article\r\n    const sendNewPost = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!postTitle && !postContent && !postImg) {\r\n            setMessage(\"Vous avez ajouter au moins un titre avec du texte ou une image\");\r\n        } else if (!postTitle && postContent && !postImg) {\r\n            setMessage(\"Vous avez ajouter au moins un titre\");\r\n        } else if (!postTitle && !postContent && postImg) {\r\n            setMessage(\"Vous avez ajouter au moins un titre\");\r\n        } else if (!postTitle && postContent && postImg) {\r\n            setMessage(\"Vous avez ajouter un titre a votre article\");\r\n        } else {\r\n            try {\r\n                let res = await fetch(\"http://localhost:8080/api/articles/\", {\r\n                    method: \"POST\",\r\n                    body: formData,\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                });\r\n\r\n                const data = await res.json();\r\n                console.log(\"======> Verifier l'envoi du post\");\r\n                console.log(data);\r\n\r\n                window.location.reload();\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    };\r\n\r\n    function handleChange(event) {\r\n        setPostImg(event.target.files[0]);\r\n\r\n        var file = event.target.files[0];\r\n        var reader = new FileReader();\r\n        reader.onload = function (event) {\r\n            // The file's text will be printed here\r\n            const { result } = event.target;\r\n            console.log(event.target.result);\r\n            setFileDataURL(result);\r\n        };\r\n        reader.readAsDataURL(file);\r\n    }\r\n\r\n    function toggleCreateMod(e) {\r\n        setCreateMod(!createMod);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* <div className=\"newPost__userAvatar\">\r\n                <UserAvatar userId={user_id} />\r\n            </div> */}\r\n\r\n            {/* <button type=\"button\" className=\"newPost__add--openForm btn\" onClick={toggleCreateMod}>\r\n                <BiPlus />\r\n            </button> */}\r\n\r\n            {/* Créer un nouveau post */}\r\n            <div className={createMod ? \"newPost__add--show\" : \"newPost__add--hide\"}>\r\n                {/* <h1>Créer un article</h1> */}\r\n                <form onSubmit={sendNewPost} className=\"newPost__add\" method=\"POST\" encType=\"multipart/form-data\">\r\n                    {/* <label className=\"newPost__add--onClick\"> */}\r\n                    {/* <input\r\n                        className=\"newPost__add--input\"\r\n                        type=\"text\"\r\n                        name=\"title\"\r\n                        placeholder=\"Créer un nouvel article\"\r\n                        onClick={toggleCreateMod}\r\n                    /> */}\r\n                    {/* </label> */}\r\n\r\n                    {/* <div className=\"newPost__add--hideShow\" style={{ display: createMod ? \"block\" : \"none\" }}> */}\r\n                    <label>\r\n                        <input\r\n                            className=\"newPost__add--title\"\r\n                            type=\"text\"\r\n                            name=\"title\"\r\n                            placeholder=\"Votre titre ici...\"\r\n                            onChange={(e) => setPostTitle(e.target.value)}\r\n                        />\r\n                    </label>\r\n\r\n                    <label>\r\n                        <textarea\r\n                            className=\"newPost__add--content\"\r\n                            type=\"text\"\r\n                            name=\"content\"\r\n                            placeholder=\"Votre text ici....\"\r\n                            onChange={(e) => setPostContent(e.target.value)}\r\n                        />\r\n                    </label>\r\n\r\n                    {!postImg ? null : <img width=\"300\" src={fileDataURL} />}\r\n                    <div className=\"newPost__btn\">\r\n                        {/* <label htmlFor=\"image\"> */}\r\n                        <input className=\"btn\" type=\"file\" id=\"image\" name=\"image\" onChange={handleChange} />\r\n                        {/* </label> */}\r\n                        {/* <input className=\"btn\" type=\"file\" name=\"image\" onChange={(e) => setPostImg(e.target.value)} /> */}\r\n                        {message}\r\n                        <input className=\"newPost__add--send btn\" type=\"submit\" value=\"Envoyer\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}