{"ast":null,"code":"var _jsxFileName = \"F:\\\\Works\\\\Formation OC\\\\SOUTENANCES\\\\P7\\\\groupomania\\\\client\\\\src\\\\webpages\\\\articles\\\\Post.js\";\nimport React, { Component } from \"react\";\nimport jwt_decode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Post extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [],\n      DataIsLoaded: false,\n      access: this.props.access,\n      postSlug: this.props.match.params\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.showComments = this.showComments.bind(this);\n  }\n\n  handleClick(id) {\n    this.setState(state => ({\n      isToggleOn: !state.isToggleOn\n    }));\n    this.setState({\n      EDIT: id\n    });\n  }\n\n  showComments(id) {\n    this.setState(state => ({\n      isShowOn: !state.isShowOn\n    }));\n    this.setState({\n      commentsPost: id\n    });\n  }\n\n  async componentDidMount() {\n    const {\n      access\n    } = this.state;\n    const token = access;\n    const decoded = jwt_decode(token); // const user_role = decoded.role;\n    // const user_id = decoded.user_id;\n\n    const url = `http://localhost:8080/api/articles/${this.state.postSlug}`;\n    const reqOptions = {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await fetch(url, reqOptions);\n      const data = await res.json();\n      this.setState({\n        posts: data.articlesFound,\n        DataIsLoaded: true\n      });\n      console.log(data.articlesFound);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  render() {\n    console.log(this.state.postSlug);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 16\n    }, this);\n  }\n\n} // import React, { useEffect, useState } from \"react\";\n// import { useParams } from \"react-router-dom\";\n// import { Route } from \"react-router-dom\";\n// import jwt_decode from \"jwt-decode\";\n// // import { useCookies } from \"react-cookie\";\n// // import jwt_decode from \"jwt-decode\";\n// import { BiLike, BiDislike, BiShare, BiComment, BiCommentAdd } from \"react-icons/bi\";\n// // Import pour la gestion de l'article\n// import EditPost from \"../../components/EditPost\";\n// import DeletePost from \"../../components/DeletePost\";\n// // Import pour la gestion des commentaires\n// import CommentForm from \"../../components/CommentForm\";\n// // Import pour la gestion des commentaires\n// import Comments from \"../../components/Comments\";\n// import EditComment from \"../../components/EditComment\";\n// import DeleteComment from \"../../components/DeleteComment\";\n// import UserData from \"../../components/usersProfile/UserData\";\n// import ErrorBoundary from \"../../components/ErrorBoundary\";\n// // Import Socials\n// import SharePost from \"../../components/SharePost\";\n// function Post(props) {\n//     const { access } = props;\n//     let { postSlug } = useParams();\n//     const [post, setPost] = useState({ post: {} });\n//     const [postIsLoaded, setPostIsLoaded] = useState(false);\n//     // const [comments, setComments] = useState({ comments: {} });\n//     const [isAuthor, setIsAuthor] = useState(false);\n//     const [editMod, setEditMod] = useState(false)\n//     const [edit_id, setEdit_id] = useState(null)\n//     // const decoded = jwt_decode(token);\n//     const token = access;\n//     const decoded = jwt_decode(token);\n//     const user_id = decoded.userId;\n//     const user_role = decoded.role;\n//     // Request options\n//     const url = `http://localhost:8080/api/articles/${postSlug}`;\n//     const urlComments = `http://localhost:8080/api/articles/${postSlug}/comments`;\n//     const reqOptions = {\n//         method: \"GET\",\n//         headers: {\n//             Authorization: `Bearer ${token}`,\n//             Accept: \"application/json\",\n//             \"Content-Type\": \"application/json\",\n//         },\n//     };\n//     // const fetchDetails = () => {\n//     //     Promise.all([fetch(url, reqOptions), fetch(urlComments, reqOptions)])\n//     //         .then(([resPost, resComments]) => Promise.all([resPost.json(), resComments.json()]))\n//     //         .then(([dataPost, dataComments]) => {\n//     //             setPost(dataPost);\n//     //             setComments(dataComments);\n//     //             setPostIsLoaded(true);\n//     //             if (user_id === dataPost.articleFound.author_id || user_role === \"admin\") {\n//     //                 setIsAuthor(true);\n//     //             }\n//     //         });\n//     // };\n//     useEffect(() => {\n//         // fetchDetails();\n//         fetch(url, reqOptions)\n//             .then((res) => {\n//                 if (res.ok) {\n//                     return res.json();\n//                 }\n//             })\n//             .then((dataPost) => {\n//                 setPost(dataPost);\n//                 setPostIsLoaded(true);\n//                 if (user_id === dataPost.articleFound.author_id || user_role === \"admin\") {\n//                     setIsAuthor(true);\n//                 }\n//             });\n//     }, []);\n//     const editModToggler = (id) => {\n//         setEditMod(!editMod)\n//         setEdit_id(id)\n//     }\n//     if (!postIsLoaded) {\n//         return (\n//             <div>\n//                 <h1> Pleses wait some time.... </h1>\n//             </div>\n//         );\n//     }\n//     return (\n//         <div className=\"post\">\n//             <div className=\"post__container container\">\n//                 <div>\n//                     <div className=\"post__details\">\n//                         <div className=\"post__header\">\n//                             <h1 className=\"post__title\">{post.articleFound.title}</h1>\n//                             <div className=\"post__header--author\">\n//                                 <div>\n//                                     {!post.articleFound.author_avatar ? (\n//                                         <div className=\"author__img initiales\">\n//                                             <p>\n//                                                 {`${post.articleFound.author_firstName} ${post.articleFound.author_lastName}\n//                                                 `\n//                                                     .match(/\\b\\w/g)\n//                                                     .join(\"\")\n//                                                     .toUpperCase()}\n//                                             </p>\n//                                         </div>\n//                                     ) : (\n//                                         <img\n//                                             className=\"author__img\"\n//                                             src={post.articleFound.author_avatar}\n//                                             alt={\"Photo de profile de \" + post.articleFound.author_firstName}\n//                                         />\n//                                     )}\n//                                 </div>\n//                                 <div className=\"header__infos\">\n//                                     <p className=\"author__name\">\n//                                         {post.articleFound.author_firstName + \" \" + post.articleFound.author_lastName}\n//                                     </p>\n//                                     <div className=\"post__header--datetime\">{post.articleFound.timestamp}</div>\n//                                 </div>\n//                             </div>\n//                         </div>\n//                         {post.articleFound.img ? (\n//                             <div className=\"post__content\">\n//                                 <p>{post.articleFound.content}</p>\n//                                 <img\n//                                     className=\"post__content--img\"\n//                                     src={post.articleFound.img}\n//                                     alt={\"image de l'article\" + post.articleFound.title}\n//                                 />\n//                             </div>\n//                         ) : (\n//                             <div className=\"post__content\">\n//                                 <p>{post.articleFound.content}</p>\n//                             </div>\n//                         )}\n//                         {/* POST FOOTER */}\n//                         <div className=\"article__footer\">\n//                             <div className=\"article__footer--social\">\n//                                 <div className=\"social__wrapper\">\n//                                     {/* PARTAGER - SHARE */}\n//                                     <div className=\"social\">\n//                                         <span className=\"social__icon\">\n//                                             <ErrorBoundary>\n//                                                 <SharePost post_id={post.articleFound.id} access={access} />\n//                                             </ErrorBoundary>\n//                                         </span>\n//                                         <span className=\"social__count\">{post.articleFound.shares}</span>\n//                                     </div>\n//                                     {/* COMMENTAIRES BUTTON */}\n//                                     <div className=\"social\">\n//                                         {/* Ce bouton doit ouvrir la div contenant les composants de commentaires */}\n//                                         <button\n//                                             type=\"button\"\n//                                             className=\"btn\"\n//                                             onClick={() => this.showComments(post.articleFound.id)}\n//                                         >\n//                                             <BiComment />\n//                                             <span className=\"social__count\">{post.articleFound.comments}</span>\n//                                         </button>\n//                                     </div>\n//                                     {/* BOUTONS POUR MODIFIER ET SUPPRIMER UN POST */}\n//                                     {post.articleFound.is_shared ? (\n//                                         // si l'article est un partage\n//                                         <div className=\"social__icon social__postManage\">\n//                                             <div className=\"social__icon cancelShare\">\n//                                                 {/* Mettre le composant share ici */}\n//                                                 {user_id === post.articleFound.author ? (\n//                                                     // Si l'utilisateur est le propriétaire\n//                                                     <div className=\"social__icon shareBtn\">\n//                                                         {/* Cancel Sharing */}\n//                                                         <SharePost\n//                                                             // id=\"cancelShare\"\n//                                                             post_id={post.articleFound.shared_id}\n//                                                             access={access}\n//                                                         />\n//                                                         cancel\n//                                                     </div>\n//                                                 ) : null}\n//                                             </div>\n//                                             <div className=\"social__icon deletePost\">\n//                                                 {user_id !== post.articleFound.author && user_role === \"admin\" ? (\n//                                                     // Si l'utilisateur n'est pas le propriétaire et qu'il est admin\n//                                                     <DeletePost\n//                                                         post_id={post.articleFound.id}\n//                                                         author_id={post.articleFound.author}\n//                                                         access={access}\n//                                                     />\n//                                                 ) : null}\n//                                             </div>\n//                                         </div>\n//                                     ) : (\n//                                         // Si c'est un article normal\n//                                         <div className=\"social__icon social__postManage\">\n//                                             <div className=\"social__icon editPost\">\n//                                                 {user_id === post.articleFound.author\n//                                                     ?\n//                                                     //   \"handleClick ici\"\n//                                                      <button\n//                                                           type=\"button\"\n//                                                           className=\"btn\"\n//                                                           onClick={() => this.handleClick(post.articleFound.id)}\n//                                                       >\n//                                                           <BiEditAlt />\n//                                                       </button>\n//                                                       : null}\n//                                             </div>\n//                                             <div className=\"social__icon deletePost\">\n//                                                 {user_id === post.articleFound.author || user_role === \"admin\" ? (\n//                                                     <DeletePost\n//                                                         post_id={post.articleFound.id}\n//                                                         author_id={post.articleFound.author}\n//                                                         access={access}\n//                                                     />\n//                                                 ) : null}\n//                                             </div>\n//                                         </div>\n//                                     )}\n//                                 </div>\n//                             </div>\n//                             <div className=\"article__displayComponents\">\n//                             {/* AFFICHAGE DU FORMULAIRE POUR MODIFIER L'ARTICLE */}\n//                             {this.state.EDIT == post.article.id ? (\n//                                 <div\n//                                     className=\"article__editPost\"\n//                                     style={{\n//                                         display: this.state.isToggleOn ? \"block\" : \"none\",\n//                                     }}\n//                                 >\n//                                     <ErrorBoundary>\n//                                         <EditPost\n//                                             post_id={post.article.id}\n//                                             author_id={post.article.author}\n//                                             post_title={post.article.title}\n//                                             post_content={post.article.content}\n//                                             post_img={post.article.images}\n//                                             access={access}\n//                                         />\n//                                     </ErrorBoundary>\n//                                 </div>\n//                             ) : null}\n//                             {/* AFFICHAGE DES COMPOSANTS COMMENTAIRE */}\n//                             <div className=\"article__comments\">\n//                                 {/* AFFICHAGE DES COMMENTAIRES DE L'ARTICLE */}\n//                                 {this.state.commentsPost == post.article.id ? (\n//                                     <div\n//                                         className=\"comments showAllComments\"\n//                                         style={{ display: this.state.isShowOn ? \"block\" : \"none\" }}\n//                                     >\n//                                         <ErrorBoundary>\n//                                             <Comments post_id={post.article.id} access={access} />\n//                                         </ErrorBoundary>\n//                                     </div>\n//                                 ) : null}\n//                             </div>\n//                         </div>\n//                             {/* <div className=\"social\">\n//                                 <span className=\"social__icon\">\n//                                     <ErrorBoundary>\n//                                         <SharePost post_id={post.articleFound.id} access={access} />\n//                                     </ErrorBoundary>\n//                                 </span>\n//                                 <span className=\"social__count\">{post.articleFound.shares}</span>\n//                             </div>\n//                             <div className=\"social\">\n//                                 <span className=\"social__icon\">\n//                                     <BiComment />\n//                                 </span>\n//                                 <span className=\"social__count\">{post.articleFound.comments}</span>\n//                             </div>\n//                             <button className=\"social__icon btn\">\n//                                 <BiCommentAdd />\n//                             </button> */}\n//                             {/* </div>\n//                         <EditPost\n//                             post_id={post.articleFound.id}\n//                             author_id={post.articleFound.author_id}\n//                             post_title={post.articleFound.title}\n//                             post_content={post.articleFound.content}\n//                             post_img={post.articleFound.img}\n//                             access={access}\n//                         />\n//                         <DeletePost\n//                             post_id={post.articleFound.id}\n//                             author_id={post.articleFound.author_id}\n//                             access={access}\n//                         />\n//                     </div> */}\n//                             {/* <div className=\"comments\">\n//                         <h3 className=\"comments__title\">Commentaires</h3>\n//                         <CommentForm post_id={post.articleFound.id} access={access} />\n//                         {!comments.allComments\n//                             ? \"Aucun commentaire, soyez le premier !\"\n//                             : comments.allComments.map((comment) => (\n//                                   <div className=\"comments__post\" key={comment.id}>\n//                                       <div className=\"comments__author\">\n//                                           {/* {comment.author_id} */}\n//                             {/* {!comment.author_avatar ? (\n//                                               <div className=\"author__img initiales\">\n//                                                   <p>\n//                                                       {`${comment.firstName} ${comment.lastName}\n//                                                 `\n//                                                           .match(/\\b\\w/g)\n//                                                           .join(\"\")\n//                                                           .toUpperCase()}\n//                                                   </p>\n//                                               </div>\n//                                           ) : (\n//                                               <img className=\"author__img\" src={comment.avatar} />\n//                                           )}\n//                                           <div className=\"comments__author--fullName\">\n//                                               <p>\n//                                                   {comment.firstName} {comment.lastName}\n//                                               </p>\n//                                           </div>\n//                                       </div>\n//                                       <div className=\"comments__timestamp\">{comment.timestamp}</div>\n//                                       <div className=\"comments__content\">{comment.comment}</div>\n//                                       <div className=\"comments__settings--btn\">\n//                                           <EditComment\n//                                               author_id={comment.author_id}\n//                                               post_id={post.articleFound.id}\n//                                               comment_id={comment.id}\n//                                               comment_value={comment.comment}\n//                                               access={access}\n//                                           />\n//                                           <DeleteComment\n//                                               author_id={comment.author_id}\n//                                               post_id={post.articleFound.id}\n//                                               comment_id={comment.id}\n//                                               access={access}\n//                                           />\n//                                       </div>\n//                                   </div>\n//                               ))}\n//                     </div> */}\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n// export default Post;","map":{"version":3,"names":["React","Component","jwt_decode","Post","constructor","props","state","posts","DataIsLoaded","access","postSlug","match","params","handleClick","bind","showComments","id","setState","isToggleOn","EDIT","isShowOn","commentsPost","componentDidMount","token","decoded","url","reqOptions","method","headers","Authorization","Accept","res","fetch","data","json","articlesFound","console","log","err","render"],"sources":["F:/Works/Formation OC/SOUTENANCES/P7/groupomania/client/src/webpages/articles/Post.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport default class Post extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            posts: [],\r\n            DataIsLoaded: false,\r\n            access: this.props.access,\r\n            postSlug: this.props.match.params,\r\n        };\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.showComments = this.showComments.bind(this);\r\n    }\r\n\r\n    handleClick(id) {\r\n        this.setState((state) => ({\r\n            isToggleOn: !state.isToggleOn,\r\n        }));\r\n        this.setState({ EDIT: id });\r\n    }\r\n\r\n    showComments(id) {\r\n        this.setState((state) => ({\r\n            isShowOn: !state.isShowOn,\r\n        }));\r\n        this.setState({ commentsPost: id });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { access } = this.state;\r\n\r\n        const token = access;\r\n        const decoded = jwt_decode(token);\r\n        // const user_role = decoded.role;\r\n        // const user_id = decoded.user_id;\r\n\r\n        const url = `http://localhost:8080/api/articles/${this.state.postSlug}`;\r\n        const reqOptions = {\r\n            method: \"GET\",\r\n            headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        try {\r\n            const res = await fetch(url, reqOptions);\r\n            const data = await res.json();\r\n\r\n            this.setState({ posts: data.articlesFound, DataIsLoaded: true });\r\n            console.log(data.articlesFound);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.postSlug);\r\n        return <div>Post</div>;\r\n    }\r\n}\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { useParams } from \"react-router-dom\";\r\n// import { Route } from \"react-router-dom\";\r\n// import jwt_decode from \"jwt-decode\";\r\n\r\n// // import { useCookies } from \"react-cookie\";\r\n// // import jwt_decode from \"jwt-decode\";\r\n\r\n// import { BiLike, BiDislike, BiShare, BiComment, BiCommentAdd } from \"react-icons/bi\";\r\n\r\n// // Import pour la gestion de l'article\r\n// import EditPost from \"../../components/EditPost\";\r\n// import DeletePost from \"../../components/DeletePost\";\r\n\r\n// // Import pour la gestion des commentaires\r\n// import CommentForm from \"../../components/CommentForm\";\r\n// // Import pour la gestion des commentaires\r\n// import Comments from \"../../components/Comments\";\r\n// import EditComment from \"../../components/EditComment\";\r\n// import DeleteComment from \"../../components/DeleteComment\";\r\n\r\n// import UserData from \"../../components/usersProfile/UserData\";\r\n\r\n// import ErrorBoundary from \"../../components/ErrorBoundary\";\r\n\r\n// // Import Socials\r\n// import SharePost from \"../../components/SharePost\";\r\n\r\n// function Post(props) {\r\n//     const { access } = props;\r\n//     let { postSlug } = useParams();\r\n//     const [post, setPost] = useState({ post: {} });\r\n//     const [postIsLoaded, setPostIsLoaded] = useState(false);\r\n\r\n//     // const [comments, setComments] = useState({ comments: {} });\r\n\r\n//     const [isAuthor, setIsAuthor] = useState(false);\r\n//     const [editMod, setEditMod] = useState(false)\r\n//     const [edit_id, setEdit_id] = useState(null)\r\n\r\n//     // const decoded = jwt_decode(token);\r\n//     const token = access;\r\n//     const decoded = jwt_decode(token);\r\n//     const user_id = decoded.userId;\r\n//     const user_role = decoded.role;\r\n\r\n//     // Request options\r\n//     const url = `http://localhost:8080/api/articles/${postSlug}`;\r\n//     const urlComments = `http://localhost:8080/api/articles/${postSlug}/comments`;\r\n//     const reqOptions = {\r\n//         method: \"GET\",\r\n//         headers: {\r\n//             Authorization: `Bearer ${token}`,\r\n//             Accept: \"application/json\",\r\n//             \"Content-Type\": \"application/json\",\r\n//         },\r\n//     };\r\n\r\n//     // const fetchDetails = () => {\r\n//     //     Promise.all([fetch(url, reqOptions), fetch(urlComments, reqOptions)])\r\n//     //         .then(([resPost, resComments]) => Promise.all([resPost.json(), resComments.json()]))\r\n//     //         .then(([dataPost, dataComments]) => {\r\n//     //             setPost(dataPost);\r\n//     //             setComments(dataComments);\r\n//     //             setPostIsLoaded(true);\r\n\r\n//     //             if (user_id === dataPost.articleFound.author_id || user_role === \"admin\") {\r\n//     //                 setIsAuthor(true);\r\n//     //             }\r\n//     //         });\r\n//     // };\r\n\r\n//     useEffect(() => {\r\n//         // fetchDetails();\r\n//         fetch(url, reqOptions)\r\n//             .then((res) => {\r\n//                 if (res.ok) {\r\n//                     return res.json();\r\n//                 }\r\n//             })\r\n//             .then((dataPost) => {\r\n//                 setPost(dataPost);\r\n//                 setPostIsLoaded(true);\r\n\r\n//                 if (user_id === dataPost.articleFound.author_id || user_role === \"admin\") {\r\n//                     setIsAuthor(true);\r\n//                 }\r\n//             });\r\n//     }, []);\r\n\r\n//     const editModToggler = (id) => {\r\n//         setEditMod(!editMod)\r\n//         setEdit_id(id)\r\n//     }\r\n\r\n//     if (!postIsLoaded) {\r\n//         return (\r\n//             <div>\r\n//                 <h1> Pleses wait some time.... </h1>\r\n//             </div>\r\n//         );\r\n//     }\r\n\r\n//     return (\r\n//         <div className=\"post\">\r\n//             <div className=\"post__container container\">\r\n//                 <div>\r\n//                     <div className=\"post__details\">\r\n//                         <div className=\"post__header\">\r\n//                             <h1 className=\"post__title\">{post.articleFound.title}</h1>\r\n//                             <div className=\"post__header--author\">\r\n//                                 <div>\r\n//                                     {!post.articleFound.author_avatar ? (\r\n//                                         <div className=\"author__img initiales\">\r\n//                                             <p>\r\n//                                                 {`${post.articleFound.author_firstName} ${post.articleFound.author_lastName}\r\n//                                                 `\r\n//                                                     .match(/\\b\\w/g)\r\n//                                                     .join(\"\")\r\n//                                                     .toUpperCase()}\r\n//                                             </p>\r\n//                                         </div>\r\n//                                     ) : (\r\n//                                         <img\r\n//                                             className=\"author__img\"\r\n//                                             src={post.articleFound.author_avatar}\r\n//                                             alt={\"Photo de profile de \" + post.articleFound.author_firstName}\r\n//                                         />\r\n//                                     )}\r\n//                                 </div>\r\n\r\n//                                 <div className=\"header__infos\">\r\n//                                     <p className=\"author__name\">\r\n//                                         {post.articleFound.author_firstName + \" \" + post.articleFound.author_lastName}\r\n//                                     </p>\r\n//                                     <div className=\"post__header--datetime\">{post.articleFound.timestamp}</div>\r\n//                                 </div>\r\n//                             </div>\r\n//                         </div>\r\n\r\n//                         {post.articleFound.img ? (\r\n//                             <div className=\"post__content\">\r\n//                                 <p>{post.articleFound.content}</p>\r\n//                                 <img\r\n//                                     className=\"post__content--img\"\r\n//                                     src={post.articleFound.img}\r\n//                                     alt={\"image de l'article\" + post.articleFound.title}\r\n//                                 />\r\n//                             </div>\r\n//                         ) : (\r\n//                             <div className=\"post__content\">\r\n//                                 <p>{post.articleFound.content}</p>\r\n//                             </div>\r\n//                         )}\r\n\r\n//                         {/* POST FOOTER */}\r\n//                         <div className=\"article__footer\">\r\n//                             <div className=\"article__footer--social\">\r\n//                                 <div className=\"social__wrapper\">\r\n//                                     {/* PARTAGER - SHARE */}\r\n//                                     <div className=\"social\">\r\n//                                         <span className=\"social__icon\">\r\n//                                             <ErrorBoundary>\r\n//                                                 <SharePost post_id={post.articleFound.id} access={access} />\r\n//                                             </ErrorBoundary>\r\n//                                         </span>\r\n//                                         <span className=\"social__count\">{post.articleFound.shares}</span>\r\n//                                     </div>\r\n//                                     {/* COMMENTAIRES BUTTON */}\r\n//                                     <div className=\"social\">\r\n//                                         {/* Ce bouton doit ouvrir la div contenant les composants de commentaires */}\r\n//                                         <button\r\n//                                             type=\"button\"\r\n//                                             className=\"btn\"\r\n//                                             onClick={() => this.showComments(post.articleFound.id)}\r\n//                                         >\r\n//                                             <BiComment />\r\n//                                             <span className=\"social__count\">{post.articleFound.comments}</span>\r\n//                                         </button>\r\n//                                     </div>\r\n\r\n//                                     {/* BOUTONS POUR MODIFIER ET SUPPRIMER UN POST */}\r\n//                                     {post.articleFound.is_shared ? (\r\n//                                         // si l'article est un partage\r\n//                                         <div className=\"social__icon social__postManage\">\r\n//                                             <div className=\"social__icon cancelShare\">\r\n//                                                 {/* Mettre le composant share ici */}\r\n//                                                 {user_id === post.articleFound.author ? (\r\n//                                                     // Si l'utilisateur est le propriétaire\r\n//                                                     <div className=\"social__icon shareBtn\">\r\n//                                                         {/* Cancel Sharing */}\r\n//                                                         <SharePost\r\n//                                                             // id=\"cancelShare\"\r\n//                                                             post_id={post.articleFound.shared_id}\r\n//                                                             access={access}\r\n//                                                         />\r\n//                                                         cancel\r\n//                                                     </div>\r\n//                                                 ) : null}\r\n//                                             </div>\r\n//                                             <div className=\"social__icon deletePost\">\r\n//                                                 {user_id !== post.articleFound.author && user_role === \"admin\" ? (\r\n//                                                     // Si l'utilisateur n'est pas le propriétaire et qu'il est admin\r\n//                                                     <DeletePost\r\n//                                                         post_id={post.articleFound.id}\r\n//                                                         author_id={post.articleFound.author}\r\n//                                                         access={access}\r\n//                                                     />\r\n//                                                 ) : null}\r\n//                                             </div>\r\n//                                         </div>\r\n//                                     ) : (\r\n//                                         // Si c'est un article normal\r\n//                                         <div className=\"social__icon social__postManage\">\r\n//                                             <div className=\"social__icon editPost\">\r\n//                                                 {user_id === post.articleFound.author\r\n//                                                     ?\r\n\r\n//                                                     //   \"handleClick ici\"\r\n//                                                      <button\r\n//                                                           type=\"button\"\r\n//                                                           className=\"btn\"\r\n//                                                           onClick={() => this.handleClick(post.articleFound.id)}\r\n//                                                       >\r\n//                                                           <BiEditAlt />\r\n//                                                       </button>\r\n//                                                       : null}\r\n//                                             </div>\r\n//                                             <div className=\"social__icon deletePost\">\r\n//                                                 {user_id === post.articleFound.author || user_role === \"admin\" ? (\r\n//                                                     <DeletePost\r\n//                                                         post_id={post.articleFound.id}\r\n//                                                         author_id={post.articleFound.author}\r\n//                                                         access={access}\r\n//                                                     />\r\n//                                                 ) : null}\r\n//                                             </div>\r\n//                                         </div>\r\n//                                     )}\r\n//                                 </div>\r\n//                             </div>\r\n\r\n//                             <div className=\"article__displayComponents\">\r\n//                             {/* AFFICHAGE DU FORMULAIRE POUR MODIFIER L'ARTICLE */}\r\n\r\n//                             {this.state.EDIT == post.article.id ? (\r\n//                                 <div\r\n//                                     className=\"article__editPost\"\r\n//                                     style={{\r\n//                                         display: this.state.isToggleOn ? \"block\" : \"none\",\r\n//                                     }}\r\n//                                 >\r\n//                                     <ErrorBoundary>\r\n//                                         <EditPost\r\n//                                             post_id={post.article.id}\r\n//                                             author_id={post.article.author}\r\n//                                             post_title={post.article.title}\r\n//                                             post_content={post.article.content}\r\n//                                             post_img={post.article.images}\r\n//                                             access={access}\r\n//                                         />\r\n//                                     </ErrorBoundary>\r\n//                                 </div>\r\n//                             ) : null}\r\n\r\n//                             {/* AFFICHAGE DES COMPOSANTS COMMENTAIRE */}\r\n//                             <div className=\"article__comments\">\r\n//                                 {/* AFFICHAGE DES COMMENTAIRES DE L'ARTICLE */}\r\n//                                 {this.state.commentsPost == post.article.id ? (\r\n//                                     <div\r\n//                                         className=\"comments showAllComments\"\r\n//                                         style={{ display: this.state.isShowOn ? \"block\" : \"none\" }}\r\n//                                     >\r\n//                                         <ErrorBoundary>\r\n//                                             <Comments post_id={post.article.id} access={access} />\r\n//                                         </ErrorBoundary>\r\n//                                     </div>\r\n//                                 ) : null}\r\n//                             </div>\r\n//                         </div>\r\n\r\n//                             {/* <div className=\"social\">\r\n//                                 <span className=\"social__icon\">\r\n//                                     <ErrorBoundary>\r\n//                                         <SharePost post_id={post.articleFound.id} access={access} />\r\n//                                     </ErrorBoundary>\r\n//                                 </span>\r\n//                                 <span className=\"social__count\">{post.articleFound.shares}</span>\r\n//                             </div>\r\n//                             <div className=\"social\">\r\n//                                 <span className=\"social__icon\">\r\n//                                     <BiComment />\r\n//                                 </span>\r\n//                                 <span className=\"social__count\">{post.articleFound.comments}</span>\r\n//                             </div>\r\n\r\n//                             <button className=\"social__icon btn\">\r\n//                                 <BiCommentAdd />\r\n//                             </button> */}\r\n//                             {/* </div>\r\n\r\n//                         <EditPost\r\n//                             post_id={post.articleFound.id}\r\n//                             author_id={post.articleFound.author_id}\r\n//                             post_title={post.articleFound.title}\r\n//                             post_content={post.articleFound.content}\r\n//                             post_img={post.articleFound.img}\r\n//                             access={access}\r\n//                         />\r\n\r\n//                         <DeletePost\r\n//                             post_id={post.articleFound.id}\r\n//                             author_id={post.articleFound.author_id}\r\n//                             access={access}\r\n//                         />\r\n//                     </div> */}\r\n//                             {/* <div className=\"comments\">\r\n//                         <h3 className=\"comments__title\">Commentaires</h3>\r\n\r\n//                         <CommentForm post_id={post.articleFound.id} access={access} />\r\n\r\n//                         {!comments.allComments\r\n//                             ? \"Aucun commentaire, soyez le premier !\"\r\n//                             : comments.allComments.map((comment) => (\r\n//                                   <div className=\"comments__post\" key={comment.id}>\r\n//                                       <div className=\"comments__author\">\r\n//                                           {/* {comment.author_id} */}\r\n\r\n//                             {/* {!comment.author_avatar ? (\r\n//                                               <div className=\"author__img initiales\">\r\n//                                                   <p>\r\n//                                                       {`${comment.firstName} ${comment.lastName}\r\n//                                                 `\r\n//                                                           .match(/\\b\\w/g)\r\n//                                                           .join(\"\")\r\n//                                                           .toUpperCase()}\r\n//                                                   </p>\r\n//                                               </div>\r\n//                                           ) : (\r\n//                                               <img className=\"author__img\" src={comment.avatar} />\r\n//                                           )}\r\n\r\n//                                           <div className=\"comments__author--fullName\">\r\n//                                               <p>\r\n//                                                   {comment.firstName} {comment.lastName}\r\n//                                               </p>\r\n//                                           </div>\r\n//                                       </div>\r\n\r\n//                                       <div className=\"comments__timestamp\">{comment.timestamp}</div>\r\n//                                       <div className=\"comments__content\">{comment.comment}</div>\r\n\r\n//                                       <div className=\"comments__settings--btn\">\r\n\r\n//                                           <EditComment\r\n//                                               author_id={comment.author_id}\r\n//                                               post_id={post.articleFound.id}\r\n//                                               comment_id={comment.id}\r\n//                                               comment_value={comment.comment}\r\n//                                               access={access}\r\n//                                           />\r\n\r\n//                                           <DeleteComment\r\n//                                               author_id={comment.author_id}\r\n//                                               post_id={post.articleFound.id}\r\n//                                               comment_id={comment.id}\r\n//                                               access={access}\r\n//                                           />\r\n//                                       </div>\r\n//                                   </div>\r\n//                               ))}\r\n//                     </div> */}\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Post;\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,eAAe,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;EACxCG,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;IAEA,KAAKC,KAAL,GAAa;MACTC,KAAK,EAAE,EADE;MAETC,YAAY,EAAE,KAFL;MAGTC,MAAM,EAAE,KAAKJ,KAAL,CAAWI,MAHV;MAITC,QAAQ,EAAE,KAAKL,KAAL,CAAWM,KAAX,CAAiBC;IAJlB,CAAb;IAOA,KAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;IACA,KAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;EACH;;EAEDD,WAAW,CAACG,EAAD,EAAK;IACZ,KAAKC,QAAL,CAAeX,KAAD,KAAY;MACtBY,UAAU,EAAE,CAACZ,KAAK,CAACY;IADG,CAAZ,CAAd;IAGA,KAAKD,QAAL,CAAc;MAAEE,IAAI,EAAEH;IAAR,CAAd;EACH;;EAEDD,YAAY,CAACC,EAAD,EAAK;IACb,KAAKC,QAAL,CAAeX,KAAD,KAAY;MACtBc,QAAQ,EAAE,CAACd,KAAK,CAACc;IADK,CAAZ,CAAd;IAGA,KAAKH,QAAL,CAAc;MAAEI,YAAY,EAAEL;IAAhB,CAAd;EACH;;EAEsB,MAAjBM,iBAAiB,GAAG;IACtB,MAAM;MAAEb;IAAF,IAAa,KAAKH,KAAxB;IAEA,MAAMiB,KAAK,GAAGd,MAAd;IACA,MAAMe,OAAO,GAAGtB,UAAU,CAACqB,KAAD,CAA1B,CAJsB,CAKtB;IACA;;IAEA,MAAME,GAAG,GAAI,sCAAqC,KAAKnB,KAAL,CAAWI,QAAS,EAAtE;IACA,MAAMgB,UAAU,GAAG;MACfC,MAAM,EAAE,KADO;MAEfC,OAAO,EAAE;QACLC,aAAa,EAAG,UAASN,KAAM,EAD1B;QAELO,MAAM,EAAE,kBAFH;QAGL,gBAAgB;MAHX;IAFM,CAAnB;;IASA,IAAI;MACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACP,GAAD,EAAMC,UAAN,CAAvB;MACA,MAAMO,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;MAEA,KAAKjB,QAAL,CAAc;QAAEV,KAAK,EAAE0B,IAAI,CAACE,aAAd;QAA6B3B,YAAY,EAAE;MAA3C,CAAd;MACA4B,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACE,aAAjB;IACH,CAND,CAME,OAAOG,GAAP,EAAY;MACVF,OAAO,CAACC,GAAR,CAAYC,GAAZ;IACH;EACJ;;EAEDC,MAAM,GAAG;IACLH,OAAO,CAACC,GAAR,CAAY,KAAK/B,KAAL,CAAWI,QAAvB;IACA,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;AA7DuC,C,CAgE5C;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}