{"ast":null,"code":"var _jsxFileName = \"F:\\\\Works\\\\Formation OC\\\\SOUTENANCES\\\\P7\\\\groupomania\\\\client\\\\src\\\\components\\\\PostForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostForm() {\n  _s();\n\n  // ===========> CREATE NEW POST\n  const [postTitle, setPostTitle] = useState(null);\n  const [postContent, setPostContent] = useState(null);\n  const [postImg, setPostImg] = useState(null);\n  const [fileDataURL, setFileDataURL] = useState(null);\n  const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\n  const token = user.pass;\n  const postObject = {\n    title: postTitle,\n    content: postContent,\n    image: postImg\n  };\n  const formData = new FormData();\n  formData.append(\"title\", postTitle);\n  formData.append(\"content\", postContent);\n  formData.append(\"image\", postImg); // console.log(postImg);\n  // requêtes pour créer un nouvel article\n\n  const sendNewPost = async e => {\n    e.preventDefault();\n\n    try {\n      let res = await fetch(\"http://localhost:8080/api/articles/\", {\n        method: \"POST\",\n        // body: JSON.stringify(postObject),\n        body: formData,\n        headers: {\n          Authorization: `Bearer ${token}` // Accept: \"application/json\",\n          // \"Content-Type\": \"multipart/form-data\",\n          // \"Content-Type\": \"application/json\",\n\n        }\n      });\n      const data = await res.json();\n      console.log(\"======> Verifier l'envoi du post\");\n      console.log(data);\n      window.location.reload();\n    } catch (err) {\n      console.log(err);\n    }\n  }; // const changeHandler = (event) => {\n  //     setSelectedFile(event.target.files[0]);\n  //     event.target.files[0] && setIsFilePicked(true);\n  //    };\n\n\n  function handleChange(event) {\n    setPostImg(event.target.files[0]);\n    var file = event.target.files[0];\n    var reader = new FileReader();\n\n    reader.onload = function (event) {\n      // The file's text will be printed here\n      const {\n        result\n      } = event.target;\n      console.log(event.target.result);\n      setFileDataURL(result);\n    };\n\n    reader.readAsDataURL(file);\n  } // useEffect(() => {\n  //     // let fileReader, isCancel = false;\n  //     if (postImg) {\n  //         fileReader = new FileReader();\n  //         fileReader.onload = (e) => {\n  //             const { result } = e.target;\n  //             if (result && !isCancel) {\n  //                 setFileDataURL(result);\n  //             }\n  //         };\n  //         fileReader.readAsDataURL(postImg);\n  //     }\n  // }, []);\n  // function previewFile() {\n  //     const file = postImg;\n  //     const reader = new FileReader();\n  //     reader.addEventListener(\n  //         \"load\",\n  //         function () {\n  //             img.src = reader.result;\n  //         },\n  //         false\n  //     );\n  //     if (file) {\n  //         reader.readAsDataURL(file);\n  //     }\n  // }\n  // var reader = new FileReader();\n  // reader.onload = function (e) {\n  //     var img = postImg;\n  //     img.src = e.target.result;\n  // };\n  // reader.readAsDataURL(postImg);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendNewPost,\n      className: \"newPost__add\",\n      method: \"POST\",\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"newPost__add--title\",\n          type: \"text\",\n          name: \"title\",\n          placeholder: \"Votre titre ici...\",\n          onChange: e => setPostTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"newPost__add--content\",\n          type: \"text\",\n          name: \"content\",\n          placeholder: \"Votre text ici....\",\n          onChange: e => setPostContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"newPost__btn\",\n        children: [!postImg ? null : /*#__PURE__*/_jsxDEV(\"img\", {\n          width: \"300\",\n          src: fileDataURL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 40\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"btn\",\n            type: \"file\",\n            id: \"image\",\n            name: \"image\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"newPost__add--send btn\",\n          type: \"submit\",\n          value: \"Envoyer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PostForm, \"qF7FTpUjXhUHaUs3VrgTqEWi63g=\");\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useEffect","useState","PostForm","postTitle","setPostTitle","postContent","setPostContent","postImg","setPostImg","fileDataURL","setFileDataURL","user","JSON","parse","sessionStorage","getItem","token","pass","postObject","title","content","image","formData","FormData","append","sendNewPost","e","preventDefault","res","fetch","method","body","headers","Authorization","data","json","console","log","window","location","reload","err","handleChange","event","target","files","file","reader","FileReader","onload","result","readAsDataURL","value"],"sources":["F:/Works/Formation OC/SOUTENANCES/P7/groupomania/client/src/components/PostForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nfunction PostForm() {\r\n    // ===========> CREATE NEW POST\r\n\r\n    const [postTitle, setPostTitle] = useState(null);\r\n    const [postContent, setPostContent] = useState(null);\r\n    const [postImg, setPostImg] = useState(null);\r\n    const [fileDataURL, setFileDataURL] = useState(null);\r\n\r\n    const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\r\n    const token = user.pass;\r\n\r\n    const postObject = {\r\n        title: postTitle,\r\n        content: postContent,\r\n        image: postImg,\r\n    };\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"title\", postTitle);\r\n    formData.append(\"content\", postContent);\r\n    formData.append(\"image\", postImg);\r\n    // console.log(postImg);\r\n\r\n    // requêtes pour créer un nouvel article\r\n    const sendNewPost = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            let res = await fetch(\"http://localhost:8080/api/articles/\", {\r\n                method: \"POST\",\r\n                // body: JSON.stringify(postObject),\r\n                body: formData,\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                    // Accept: \"application/json\",\r\n                    // \"Content-Type\": \"multipart/form-data\",\r\n                    // \"Content-Type\": \"application/json\",\r\n                },\r\n            });\r\n\r\n            const data = await res.json();\r\n            console.log(\"======> Verifier l'envoi du post\");\r\n            console.log(data);\r\n\r\n            window.location.reload();\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    // const changeHandler = (event) => {\r\n    //     setSelectedFile(event.target.files[0]);\r\n    //     event.target.files[0] && setIsFilePicked(true);\r\n    //    };\r\n\r\n    function handleChange(event) {\r\n        setPostImg(event.target.files[0]);\r\n\r\n        var file = event.target.files[0];\r\n        var reader = new FileReader();\r\n        reader.onload = function (event) {\r\n            // The file's text will be printed here\r\n            const { result } = event.target;\r\n            console.log(event.target.result);\r\n            setFileDataURL(result);\r\n        };\r\n        reader.readAsDataURL(file);\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     // let fileReader, isCancel = false;\r\n    //     if (postImg) {\r\n    //         fileReader = new FileReader();\r\n    //         fileReader.onload = (e) => {\r\n    //             const { result } = e.target;\r\n    //             if (result && !isCancel) {\r\n    //                 setFileDataURL(result);\r\n    //             }\r\n    //         };\r\n    //         fileReader.readAsDataURL(postImg);\r\n    //     }\r\n    // }, []);\r\n\r\n    // function previewFile() {\r\n    //     const file = postImg;\r\n    //     const reader = new FileReader();\r\n\r\n    //     reader.addEventListener(\r\n    //         \"load\",\r\n    //         function () {\r\n    //             img.src = reader.result;\r\n    //         },\r\n    //         false\r\n    //     );\r\n\r\n    //     if (file) {\r\n    //         reader.readAsDataURL(file);\r\n    //     }\r\n    // }\r\n    // var reader = new FileReader();\r\n    // reader.onload = function (e) {\r\n    //     var img = postImg;\r\n\r\n    //     img.src = e.target.result;\r\n    // };\r\n\r\n    // reader.readAsDataURL(postImg);\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={sendNewPost} className=\"newPost__add\" method=\"POST\" encType=\"multipart/form-data\">\r\n                <label>\r\n                    <input\r\n                        className=\"newPost__add--title\"\r\n                        type=\"text\"\r\n                        name=\"title\"\r\n                        placeholder=\"Votre titre ici...\"\r\n                        onChange={(e) => setPostTitle(e.target.value)}\r\n                    />\r\n                </label>\r\n\r\n                <label>\r\n                    <textarea\r\n                        className=\"newPost__add--content\"\r\n                        type=\"text\"\r\n                        name=\"content\"\r\n                        placeholder=\"Votre text ici....\"\r\n                        onChange={(e) => setPostContent(e.target.value)}\r\n                    />\r\n                </label>\r\n\r\n                <div className=\"newPost__btn\">\r\n                    {!postImg ? null : <img width=\"300\" src={fileDataURL} />}\r\n                    <label htmlFor=\"image\">\r\n                        <input className=\"btn\" type=\"file\" id=\"image\" name=\"image\" onChange={handleChange} />\r\n                    </label>\r\n                    {/* <input className=\"btn\" type=\"file\" name=\"image\" onChange={(e) => setPostImg(e.target.value)} /> */}\r\n                    <input className=\"newPost__add--send btn\" type=\"submit\" value=\"Envoyer\" />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}