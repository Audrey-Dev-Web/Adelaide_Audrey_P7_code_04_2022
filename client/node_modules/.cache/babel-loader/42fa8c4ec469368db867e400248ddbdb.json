{"ast":null,"code":"var _jsxFileName = \"F:\\\\Works\\\\Formation OC\\\\SOUTENANCES\\\\P7\\\\groupomania\\\\client\\\\src\\\\webpages\\\\articles\\\\Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Post() {\n  _s();\n\n  let {\n    postSlug\n  } = useParams();\n  const [post, setPost] = useState(\"\");\n  console.log(\"=====> POST SLUG\");\n  console.log(postSlug); // Token de l'utilisateur\n\n  const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\n  const token = user.pass; // Request options\n\n  const url = `http://localhost:8080/api/articles/${postSlug}`;\n  const reqOptions = {\n    method: \"GET\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  const fetchDetails = () => {\n    fetch(url, reqOptions).then(res => res.json()).then(data => setPost(data));\n  }; // const getPostDetails = async () => {\n  //     try {\n  //         const res = await fetch(url, reqOptions);\n  //         const postData = await res.json();\n  //         // this.setState({ items: postsData.articlesFound, DataisLoaded: true });\n  //         setPost(postData);\n  //         console.log(postData.articleFound.id);\n  //         // console.log(post);\n  //         // console.log(this.state);\n  //     } catch (err) {\n  //         console.log(err);\n  //     }\n  // };\n\n\n  useEffect(() => {\n    fetchDetails(); // getPostDetails();\n  }, []);\n  console.log(\"=====> PostDetails results\");\n  console.log(post.articleFound);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: [post.articleFound.id, post.articleFound.title]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Post, \"0qZxgy3IKcKDlNXbd4ez133tyhM=\", false, function () {\n  return [useParams];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Route","Post","postSlug","post","setPost","console","log","user","JSON","parse","sessionStorage","getItem","token","pass","url","reqOptions","method","headers","Authorization","Accept","fetchDetails","fetch","then","res","json","data","articleFound","id","title"],"sources":["F:/Works/Formation OC/SOUTENANCES/P7/groupomania/client/src/webpages/articles/Post.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nfunction Post() {\r\n    let { postSlug } = useParams();\r\n    const [post, setPost] = useState(\"\");\r\n\r\n    console.log(\"=====> POST SLUG\");\r\n    console.log(postSlug);\r\n\r\n    // Token de l'utilisateur\r\n    const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\r\n    const token = user.pass;\r\n\r\n    // Request options\r\n    const url = `http://localhost:8080/api/articles/${postSlug}`;\r\n    const reqOptions = {\r\n        method: \"GET\",\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    const fetchDetails = () => {\r\n        fetch(url, reqOptions)\r\n            .then((res) => res.json())\r\n            .then((data) => setPost(data));\r\n    };\r\n\r\n    // const getPostDetails = async () => {\r\n    //     try {\r\n    //         const res = await fetch(url, reqOptions);\r\n    //         const postData = await res.json();\r\n    //         // this.setState({ items: postsData.articlesFound, DataisLoaded: true });\r\n    //         setPost(postData);\r\n    //         console.log(postData.articleFound.id);\r\n    //         // console.log(post);\r\n    //         // console.log(this.state);\r\n    //     } catch (err) {\r\n    //         console.log(err);\r\n    //     }\r\n    // };\r\n\r\n    useEffect(() => {\r\n        fetchDetails();\r\n        // getPostDetails();\r\n    }, []);\r\n\r\n    console.log(\"=====> PostDetails results\");\r\n    console.log(post.articleFound);\r\n\r\n    return (\r\n        <div className=\"post\">\r\n            {post.articleFound.id}\r\n            {post.articleFound.title}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,KAAT,QAAsB,kBAAtB;;;AAEA,SAASC,IAAT,GAAgB;EAAA;;EACZ,IAAI;IAAEC;EAAF,IAAeH,SAAS,EAA5B;EACA,MAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;EAEAO,OAAO,CAACC,GAAR,CAAY,kBAAZ;EACAD,OAAO,CAACC,GAAR,CAAYJ,QAAZ,EALY,CAOZ;;EACA,MAAMK,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,gBAAvB,CAAX,CAAb;EACA,MAAMC,KAAK,GAAGL,IAAI,CAACM,IAAnB,CATY,CAWZ;;EACA,MAAMC,GAAG,GAAI,sCAAqCZ,QAAS,EAA3D;EACA,MAAMa,UAAU,GAAG;IACfC,MAAM,EAAE,KADO;IAEfC,OAAO,EAAE;MACLC,aAAa,EAAG,UAASN,KAAM,EAD1B;MAELO,MAAM,EAAE,kBAFH;MAGL,gBAAgB;IAHX;EAFM,CAAnB;;EASA,MAAMC,YAAY,GAAG,MAAM;IACvBC,KAAK,CAACP,GAAD,EAAMC,UAAN,CAAL,CACKO,IADL,CACWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADnB,EAEKF,IAFL,CAEWG,IAAD,IAAUrB,OAAO,CAACqB,IAAD,CAF3B;EAGH,CAJD,CAtBY,CA4BZ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEA5B,SAAS,CAAC,MAAM;IACZuB,YAAY,GADA,CAEZ;EACH,CAHQ,EAGN,EAHM,CAAT;EAKAf,OAAO,CAACC,GAAR,CAAY,4BAAZ;EACAD,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACuB,YAAjB;EAEA,oBACI;IAAK,SAAS,EAAC,MAAf;IAAA,WACKvB,IAAI,CAACuB,YAAL,CAAkBC,EADvB,EAEKxB,IAAI,CAACuB,YAAL,CAAkBE,KAFvB;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH;;GAxDQ3B,I;UACcF,S;;;KADdE,I;AA0DT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}