{"ast":null,"code":"const url = `http://localhost:8080/api/auth/login`;\nconst userObject = {\n  email: email,\n  password: password\n};\nconst postLoggedIn = {\n  method: \"POST\",\n  body: JSON.stringify(userObject),\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n  }\n};\n\nconst Auth = async e => {\n  e.preventDefault();\n\n  try {\n    let res = await fetch(url, postLoggedIn);\n\n    if (res.status == 404) {\n      console.log(res.status);\n      setisAuthenticated(false);\n      setMsg(\"Cet utilisateur n'existe pas !\");\n    }\n\n    const data = await res.json(); // console.log(data);\n\n    setToken(data.token);\n    setUserId(data.userId); // setIsLoggedIn(true);\n\n    setisAuthenticated(true);\n    window.localStorage.setItem(\"user_token\", JSON.stringify(data.token));\n    window.localStorage.setItem(\"user_id\", JSON.stringify(data.userId));\n  } catch (error) {\n    setMsg(error);\n    console.log(error);\n  }\n};\n\n_c = Auth;\nmodule.exports = Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["url","userObject","email","password","postLoggedIn","method","body","JSON","stringify","headers","Accept","Auth","e","preventDefault","res","fetch","status","console","log","setisAuthenticated","setMsg","data","json","setToken","token","setUserId","userId","window","localStorage","setItem","error","module","exports"],"sources":["F:/Works/Formation OC/SOUTENANCES/P7/groupomania/client/src/components/Auth.js"],"sourcesContent":["const url = `http://localhost:8080/api/auth/login`;\r\n\r\nconst userObject = {\r\n    email: email,\r\n    password: password,\r\n};\r\n\r\nconst postLoggedIn = {\r\n    method: \"POST\",\r\n    body: JSON.stringify(userObject),\r\n    headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n    },\r\n};\r\n\r\nconst Auth = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n        let res = await fetch(url, postLoggedIn);\r\n\r\n        if (res.status == 404) {\r\n            console.log(res.status);\r\n            setisAuthenticated(false);\r\n            setMsg(\"Cet utilisateur n'existe pas !\");\r\n        }\r\n\r\n        const data = await res.json();\r\n        // console.log(data);\r\n\r\n        setToken(data.token);\r\n        setUserId(data.userId);\r\n        // setIsLoggedIn(true);\r\n        setisAuthenticated(true);\r\n\r\n        window.localStorage.setItem(\"user_token\", JSON.stringify(data.token));\r\n        window.localStorage.setItem(\"user_id\", JSON.stringify(data.userId));\r\n    } catch (error) {\r\n        setMsg(error);\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nmodule.exports = Auth;\r\n"],"mappings":"AAAA,MAAMA,GAAG,GAAI,sCAAb;AAEA,MAAMC,UAAU,GAAG;EACfC,KAAK,EAAEA,KADQ;EAEfC,QAAQ,EAAEA;AAFK,CAAnB;AAKA,MAAMC,YAAY,GAAG;EACjBC,MAAM,EAAE,MADS;EAEjBC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,UAAf,CAFW;EAGjBQ,OAAO,EAAE;IACLC,MAAM,EAAE,kBADH;IAEL,gBAAgB;EAFX;AAHQ,CAArB;;AASA,MAAMC,IAAI,GAAG,MAAOC,CAAP,IAAa;EACtBA,CAAC,CAACC,cAAF;;EAEA,IAAI;IACA,IAAIC,GAAG,GAAG,MAAMC,KAAK,CAACf,GAAD,EAAMI,YAAN,CAArB;;IAEA,IAAIU,GAAG,CAACE,MAAJ,IAAc,GAAlB,EAAuB;MACnBC,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACE,MAAhB;MACAG,kBAAkB,CAAC,KAAD,CAAlB;MACAC,MAAM,CAAC,gCAAD,CAAN;IACH;;IAED,MAAMC,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAnB,CATA,CAUA;;IAEAC,QAAQ,CAACF,IAAI,CAACG,KAAN,CAAR;IACAC,SAAS,CAACJ,IAAI,CAACK,MAAN,CAAT,CAbA,CAcA;;IACAP,kBAAkB,CAAC,IAAD,CAAlB;IAEAQ,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,YAA5B,EAA0CtB,IAAI,CAACC,SAAL,CAAea,IAAI,CAACG,KAApB,CAA1C;IACAG,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,SAA5B,EAAuCtB,IAAI,CAACC,SAAL,CAAea,IAAI,CAACK,MAApB,CAAvC;EACH,CAnBD,CAmBE,OAAOI,KAAP,EAAc;IACZV,MAAM,CAACU,KAAD,CAAN;IACAb,OAAO,CAACC,GAAR,CAAYY,KAAZ;EACH;AACJ,CA1BD;;KAAMnB,I;AA4BNoB,MAAM,CAACC,OAAP,GAAiBrB,IAAjB"},"metadata":{},"sourceType":"module"}