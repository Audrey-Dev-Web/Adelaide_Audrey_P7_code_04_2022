{"ast":null,"code":"var _jsxFileName = \"F:\\\\Works\\\\Formation OC\\\\SOUTENANCES\\\\P7\\\\groupomania\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n// import logo from \"./logo.svg\";\n// import \"./sass/App.scss\";\n// import React, { useState, Suspense, lazy } from \"react\";\n// import { BrowserRouter as Router, Route, Routes, Navigate } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport { Routes, Route, BrowserRouter, Router } from \"react-router-dom\";\nimport { Navigation, Footer, Login, Home, UserProfile } from \"./webpages\"; // Tutoriel Private Routes react\n// import Loader from \"shareComponent/Loader\";\n// import ProtectedRoutes from \"./routes/ProtectedRoutes\"; //Authenticated routes\n// import PublicRoute from \"./routes/PublicRoute\";\n// import PrivateRoute from \"./routes/PrivateRoute\";\n// const LoginPage = lazy(() => import(\"./webpages/Login\"));\n// const Register = lazy(() => import(\"components/Register\"));\n// const ForgotPassword = lazy(() => import(\"components/ForgotPassword\"));\n// const NoFoundComponent = lazy(() => import(\"components/NoFoundComponent\"));\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const [isLoggedIn, setisLoggedIn] = useState(null);\n  // const logIn = () => {\n  //     setisLoggedIn(true);\n  // };\n  // const logOut = () => {\n  //     setisLoggedIn(false);\n  // };\n  // let isLoggedIn = localStorage.getItem(\"user_id\");\n  // // console.log(isLoggedIn);\n  // const UserContext = React.createContext(\"user_logged_in\");\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // function getToken() {\n  //     return localStorage.getItem(\"user_token\");\n  // }\n  // setIsAuthenticated = false;\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App__bgColor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  } // const isAuthenticated = getToken();\n  // const isAuthenticated = localStorage.getItem(\"user_token\");\n  // const isAuthenticated = true;\n\n\n  return (\n    /*#__PURE__*/\n    // <div className=\"App\">\n    //     <div className=\"App__bgColor\"></div>\n    //     <Router>\n    //         {/* <Login /> */}\n    //         <header className=\"App-header\">\n    //             <Navigation />\n    //         </header>\n    //         <Routes>\n    //             <Route path=\"/home\" element={<Home />} />\n    //             <Route path=\"/userprofile\" element={<UserProfile />} />\n    //         </Routes>\n    //         <Footer />\n    //     </Router>\n    // </div>\n    _jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) // ===================> NOT WORKING\n    // // const [isAuthenticated, setIsAuthenticated] = useState(false);\n    // <BrowserRouter>\n    //     <div className=\"App\">\n    //         <div className=\"App__bgColor\"></div>\n    //         {/* {isLoggedIn ? <button onClick={logOut}>Logout</button> : <button onClick={logIn}>Login</button>} */}\n    //         <Routes>\n    //             {/* <Navigation /> */}\n    //             <Route path=\"/\" element={<Login />} />\n    //             {/* <Route\n    //                 path=\"/Navigation\"\n    //                 element={\n    //                     <ProtectedRoutes isAuthenticated={isAuthenticated}>\n    //                         <Navigation />\n    //                     </ProtectedRoutes>\n    //                 }\n    //             /> */}\n    //             <Route\n    //                 path=\"/Home\"\n    //                 element={\n    //                     <ProtectedRoutes isAuthenticated={isAuthenticated}>\n    //                         <Home />\n    //                     </ProtectedRoutes>\n    //                 }\n    //             />\n    //             <Route\n    //                 path=\"/profile\"\n    //                 element={\n    //                     <ProtectedRoutes isAuthenticated={isAuthenticated}>\n    //                         <UserProfile />\n    //                     </ProtectedRoutes>\n    //                 }\n    //             />\n    //             {/* <Route path=\"/\" isAuthenticated={isAuthenticated} element={Login} />\n    //         <Route path=\"/home\" isAuthenticated={isAuthenticated} element={Home} /> */}\n    //             {/* <PublicRoute path=\"/signup\" isAuthenticated={isAuthenticated} component={Signup} exact={true} /> */}\n    //         </Routes>\n    //     </div>\n    // </BrowserRouter>\n\n  );\n}\n\n_s(App, \"BT2f1XiqCgFHwobQTWR7kond0Ig=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Routes","Route","BrowserRouter","Router","Navigation","Footer","Login","Home","UserProfile","App","isAuthenticated","setIsAuthenticated"],"sources":["F:/Works/Formation OC/SOUTENANCES/P7/groupomania/client/src/App.js"],"sourcesContent":["// import logo from \"./logo.svg\";\n// import \"./sass/App.scss\";\n// import React, { useState, Suspense, lazy } from \"react\";\n// import { BrowserRouter as Router, Route, Routes, Navigate } from \"react-router-dom\";\n\nimport React, { useState } from \"react\";\nimport { Routes, Route, BrowserRouter, Router } from \"react-router-dom\";\nimport { Navigation, Footer, Login, Home, UserProfile } from \"./webpages\";\n\n// Tutoriel Private Routes react\n// import Loader from \"shareComponent/Loader\";\n// import ProtectedRoutes from \"./routes/ProtectedRoutes\"; //Authenticated routes\n// import PublicRoute from \"./routes/PublicRoute\";\n// import PrivateRoute from \"./routes/PrivateRoute\";\n\n// const LoginPage = lazy(() => import(\"./webpages/Login\"));\n// const Register = lazy(() => import(\"components/Register\"));\n// const ForgotPassword = lazy(() => import(\"components/ForgotPassword\"));\n// const NoFoundComponent = lazy(() => import(\"components/NoFoundComponent\"));\n\nfunction App() {\n    // const [isLoggedIn, setisLoggedIn] = useState(null);\n    // const logIn = () => {\n    //     setisLoggedIn(true);\n    // };\n    // const logOut = () => {\n    //     setisLoggedIn(false);\n    // };\n    // let isLoggedIn = localStorage.getItem(\"user_id\");\n    // // console.log(isLoggedIn);\n\n    // const UserContext = React.createContext(\"user_logged_in\");\n\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n    // function getToken() {\n    //     return localStorage.getItem(\"user_token\");\n    // }\n\n    // setIsAuthenticated = false;\n\n    if (isAuthenticated) {\n        return (\n            <div className=\"App\">\n                <div className=\"App__bgColor\"></div>\n                <Router>\n                    <Login />\n                </Router>\n            </div>\n        );\n    }\n\n    // const isAuthenticated = getToken();\n    // const isAuthenticated = localStorage.getItem(\"user_token\");\n    // const isAuthenticated = true;\n\n    return (\n        // <div className=\"App\">\n        //     <div className=\"App__bgColor\"></div>\n        //     <Router>\n        //         {/* <Login /> */}\n        //         <header className=\"App-header\">\n        //             <Navigation />\n        //         </header>\n        //         <Routes>\n        //             <Route path=\"/home\" element={<Home />} />\n        //             <Route path=\"/userprofile\" element={<UserProfile />} />\n        //         </Routes>\n        //         <Footer />\n        //     </Router>\n        // </div>\n\n        <Router>\n            <Navigation />\n            <Routes>\n                <Route path=\"/\" element={<Login />} />\n                {/* <Login /> */}\n            </Routes>\n        </Router>\n\n        // ===================> NOT WORKING\n\n        // // const [isAuthenticated, setIsAuthenticated] = useState(false);\n        // <BrowserRouter>\n        //     <div className=\"App\">\n        //         <div className=\"App__bgColor\"></div>\n        //         {/* {isLoggedIn ? <button onClick={logOut}>Logout</button> : <button onClick={logIn}>Login</button>} */}\n        //         <Routes>\n        //             {/* <Navigation /> */}\n        //             <Route path=\"/\" element={<Login />} />\n        //             {/* <Route\n        //                 path=\"/Navigation\"\n        //                 element={\n        //                     <ProtectedRoutes isAuthenticated={isAuthenticated}>\n        //                         <Navigation />\n        //                     </ProtectedRoutes>\n        //                 }\n        //             /> */}\n        //             <Route\n        //                 path=\"/Home\"\n        //                 element={\n        //                     <ProtectedRoutes isAuthenticated={isAuthenticated}>\n        //                         <Home />\n        //                     </ProtectedRoutes>\n        //                 }\n        //             />\n        //             <Route\n        //                 path=\"/profile\"\n        //                 element={\n        //                     <ProtectedRoutes isAuthenticated={isAuthenticated}>\n        //                         <UserProfile />\n        //                     </ProtectedRoutes>\n        //                 }\n        //             />\n        //             {/* <Route path=\"/\" isAuthenticated={isAuthenticated} element={Login} />\n        //         <Route path=\"/home\" isAuthenticated={isAuthenticated} element={Home} /> */}\n        //             {/* <PublicRoute path=\"/signup\" isAuthenticated={isAuthenticated} component={Signup} exact={true} /> */}\n        //         </Routes>\n        //     </div>\n        // </BrowserRouter>\n    );\n}\n\nexport default App;\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,aAAxB,EAAuCC,MAAvC,QAAqD,kBAArD;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,KAA7B,EAAoCC,IAApC,EAA0CC,WAA1C,QAA6D,YAA7D,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACX;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCZ,QAAQ,CAAC,KAAD,CAAtD,CAbW,CAeX;EACA;EACA;EAEA;;EAEA,IAAIW,eAAJ,EAAqB;IACjB,oBACI;MAAK,SAAS,EAAC,KAAf;MAAA,wBACI;QAAK,SAAS,EAAC;MAAf;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,MAAD;QAAA,uBACI,QAAC,KAAD;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAQH,CA9BU,CAgCX;EACA;EACA;;;EAEA;IAAA;IACI;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA,QAAC,MAAD;MAAA,wBACI,QAAC,UAAD;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,MAAD;QAAA,uBACI,QAAC,KAAD;UAAO,IAAI,EAAC,GAAZ;UAAgB,OAAO,eAAE,QAAC,KAAD;YAAA;YAAA;YAAA;UAAA;QAAzB;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAhBJ,CAwBI;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;EA/DJ;AAiEH;;GArGQD,G;;KAAAA,G;AAuGT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}