{"ast":null,"code":"var _jsxFileName = \"F:\\\\Works\\\\Formation OC\\\\SOUTENANCES\\\\P7\\\\groupomania\\\\client\\\\src\\\\components\\\\DeleteAccount.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { useParams } from \"react-router-dom\";\nimport { BiTrash } from \"react-icons/bi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeleteAccount(props) {\n  _s();\n\n  const {\n    access,\n    userId,\n    userObject\n  } = props;\n  let navigate = useNavigate();\n  let {\n    postSlug\n  } = useParams();\n  console.log(userObject); // const userObject = {\n  //     token: access.token,\n  //     user_id: access.user_id,\n  //     role: access.role,\n  // };\n  // console.log(userObject);\n  // On récupère l'id de l'utilisateur\n  // const { userId } = props;\n\n  const [isAuthorized, setIsAuthorized] = useState(false);\n  console.log(access); // On récupère les données pour les authorisations\n  // const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\n  // const token2 = user.pass;\n  // const user_id = user.id;\n  // const user_role = user.role;\n  // const role = \"admin\";\n  // const token = access.token;\n  // const user_id = access.user_id;\n  // const user_role = access.role;\n  // On configure la requête\n\n  const url = `http://localhost:8080/api/profiles/${userId}`;\n  const reqOptions = {\n    method: \"DELETE\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  }; // On vérifi si l'utilisateur est autorisé à supprimer ce compte\n\n  const authorization = async () => {\n    if (user_id === userId || user_role === \"admin\") {\n      setIsAuthorized(true);\n    }\n  };\n\n  useEffect(() => {\n    authorization();\n  }, []); // Requête pour supprimer le compte\n\n  const delAccount = async e => {\n    // e.preventDefault();\n    console.log(\"click\");\n\n    try {\n      let res = await fetch(url, reqOptions);\n      let deleteRes = await res.json(); // console.log(\"=====> Réponse commentaire envoyé : \");\n      // console.log(deleteRes);\n\n      if (res.ok) {\n        // window.location.reload();\n        if (postSlug === undefined) {\n          window.location.reload();\n        }\n\n        navigate(\"/\");\n        window.location.reload();\n        sessionStorage.removeItem(\"isAuthenticate\");\n      } else {\n        throw new Error(\"Error\");\n      } // window.location.reload();\n\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !isAuthorized ? null :\n    /*#__PURE__*/\n    // <button className=\"account__delete btn btn__delete\" onClick={(e) => delAccount(e)}>\n    _jsxDEV(\"button\", {\n      className: \"account__delete btn btn__delete\",\n      onClick: () => {\n        const confirmBox = window.confirm(\"Voulez vous vraiment supprimer votre compte ?\");\n\n        if (confirmBox === true) {\n          delAccount();\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(BiTrash, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DeleteAccount, \"n1gST+Oh3VDKqjDJWkGevK5GKrg=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = DeleteAccount;\nexport default DeleteAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteAccount\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","BiTrash","DeleteAccount","props","access","userId","userObject","navigate","postSlug","console","log","isAuthorized","setIsAuthorized","url","reqOptions","method","headers","Authorization","token","Accept","authorization","user_id","user_role","delAccount","e","res","fetch","deleteRes","json","ok","undefined","window","location","reload","sessionStorage","removeItem","Error","err","confirmBox","confirm"],"sources":["F:/Works/Formation OC/SOUTENANCES/P7/groupomania/client/src/components/DeleteAccount.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { BiTrash } from \"react-icons/bi\";\r\n\r\nfunction DeleteAccount(props) {\r\n    const { access, userId, userObject } = props;\r\n    let navigate = useNavigate();\r\n    let { postSlug } = useParams();\r\n\r\n    console.log(userObject);\r\n    // const userObject = {\r\n    //     token: access.token,\r\n    //     user_id: access.user_id,\r\n    //     role: access.role,\r\n    // };\r\n\r\n    // console.log(userObject);\r\n    // On récupère l'id de l'utilisateur\r\n    // const { userId } = props;\r\n\r\n    const [isAuthorized, setIsAuthorized] = useState(false);\r\n\r\n    console.log(access);\r\n    // On récupère les données pour les authorisations\r\n    // const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\r\n    // const token2 = user.pass;\r\n    // const user_id = user.id;\r\n    // const user_role = user.role;\r\n    // const role = \"admin\";\r\n\r\n    // const token = access.token;\r\n    // const user_id = access.user_id;\r\n    // const user_role = access.role;\r\n\r\n    // On configure la requête\r\n    const url = `http://localhost:8080/api/profiles/${userId}`;\r\n    const reqOptions = {\r\n        method: \"DELETE\",\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    // On vérifi si l'utilisateur est autorisé à supprimer ce compte\r\n    const authorization = async () => {\r\n        if (user_id === userId || user_role === \"admin\") {\r\n            setIsAuthorized(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        authorization();\r\n    }, []);\r\n\r\n    // Requête pour supprimer le compte\r\n    const delAccount = async (e) => {\r\n        // e.preventDefault();\r\n        console.log(\"click\");\r\n        try {\r\n            let res = await fetch(url, reqOptions);\r\n            let deleteRes = await res.json();\r\n            // console.log(\"=====> Réponse commentaire envoyé : \");\r\n            // console.log(deleteRes);\r\n\r\n            if (res.ok) {\r\n                // window.location.reload();\r\n                if (postSlug === undefined) {\r\n                    window.location.reload();\r\n                }\r\n\r\n                navigate(\"/\");\r\n                window.location.reload();\r\n                sessionStorage.removeItem(\"isAuthenticate\");\r\n            } else {\r\n                throw new Error(\"Error\");\r\n            }\r\n\r\n            // window.location.reload();\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!isAuthorized ? null : (\r\n                // <button className=\"account__delete btn btn__delete\" onClick={(e) => delAccount(e)}>\r\n                <button\r\n                    className=\"account__delete btn btn__delete\"\r\n                    onClick={() => {\r\n                        const confirmBox = window.confirm(\"Voulez vous vraiment supprimer votre compte ?\");\r\n\r\n                        if (confirmBox === true) {\r\n                            delAccount();\r\n                        }\r\n                    }}\r\n                >\r\n                    <BiTrash />\r\n                </button>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DeleteAccount;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,SAASC,OAAT,QAAwB,gBAAxB;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;EAAA;;EAC1B,MAAM;IAAEC,MAAF;IAAUC,MAAV;IAAkBC;EAAlB,IAAiCH,KAAvC;EACA,IAAII,QAAQ,GAAGR,WAAW,EAA1B;EACA,IAAI;IAAES;EAAF,IAAeR,SAAS,EAA5B;EAEAS,OAAO,CAACC,GAAR,CAAYJ,UAAZ,EAL0B,CAM1B;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;;EAEA,MAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,KAAD,CAAhD;EAEAY,OAAO,CAACC,GAAR,CAAYN,MAAZ,EAlB0B,CAmB1B;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;;EACA,MAAMS,GAAG,GAAI,sCAAqCR,MAAO,EAAzD;EACA,MAAMS,UAAU,GAAG;IACfC,MAAM,EAAE,QADO;IAEfC,OAAO,EAAE;MACLC,aAAa,EAAG,UAASC,KAAM,EAD1B;MAELC,MAAM,EAAE,kBAFH;MAGL,gBAAgB;IAHX;EAFM,CAAnB,CAhC0B,CAyC1B;;EACA,MAAMC,aAAa,GAAG,YAAY;IAC9B,IAAIC,OAAO,KAAKhB,MAAZ,IAAsBiB,SAAS,KAAK,OAAxC,EAAiD;MAC7CV,eAAe,CAAC,IAAD,CAAf;IACH;EACJ,CAJD;;EAMAd,SAAS,CAAC,MAAM;IACZsB,aAAa;EAChB,CAFQ,EAEN,EAFM,CAAT,CAhD0B,CAoD1B;;EACA,MAAMG,UAAU,GAAG,MAAOC,CAAP,IAAa;IAC5B;IACAf,OAAO,CAACC,GAAR,CAAY,OAAZ;;IACA,IAAI;MACA,IAAIe,GAAG,GAAG,MAAMC,KAAK,CAACb,GAAD,EAAMC,UAAN,CAArB;MACA,IAAIa,SAAS,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAtB,CAFA,CAGA;MACA;;MAEA,IAAIH,GAAG,CAACI,EAAR,EAAY;QACR;QACA,IAAIrB,QAAQ,KAAKsB,SAAjB,EAA4B;UACxBC,MAAM,CAACC,QAAP,CAAgBC,MAAhB;QACH;;QAED1B,QAAQ,CAAC,GAAD,CAAR;QACAwB,MAAM,CAACC,QAAP,CAAgBC,MAAhB;QACAC,cAAc,CAACC,UAAf,CAA0B,gBAA1B;MACH,CATD,MASO;QACH,MAAM,IAAIC,KAAJ,CAAU,OAAV,CAAN;MACH,CAjBD,CAmBA;;IACH,CApBD,CAoBE,OAAOC,GAAP,EAAY;MACV5B,OAAO,CAACC,GAAR,CAAY2B,GAAZ;IACH;EACJ,CA1BD;;EA4BA,oBACI;IAAA,UACK,CAAC1B,YAAD,GAAgB,IAAhB;IAAA;IACG;IACA;MACI,SAAS,EAAC,iCADd;MAEI,OAAO,EAAE,MAAM;QACX,MAAM2B,UAAU,GAAGP,MAAM,CAACQ,OAAP,CAAe,+CAAf,CAAnB;;QAEA,IAAID,UAAU,KAAK,IAAnB,EAAyB;UACrBf,UAAU;QACb;MACJ,CARL;MAAA,uBAUI,QAAC,OAAD;QAAA;QAAA;QAAA;MAAA;IAVJ;MAAA;MAAA;MAAA;IAAA;EAHR;IAAA;IAAA;IAAA;EAAA,QADJ;AAmBH;;GApGQrB,a;UAEUH,W,EACIC,S;;;KAHdE,a;AAsGT,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}