{"ast":null,"code":"var _jsxFileName = \"F:\\\\Works\\\\Formation OC\\\\SOUTENANCES\\\\P7\\\\groupomania\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n// import logo from \"./logo.svg\";\n// import \"./sass/App.scss\";\n// import React, { useState, Suspense, lazy } from \"react\";\n// import { BrowserRouter as Router, Route, Routes, Navigate } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport { Routes, Route, BrowserRouter, Router } from \"react-router-dom\";\nimport { Navigation, Footer, Login, Home, UserProfile } from \"./webpages\"; // import ProtectedRoutes from \"./routes/ProtectedRoutes\"; //Authenticated routes\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const [isLoggedIn, setisLoggedIn] = useState(null);\n  // const logIn = () => {\n  //     setisLoggedIn(true);\n  // };\n  // const logOut = () => {\n  //     setisLoggedIn(false);\n  // };\n  // let isLoggedIn = localStorage.getItem(\"user_id\");\n  // // console.log(isLoggedIn);\n  // const UserContext = React.createContext(\"user_logged_in\");\n  // const [token, setToken] = useState(\"\");\n  const [user, setUser] = useState(\"\");\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // On récupère le token de connexion\n  // function getToken() {\n  //     setToken(localStorage.getItem(\"user_token\"));\n  //     return;\n  // }\n  // // On récupère l'id de connexion\n  // function getUser() {\n  //     setUser(localStorage.getItem(\"user_id\"));\n  //     return;\n  // }\n\n  setUser(sessionStorage.getItem(\"isAuthenticate\"));\n\n  if (user) {\n    console.log(\"user = \" + user);\n  }\n\n  if (isAuthenticated == false) {\n    return (\n      /*#__PURE__*/\n      // <Router>\n      //     <div className=\"App\">\n      //         <div className=\"App__bgColor\"></div>\n      //         <Login />\n      //     </div>\n      // </Router>\n      _jsxDEV(BrowserRouter, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"App__bgColor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)\n    );\n  } // const isAuthenticated = getToken();\n  // const isAuthenticated = localStorage.getItem(\"user_token\");\n  // const isAuthenticated = true;\n\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App__bgColor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile\",\n          element: /*#__PURE__*/_jsxDEV(UserProfile, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this) // ===================> NOT WORKING\n  // const [isAuthenticated, setIsAuthenticated] = useState(false);\n  // <BrowserRouter>\n  //     <div className=\"App\">\n  //         <div className=\"App__bgColor\"></div>\n  //         {/* {isLoggedIn ? <button onClick={logOut}>Logout</button> : <button onClick={logIn}>Login</button>} */}\n  //         <Routes>\n  //             <Navigation />\n  //             {/* <Route path=\"/\" element={<Login />} /> */}\n  //             {/* <Route\n  //                 path=\"/Navigation\"\n  //                 element={\n  //                     <ProtectedRoutes isAuthenticated={isAuthenticated}>\n  //                         <Navigation />\n  //                     </ProtectedRoutes>\n  //                 }\n  //             /> */}\n  //             <Route\n  //                 path=\"/Home\"\n  //                 element={\n  //                     <ProtectedRoutes isAuthenticated={isAuthenticated}>\n  //                         <Home />\n  //                     </ProtectedRoutes>\n  //                 }\n  //             />\n  //             <Route\n  //                 path=\"/UserProfile\"\n  //                 element={\n  //                     <ProtectedRoutes isAuthenticated={isAuthenticated}>\n  //                         <UserProfile />\n  //                     </ProtectedRoutes>\n  //                 }\n  //             />\n  //             {/* <Route path=\"/\" isAuthenticated={isAuthenticated} element={Login} />\n  //         <Route path=\"/home\" isAuthenticated={isAuthenticated} element={Home} /> */}\n  //             {/* <PublicRoute path=\"/signup\" isAuthenticated={isAuthenticated} component={Signup} exact={true} /> */}\n  //             <Footer />\n  //         </Routes>\n  //     </div>\n  // </BrowserRouter>\n  ;\n}\n\n_s(App, \"sHe3VQODO3oUPk/J+mc0kiHFVVg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Routes","Route","BrowserRouter","Router","Navigation","Footer","Login","Home","UserProfile","App","user","setUser","isAuthenticated","setIsAuthenticated","sessionStorage","getItem","console","log"],"sources":["F:/Works/Formation OC/SOUTENANCES/P7/groupomania/client/src/App.js"],"sourcesContent":["// import logo from \"./logo.svg\";\n// import \"./sass/App.scss\";\n// import React, { useState, Suspense, lazy } from \"react\";\n// import { BrowserRouter as Router, Route, Routes, Navigate } from \"react-router-dom\";\n\nimport React, { useState } from \"react\";\nimport { Routes, Route, BrowserRouter, Router } from \"react-router-dom\";\nimport { Navigation, Footer, Login, Home, UserProfile } from \"./webpages\";\n\n// import ProtectedRoutes from \"./routes/ProtectedRoutes\"; //Authenticated routes\n\nfunction App() {\n    // const [isLoggedIn, setisLoggedIn] = useState(null);\n    // const logIn = () => {\n    //     setisLoggedIn(true);\n    // };\n    // const logOut = () => {\n    //     setisLoggedIn(false);\n    // };\n    // let isLoggedIn = localStorage.getItem(\"user_id\");\n    // // console.log(isLoggedIn);\n\n    // const UserContext = React.createContext(\"user_logged_in\");\n\n    // const [token, setToken] = useState(\"\");\n    const [user, setUser] = useState(\"\");\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n    // On récupère le token de connexion\n    // function getToken() {\n    //     setToken(localStorage.getItem(\"user_token\"));\n    //     return;\n    // }\n\n    // // On récupère l'id de connexion\n    // function getUser() {\n    //     setUser(localStorage.getItem(\"user_id\"));\n    //     return;\n    // }\n    setUser(sessionStorage.getItem(\"isAuthenticate\"));\n\n    if (user) {\n        console.log(\"user = \" + user);\n    }\n\n    if (isAuthenticated == false) {\n        return (\n            // <Router>\n            //     <div className=\"App\">\n            //         <div className=\"App__bgColor\"></div>\n            //         <Login />\n            //     </div>\n            // </Router>\n            <BrowserRouter>\n                <div className=\"App\">\n                    <div className=\"App__bgColor\"></div>\n                    <Login />\n                </div>\n            </BrowserRouter>\n        );\n    }\n\n    // const isAuthenticated = getToken();\n    // const isAuthenticated = localStorage.getItem(\"user_token\");\n    // const isAuthenticated = true;\n\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n                <div className=\"App__bgColor\"></div>\n                {/* <Login /> */}\n                <header className=\"App-header\">\n                    <Navigation />\n                </header>\n                <Routes>\n                    <Route path=\"/\" element={<Home />} />\n                    <Route path=\"/profile\" element={<UserProfile />} />\n                </Routes>\n                <Footer />\n            </div>\n        </BrowserRouter>\n\n        // ===================> NOT WORKING\n\n        // const [isAuthenticated, setIsAuthenticated] = useState(false);\n        // <BrowserRouter>\n        //     <div className=\"App\">\n        //         <div className=\"App__bgColor\"></div>\n        //         {/* {isLoggedIn ? <button onClick={logOut}>Logout</button> : <button onClick={logIn}>Login</button>} */}\n        //         <Routes>\n        //             <Navigation />\n        //             {/* <Route path=\"/\" element={<Login />} /> */}\n        //             {/* <Route\n        //                 path=\"/Navigation\"\n        //                 element={\n        //                     <ProtectedRoutes isAuthenticated={isAuthenticated}>\n        //                         <Navigation />\n        //                     </ProtectedRoutes>\n        //                 }\n        //             /> */}\n        //             <Route\n        //                 path=\"/Home\"\n        //                 element={\n        //                     <ProtectedRoutes isAuthenticated={isAuthenticated}>\n        //                         <Home />\n        //                     </ProtectedRoutes>\n        //                 }\n        //             />\n        //             <Route\n        //                 path=\"/UserProfile\"\n        //                 element={\n        //                     <ProtectedRoutes isAuthenticated={isAuthenticated}>\n        //                         <UserProfile />\n        //                     </ProtectedRoutes>\n        //                 }\n        //             />\n        //             {/* <Route path=\"/\" isAuthenticated={isAuthenticated} element={Login} />\n        //         <Route path=\"/home\" isAuthenticated={isAuthenticated} element={Home} /> */}\n        //             {/* <PublicRoute path=\"/signup\" isAuthenticated={isAuthenticated} component={Signup} exact={true} /> */}\n        //             <Footer />\n        //         </Routes>\n        //     </div>\n        // </BrowserRouter>\n    );\n}\n\nexport default App;\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,aAAxB,EAAuCC,MAAvC,QAAqD,kBAArD;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,KAA7B,EAAoCC,IAApC,EAA0CC,WAA1C,QAA6D,YAA7D,C,CAEA;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACX;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACa,eAAD,EAAkBC,kBAAlB,IAAwCd,QAAQ,CAAC,KAAD,CAAtD,CAfW,CAiBX;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;;EACAY,OAAO,CAACG,cAAc,CAACC,OAAf,CAAuB,gBAAvB,CAAD,CAAP;;EAEA,IAAIL,IAAJ,EAAU;IACNM,OAAO,CAACC,GAAR,CAAY,YAAYP,IAAxB;EACH;;EAED,IAAIE,eAAe,IAAI,KAAvB,EAA8B;IAC1B;MAAA;MACI;MACA;MACA;MACA;MACA;MACA;MACA,QAAC,aAAD;QAAA,uBACI;UAAK,SAAS,EAAC,KAAf;UAAA,wBACI;YAAK,SAAS,EAAC;UAAf;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI,QAAC,KAAD;YAAA;YAAA;YAAA;UAAA,QAFJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA;IAPJ;EAcH,CAjDU,CAmDX;EACA;EACA;;;EAEA,oBACI,QAAC,aAAD;IAAA,uBACI;MAAK,SAAS,EAAC,KAAf;MAAA,wBACI;QAAK,SAAS,EAAC;MAAf;QAAA;QAAA;QAAA;MAAA,QADJ,eAGI;QAAQ,SAAS,EAAC,YAAlB;QAAA,uBACI,QAAC,UAAD;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAHJ,eAMI,QAAC,MAAD;QAAA,wBACI,QAAC,KAAD;UAAO,IAAI,EAAC,GAAZ;UAAgB,OAAO,eAAE,QAAC,IAAD;YAAA;YAAA;YAAA;UAAA;QAAzB;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,KAAD;UAAO,IAAI,EAAC,UAAZ;UAAuB,OAAO,eAAE,QAAC,WAAD;YAAA;YAAA;YAAA;UAAA;QAAhC;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QANJ,eAUI,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QAVJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ,CAgBI;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAxDJ;AA0DH;;GAjHQH,G;;KAAAA,G;AAmHT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}