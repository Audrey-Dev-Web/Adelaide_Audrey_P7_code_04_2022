{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\n\nconst Auth = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\"); // Creation du user connecté\n\n  const [user, setUser] = useState(\"\"); // Message d'erreur\n\n  const [msg, setMsg] = useState(\"\");\n  const url = `http://localhost:8080/api/auth/login`; // L'objet user envoyer pour la connexion\n\n  const userObject = {\n    email: email,\n    password: password\n  }; // La method\n\n  const postLoggedIn = {\n    method: \"POST\",\n    body: JSON.stringify(userObject),\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  const Auth = async e => {\n    e.preventDefault();\n\n    try {\n      let res = await fetch(url, postLoggedIn);\n\n      if (res.status === 404) {\n        setMsg(\"Cet utilisateur n'existe pas !\");\n      } else {\n        const data = await res.json();\n        setUser({\n          id: data.userId,\n          pass: data.token\n        });\n      } // if (res.ok) {\n      // }\n\n    } catch (error) {\n      setMsg(error);\n    }\n  };\n\n  if (user) {\n    sessionStorage.setItem(\"isAuthenticate\", JSON.stringify(user));\n    window.location.reload(true);\n  }\n};\n\n_s(Auth, \"MObUoXr19iCspLExxz+8kZnBSNM=\");\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","Auth","email","setEmail","password","setPassword","user","setUser","msg","setMsg","url","userObject","postLoggedIn","method","body","JSON","stringify","headers","Accept","e","preventDefault","res","fetch","status","data","json","id","userId","pass","token","error","sessionStorage","setItem","window","location","reload"],"sources":["F:/Works/Formation OC/SOUTENANCES/P7/groupomania/client/src/webpages/Auth.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Auth = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    // Creation du user connecté\r\n    const [user, setUser] = useState(\"\");\r\n\r\n    // Message d'erreur\r\n    const [msg, setMsg] = useState(\"\");\r\n\r\n    const url = `http://localhost:8080/api/auth/login`;\r\n\r\n    // L'objet user envoyer pour la connexion\r\n    const userObject = {\r\n        email: email,\r\n        password: password,\r\n    };\r\n\r\n    // La method\r\n    const postLoggedIn = {\r\n        method: \"POST\",\r\n        body: JSON.stringify(userObject),\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    const Auth = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            let res = await fetch(url, postLoggedIn);\r\n\r\n            if (res.status === 404) {\r\n                setMsg(\"Cet utilisateur n'existe pas !\");\r\n            } else {\r\n                const data = await res.json();\r\n                setUser({ id: data.userId, pass: data.token });\r\n            }\r\n\r\n            // if (res.ok) {\r\n            // }\r\n        } catch (error) {\r\n            setMsg(error);\r\n        }\r\n    };\r\n\r\n    if (user) {\r\n        sessionStorage.setItem(\"isAuthenticate\", JSON.stringify(user));\r\n        window.location.reload(true);\r\n    }\r\n};\r\n\r\nexport default Auth;\r\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACf,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC,CAFe,CAIf;;EACA,MAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC,CALe,CAOf;;EACA,MAAM,CAACQ,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAAC,EAAD,CAA9B;EAEA,MAAMU,GAAG,GAAI,sCAAb,CAVe,CAYf;;EACA,MAAMC,UAAU,GAAG;IACfT,KAAK,EAAEA,KADQ;IAEfE,QAAQ,EAAEA;EAFK,CAAnB,CAbe,CAkBf;;EACA,MAAMQ,YAAY,GAAG;IACjBC,MAAM,EAAE,MADS;IAEjBC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,UAAf,CAFW;IAGjBM,OAAO,EAAE;MACLC,MAAM,EAAE,kBADH;MAEL,gBAAgB;IAFX;EAHQ,CAArB;;EASA,MAAMjB,IAAI,GAAG,MAAOkB,CAAP,IAAa;IACtBA,CAAC,CAACC,cAAF;;IAEA,IAAI;MACA,IAAIC,GAAG,GAAG,MAAMC,KAAK,CAACZ,GAAD,EAAME,YAAN,CAArB;;MAEA,IAAIS,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;QACpBd,MAAM,CAAC,gCAAD,CAAN;MACH,CAFD,MAEO;QACH,MAAMe,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAAnB;QACAlB,OAAO,CAAC;UAAEmB,EAAE,EAAEF,IAAI,CAACG,MAAX;UAAmBC,IAAI,EAAEJ,IAAI,CAACK;QAA9B,CAAD,CAAP;MACH,CARD,CAUA;MACA;;IACH,CAZD,CAYE,OAAOC,KAAP,EAAc;MACZrB,MAAM,CAACqB,KAAD,CAAN;IACH;EACJ,CAlBD;;EAoBA,IAAIxB,IAAJ,EAAU;IACNyB,cAAc,CAACC,OAAf,CAAuB,gBAAvB,EAAyCjB,IAAI,CAACC,SAAL,CAAeV,IAAf,CAAzC;IACA2B,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,IAAvB;EACH;AACJ,CApDD;;GAAMlC,I;;KAAAA,I;AAsDN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}