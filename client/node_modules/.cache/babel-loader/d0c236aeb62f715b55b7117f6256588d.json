{"ast":null,"code":"var _jsxFileName = \"F:\\\\Works\\\\Formation OC\\\\SOUTENANCES\\\\P7\\\\groupomania\\\\client\\\\src\\\\components\\\\PostForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // import UploadFile from \"./UploadFile\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostForm() {\n  _s();\n\n  // ===========> CREATE NEW POST\n  const [postTitle, setPostTitle] = useState(\"\");\n  const [postContent, setPostContent] = useState(\"\");\n  const [postImg, setPostImg] = useState(\"\");\n  const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\n  const token = user.pass;\n  const postObject = {\n    title: postTitle,\n    content: postContent,\n    image: postImg\n  };\n  console.log(postImg);\n\n  const sendNewPost = async e => {\n    e.preventDefault();\n\n    try {\n      let res = await fetch(\"http://localhost:8080/api/articles/\", {\n        method: \"POST\",\n        body: JSON.stringify(postObject),\n        headers: {\n          Authorization: `Bearer ${token}`,\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await res.json();\n      console.log(\"======> Verifier l'envoi du post\");\n      console.log(data);\n      window.location.reload();\n    } catch (err) {\n      console.log(err);\n    }\n  }; // const uploadFile = async(e) => {\n  //   e.preventDefault();\n  //   try {\n  //   } catch(err) {\n  //     console.log(err)\n  //   }\n  // }\n\n\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const onChangeHandler = event => {\n    console.log(event.target.files[0]);\n    setSelectedFile(event.target.files[0]);\n    console.log(selectedFile);\n  };\n\n  onClickHandler = async e => {\n    e.preventDefault();\n    const data = new FormData();\n    data.append(\"file\", selectedFile);\n\n    try {\n      let res = await fetch(\"http://localhost:8080/api/articles/\", {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const dataFile = await res.json();\n      console.log(\"======> Verifier l'envoi du post\");\n      console.log(dataFile);\n      window.location.reload();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  console.log(selectedFile);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"newPost__add\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"newPost__add--title\",\n          type: \"text\",\n          name: \"title\",\n          placeholder: \"Votre titre ici...\",\n          onChange: e => setPostTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"newPost__add--content\",\n          type: \"text\",\n          name: \"content\",\n          placeholder: \"Votre text ici....\",\n          onChange: e => setPostContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"newPost__btn\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"btn\",\n          type: \"file\",\n          onChange: onChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"newPost__add--img btn\",\n          type: \"submit\",\n          onClick: onClickHandler,\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"newPost__add--send btn\",\n          type: \"submit\",\n          value: \"Envoyer\",\n          onClick: sendNewPost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PostForm, \"+pUtHc0uULphFdhazVNXZD+v09U=\");\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useState","PostForm","postTitle","setPostTitle","postContent","setPostContent","postImg","setPostImg","user","JSON","parse","sessionStorage","getItem","token","pass","postObject","title","content","image","console","log","sendNewPost","e","preventDefault","res","fetch","method","body","stringify","headers","Authorization","Accept","data","json","window","location","reload","err","selectedFile","setSelectedFile","onChangeHandler","event","target","files","onClickHandler","FormData","append","dataFile","value"],"sources":["F:/Works/Formation OC/SOUTENANCES/P7/groupomania/client/src/components/PostForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\n// import UploadFile from \"./UploadFile\";\r\n\r\nfunction PostForm() {\r\n    // ===========> CREATE NEW POST\r\n\r\n    const [postTitle, setPostTitle] = useState(\"\");\r\n    const [postContent, setPostContent] = useState(\"\");\r\n    const [postImg, setPostImg] = useState(\"\");\r\n\r\n    const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\r\n    const token = user.pass;\r\n\r\n    const postObject = {\r\n        title: postTitle,\r\n        content: postContent,\r\n        image: postImg,\r\n    };\r\n\r\n    console.log(postImg);\r\n\r\n    const sendNewPost = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            let res = await fetch(\"http://localhost:8080/api/articles/\", {\r\n                method: \"POST\",\r\n                body: JSON.stringify(postObject),\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            });\r\n\r\n            const data = await res.json();\r\n            console.log(\"======> Verifier l'envoi du post\");\r\n            console.log(data);\r\n\r\n            window.location.reload();\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    // const uploadFile = async(e) => {\r\n    //   e.preventDefault();\r\n\r\n    //   try {\r\n\r\n    //   } catch(err) {\r\n    //     console.log(err)\r\n    //   }\r\n    // }\r\n\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n    const onChangeHandler = (event) => {\r\n        console.log(event.target.files[0]);\r\n\r\n        setSelectedFile(event.target.files[0]);\r\n\r\n        console.log(selectedFile);\r\n    };\r\n\r\n    onClickHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = new FormData();\r\n        data.append(\"file\", selectedFile);\r\n\r\n        try {\r\n            let res = await fetch(\"http://localhost:8080/api/articles/\", {\r\n                method: \"POST\",\r\n                body: JSON.stringify(data),\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n\r\n            const dataFile = await res.json();\r\n            console.log(\"======> Verifier l'envoi du post\");\r\n            console.log(dataFile);\r\n\r\n            window.location.reload();\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    console.log(selectedFile);\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"newPost__add\">\r\n                <label>\r\n                    <input\r\n                        className=\"newPost__add--title\"\r\n                        type=\"text\"\r\n                        name=\"title\"\r\n                        placeholder=\"Votre titre ici...\"\r\n                        onChange={(e) => setPostTitle(e.target.value)}\r\n                    />\r\n                </label>\r\n\r\n                <label>\r\n                    <textarea\r\n                        className=\"newPost__add--content\"\r\n                        type=\"text\"\r\n                        name=\"content\"\r\n                        placeholder=\"Votre text ici....\"\r\n                        onChange={(e) => setPostContent(e.target.value)}\r\n                    />\r\n                </label>\r\n\r\n                <div className=\"newPost__btn\">\r\n                    {/* <input className=\"newPost__add--img btn\" type=\"file\" onChange={(e) => setPostImg(e.target.value)} /> */}\r\n                    {/* <input className=\"btn\" type=\"file\" onChange={(e) => setPostImg(e.target.value)} /> */}\r\n                    <input className=\"btn\" type=\"file\" onChange={onChangeHandler} />\r\n                    <button className=\"newPost__add--img btn\" type=\"submit\" onClick={onClickHandler}>\r\n                        Upload\r\n                    </button>\r\n\r\n                    <input className=\"newPost__add--send btn\" type=\"submit\" value=\"Envoyer\" onClick={sendNewPost} />\r\n                </div>\r\n            </form>\r\n            {/* <UploadFile /> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}