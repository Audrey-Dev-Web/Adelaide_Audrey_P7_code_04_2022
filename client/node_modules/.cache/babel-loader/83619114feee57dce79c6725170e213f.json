{"ast":null,"code":"var _jsxFileName = \"F:\\\\Works\\\\Formation OC\\\\SOUTENANCES\\\\P7\\\\groupomania\\\\client\\\\src\\\\components\\\\EditComment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditComment(props) {\n  _s();\n\n  // On récupère l'id de l'utilisateur avec props\n  const {\n    post_id,\n    author_id,\n    comment_id,\n    comment_value\n  } = props; // On prépare le state local pour stocker les données à modifier\n\n  const [comment, setComment] = useState(comment_value);\n  const [isAuthor, setIsAuthor] = useState(false); // Hide and show form\n\n  const [editMod, setEditMod] = useState(false); // On récupère les données de connexion de l'utilisateur loggé\n\n  const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\n  const token = user.pass;\n  const user_id = user.id; // On créer un objet a envoyer pour la modification\n\n  const commentObject = {\n    comment: comment\n  };\n  const url = `http://localhost:8080/api/articles/${post_id}/comments/${comment_id}`;\n  const reqOptions = {\n    method: \"PUT\",\n    body: JSON.stringify(commentObject),\n    headers: {\n      Authorization: `Bearer ${token}`,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  const set_author = async () => {\n    if (user_id === author_id) {\n      setIsAuthor(true);\n    }\n  };\n\n  useEffect(() => {\n    set_author();\n  }, []);\n\n  const toggleEdit = () => {\n    setEditMod(true);\n  }; // Fonction pour modifier un commentaire\n\n\n  const modifyComment = async e => {\n    e.preventDefault();\n\n    try {\n      let res = await fetch(url, reqOptions);\n      let commentRes = await res.json();\n      console.log(\"=====> Réponse commentaire envoyé : \");\n      console.log(commentRes);\n      window.location.reload();\n    } catch (err) {\n      console.log(err);\n    }\n  }; // console.log(\"=====> Test sur le propriétaire du commentaire\");\n  // console.log(isAuthor);\n  // console.log(\"=====> Author id\");\n  // console.log(author_id);\n  // console.log(\"=====> User id\");\n  // console.log(user_id);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments__editForm\",\n    children: [!isAuthor ? null : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"comments__edit btn btn__edit\",\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Modifier votre commentaire\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"comment_editForm--form\",\n      onSubmit: modifyComment,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          name: \"content\",\n          placeholder: \"Ajouter un nouveau commentaire\",\n          value: comment,\n          onChange: e => setComment(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"comment__send--btn btn\",\n          type: \"submit\",\n          value: \"Envoyer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditComment, \"KTPbug1M9dVZkaObo3dgi6oPmrw=\");\n\n_c = EditComment;\nexport default EditComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditComment\");","map":{"version":3,"names":["React","useState","useEffect","EditComment","props","post_id","author_id","comment_id","comment_value","comment","setComment","isAuthor","setIsAuthor","editMod","setEditMod","user","JSON","parse","sessionStorage","getItem","token","pass","user_id","id","commentObject","url","reqOptions","method","body","stringify","headers","Authorization","Accept","set_author","toggleEdit","modifyComment","e","preventDefault","res","fetch","commentRes","json","console","log","window","location","reload","err","target","value"],"sources":["F:/Works/Formation OC/SOUTENANCES/P7/groupomania/client/src/components/EditComment.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction EditComment(props) {\r\n    // On récupère l'id de l'utilisateur avec props\r\n    const { post_id, author_id, comment_id, comment_value } = props;\r\n\r\n    // On prépare le state local pour stocker les données à modifier\r\n    const [comment, setComment] = useState(comment_value);\r\n    const [isAuthor, setIsAuthor] = useState(false);\r\n\r\n    // Hide and show form\r\n    const [editMod, setEditMod] = useState(false);\r\n\r\n    // On récupère les données de connexion de l'utilisateur loggé\r\n    const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\r\n    const token = user.pass;\r\n    const user_id = user.id;\r\n\r\n    // On créer un objet a envoyer pour la modification\r\n    const commentObject = {\r\n        comment: comment,\r\n    };\r\n\r\n    const url = `http://localhost:8080/api/articles/${post_id}/comments/${comment_id}`;\r\n    const reqOptions = {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(commentObject),\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    const set_author = async () => {\r\n        if (user_id === author_id) {\r\n            setIsAuthor(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        set_author();\r\n    }, []);\r\n\r\n    const toggleEdit = () => {\r\n        setEditMod(true);\r\n    };\r\n\r\n    // Fonction pour modifier un commentaire\r\n    const modifyComment = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            let res = await fetch(url, reqOptions);\r\n            let commentRes = await res.json();\r\n\r\n            console.log(\"=====> Réponse commentaire envoyé : \");\r\n            console.log(commentRes);\r\n\r\n            window.location.reload();\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    // console.log(\"=====> Test sur le propriétaire du commentaire\");\r\n    // console.log(isAuthor);\r\n    // console.log(\"=====> Author id\");\r\n    // console.log(author_id);\r\n    // console.log(\"=====> User id\");\r\n    // console.log(user_id);\r\n\r\n    return (\r\n        <div className=\"comments__editForm\">\r\n            {!isAuthor ? null : <button className=\"comments__edit btn btn__edit\">Edit</button>}\r\n\r\n            <h3>Modifier votre commentaire</h3>\r\n            <form className=\"comment_editForm--form\" onSubmit={modifyComment}>\r\n                <label>\r\n                    <textarea\r\n                        type=\"text\"\r\n                        name=\"content\"\r\n                        placeholder=\"Ajouter un nouveau commentaire\"\r\n                        value={comment}\r\n                        onChange={(e) => setComment(e.target.value)}\r\n                    />\r\n                </label>\r\n\r\n                <div>\r\n                    <input className=\"comment__send--btn btn\" type=\"submit\" value=\"Envoyer\" />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditComment;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}