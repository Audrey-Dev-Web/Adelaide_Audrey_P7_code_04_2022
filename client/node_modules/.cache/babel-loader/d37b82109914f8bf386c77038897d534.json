{"ast":null,"code":"var _jsxFileName = \"F:\\\\Works\\\\Formation OC\\\\SOUTENANCES\\\\P7\\\\groupomania\\\\client\\\\src\\\\components\\\\EditComment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { BiEditAlt } from \"react-icons/bi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditComment(props) {\n  _s();\n\n  // On récupère les données de l'utilisateur avec props\n  const {\n    post_id,\n    author_id,\n    comment_id,\n    comment_value\n  } = props; // On prépare le state local pour stocker les données à modifier\n\n  const [comment, setComment] = useState(comment_value);\n  const [isAuthor, setIsAuthor] = useState(false); // Hide and show form\n\n  const [editMod, setEditMod] = useState(false); // On récupère les données de connexion de l'utilisateur loggé\n\n  const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\n  const token = user.pass;\n  const user_id = user.id; // On créer un objet a envoyer pour la modification\n\n  const commentObject = {\n    comment: comment\n  };\n  const url = `http://localhost:8080/api/articles/${post_id}/comments/${comment_id}`;\n  const reqOptions = {\n    method: \"PUT\",\n    body: JSON.stringify(commentObject),\n    headers: {\n      Authorization: `Bearer ${token}`,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  const set_author = async () => {\n    if (user_id === author_id) {\n      setIsAuthor(true);\n    }\n  };\n\n  useEffect(() => {\n    set_author();\n  }, []);\n\n  const toggleEdit = () => {\n    if (!editMod) {\n      setEditMod(true);\n      console.log(\"mode edition activée !\");\n    } else {\n      setEditMod(false);\n      console.log(\"mode edition désactivée !\");\n    }\n  }; // Fonction pour modifier un commentaire\n\n\n  const modifyComment = async e => {\n    e.preventDefault();\n\n    try {\n      let res = await fetch(url, reqOptions);\n      let commentRes = await res.json();\n      console.log(\"=====> Réponse commentaire envoyé : \");\n      console.log(commentRes);\n      window.location.reload();\n    } catch (err) {\n      console.log(err);\n    }\n  }; // console.log(\"=====> Test sur le propriétaire du commentaire\");\n  // console.log(isAuthor);\n  // console.log(\"=====> Author id\");\n  // console.log(author_id);\n  // console.log(\"=====> User id\");\n  // console.log(user_id);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments__editForm\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"editMod\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Modifier votre commentaire\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"comment_editForm--form\",\n          onSubmit: modifyComment,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              name: \"content\",\n              placeholder: \"Ajouter un nouveau commentaire\",\n              value: comment,\n              onChange: e => setComment(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"comment__send--btn btn\",\n              type: \"submit\",\n              value: \"Envoyer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditComment, \"KTPbug1M9dVZkaObo3dgi6oPmrw=\");\n\n_c = EditComment;\nexport default EditComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditComment\");","map":{"version":3,"names":["React","useState","useEffect","BiEditAlt","EditComment","props","post_id","author_id","comment_id","comment_value","comment","setComment","isAuthor","setIsAuthor","editMod","setEditMod","user","JSON","parse","sessionStorage","getItem","token","pass","user_id","id","commentObject","url","reqOptions","method","body","stringify","headers","Authorization","Accept","set_author","toggleEdit","console","log","modifyComment","e","preventDefault","res","fetch","commentRes","json","window","location","reload","err","target","value"],"sources":["F:/Works/Formation OC/SOUTENANCES/P7/groupomania/client/src/components/EditComment.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { BiEditAlt } from \"react-icons/bi\";\r\n\r\nfunction EditComment(props) {\r\n    // On récupère les données de l'utilisateur avec props\r\n    const { post_id, author_id, comment_id, comment_value } = props;\r\n\r\n    // On prépare le state local pour stocker les données à modifier\r\n    const [comment, setComment] = useState(comment_value);\r\n    const [isAuthor, setIsAuthor] = useState(false);\r\n\r\n    // Hide and show form\r\n    const [editMod, setEditMod] = useState(false);\r\n\r\n    // On récupère les données de connexion de l'utilisateur loggé\r\n    const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\r\n    const token = user.pass;\r\n    const user_id = user.id;\r\n\r\n    // On créer un objet a envoyer pour la modification\r\n    const commentObject = {\r\n        comment: comment,\r\n    };\r\n\r\n    const url = `http://localhost:8080/api/articles/${post_id}/comments/${comment_id}`;\r\n    const reqOptions = {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(commentObject),\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    const set_author = async () => {\r\n        if (user_id === author_id) {\r\n            setIsAuthor(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        set_author();\r\n    }, []);\r\n\r\n    const toggleEdit = () => {\r\n        if (!editMod) {\r\n            setEditMod(true);\r\n            console.log(\"mode edition activée !\");\r\n        } else {\r\n            setEditMod(false);\r\n            console.log(\"mode edition désactivée !\");\r\n        }\r\n    };\r\n\r\n    // Fonction pour modifier un commentaire\r\n    const modifyComment = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            let res = await fetch(url, reqOptions);\r\n            let commentRes = await res.json();\r\n\r\n            console.log(\"=====> Réponse commentaire envoyé : \");\r\n            console.log(commentRes);\r\n\r\n            window.location.reload();\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    // console.log(\"=====> Test sur le propriétaire du commentaire\");\r\n    // console.log(isAuthor);\r\n    // console.log(\"=====> Author id\");\r\n    // console.log(author_id);\r\n    // console.log(\"=====> User id\");\r\n    // console.log(user_id);\r\n\r\n    return (\r\n        <div>\r\n            {/* {!isAuthor ? null : (\r\n                <button className=\"comments__edit--btn btn\" onClick={toggleEdit}>\r\n                    <BiEditAlt />\r\n                    <span className=\"infobubble\">Editer ce commentaire</span>\r\n                </button>\r\n            )} */}\r\n\r\n            <div className=\"comments__editForm\">\r\n                <span className=\"editMod\">\r\n                    {/* <span className=\"editMod\" style={{ display: editMod ? \"block\" : \"none\" }}> */}\r\n                    <h3>Modifier votre commentaire</h3>\r\n                    <form className=\"comment_editForm--form\" onSubmit={modifyComment}>\r\n                        <label>\r\n                            <textarea\r\n                                type=\"text\"\r\n                                name=\"content\"\r\n                                placeholder=\"Ajouter un nouveau commentaire\"\r\n                                value={comment}\r\n                                onChange={(e) => setComment(e.target.value)}\r\n                            />\r\n                        </label>\r\n\r\n                        <div>\r\n                            <input className=\"comment__send--btn btn\" type=\"submit\" value=\"Envoyer\" />\r\n                        </div>\r\n                    </form>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditComment;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,SAAT,QAA0B,gBAA1B;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;EAAA;;EACxB;EACA,MAAM;IAAEC,OAAF;IAAWC,SAAX;IAAsBC,UAAtB;IAAkCC;EAAlC,IAAoDJ,KAA1D,CAFwB,CAIxB;;EACA,MAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAACQ,aAAD,CAAtC;EACA,MAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,KAAD,CAAxC,CANwB,CAQxB;;EACA,MAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,KAAD,CAAtC,CATwB,CAWxB;;EACA,MAAMe,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,gBAAvB,CAAX,CAAb;EACA,MAAMC,KAAK,GAAGL,IAAI,CAACM,IAAnB;EACA,MAAMC,OAAO,GAAGP,IAAI,CAACQ,EAArB,CAdwB,CAgBxB;;EACA,MAAMC,aAAa,GAAG;IAClBf,OAAO,EAAEA;EADS,CAAtB;EAIA,MAAMgB,GAAG,GAAI,sCAAqCpB,OAAQ,aAAYE,UAAW,EAAjF;EACA,MAAMmB,UAAU,GAAG;IACfC,MAAM,EAAE,KADO;IAEfC,IAAI,EAAEZ,IAAI,CAACa,SAAL,CAAeL,aAAf,CAFS;IAGfM,OAAO,EAAE;MACLC,aAAa,EAAG,UAASX,KAAM,EAD1B;MAELY,MAAM,EAAE,kBAFH;MAGL,gBAAgB;IAHX;EAHM,CAAnB;;EAUA,MAAMC,UAAU,GAAG,YAAY;IAC3B,IAAIX,OAAO,KAAKhB,SAAhB,EAA2B;MACvBM,WAAW,CAAC,IAAD,CAAX;IACH;EACJ,CAJD;;EAMAX,SAAS,CAAC,MAAM;IACZgC,UAAU;EACb,CAFQ,EAEN,EAFM,CAAT;;EAIA,MAAMC,UAAU,GAAG,MAAM;IACrB,IAAI,CAACrB,OAAL,EAAc;MACVC,UAAU,CAAC,IAAD,CAAV;MACAqB,OAAO,CAACC,GAAR,CAAY,wBAAZ;IACH,CAHD,MAGO;MACHtB,UAAU,CAAC,KAAD,CAAV;MACAqB,OAAO,CAACC,GAAR,CAAY,2BAAZ;IACH;EACJ,CARD,CA1CwB,CAoDxB;;;EACA,MAAMC,aAAa,GAAG,MAAOC,CAAP,IAAa;IAC/BA,CAAC,CAACC,cAAF;;IACA,IAAI;MACA,IAAIC,GAAG,GAAG,MAAMC,KAAK,CAAChB,GAAD,EAAMC,UAAN,CAArB;MACA,IAAIgB,UAAU,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAvB;MAEAR,OAAO,CAACC,GAAR,CAAY,sCAAZ;MACAD,OAAO,CAACC,GAAR,CAAYM,UAAZ;MAEAE,MAAM,CAACC,QAAP,CAAgBC,MAAhB;IACH,CARD,CAQE,OAAOC,GAAP,EAAY;MACVZ,OAAO,CAACC,GAAR,CAAYW,GAAZ;IACH;EACJ,CAbD,CArDwB,CAoExB;EACA;EACA;EACA;EACA;EACA;;;EAEA,oBACI;IAAA,uBAQI;MAAK,SAAS,EAAC,oBAAf;MAAA,uBACI;QAAM,SAAS,EAAC,SAAhB;QAAA,wBAEI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI;UAAM,SAAS,EAAC,wBAAhB;UAAyC,QAAQ,EAAEV,aAAnD;UAAA,wBACI;YAAA,uBACI;cACI,IAAI,EAAC,MADT;cAEI,IAAI,EAAC,SAFT;cAGI,WAAW,EAAC,gCAHhB;cAII,KAAK,EAAE5B,OAJX;cAKI,QAAQ,EAAG6B,CAAD,IAAO5B,UAAU,CAAC4B,CAAC,CAACU,MAAF,CAASC,KAAV;YAL/B;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA,QADJ,eAWI;YAAA,uBACI;cAAO,SAAS,EAAC,wBAAjB;cAA0C,IAAI,EAAC,QAA/C;cAAwD,KAAK,EAAC;YAA9D;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA,QAXJ;QAAA;UAAA;UAAA;UAAA;QAAA,QAHJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EARJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAgCH;;GA3GQ9C,W;;KAAAA,W;AA6GT,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}