{"ast":null,"code":"var _jsxFileName = \"F:\\\\Works\\\\Formation OC\\\\SOUTENANCES\\\\P7\\\\groupomania\\\\client\\\\src\\\\components\\\\DateTime.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DateTime(props) {\n  _s();\n\n  const {\n    datetime\n  } = props;\n  const [timeAfter, setTimeAfter] = useState(\" \");\n  const now = new Date();\n  const date = new Date(datetime);\n  let diff = {}; // Initialisation du retour\n\n  function dateDiff(date1, date2) {\n    var tmp = date2 - date1;\n    tmp = Math.floor(tmp / 1000); // Nombre de secondes entre les 2 dates\n\n    diff.sec = tmp % 60; // Extraction du nombre de secondes\n\n    tmp = Math.floor((tmp - diff.sec) / 60); // Nombre de minutes (partie entière)\n\n    diff.min = tmp % 60; // Extraction du nombre de minutes\n\n    tmp = Math.floor((tmp - diff.min) / 60); // Nombre d'heures (entières)\n\n    diff.hour = tmp % 24; // Extraction du nombre d'heures\n\n    tmp = Math.floor((tmp - diff.hour) / 24); // Nombre de jours restants\n\n    diff.day = tmp;\n    return diff;\n  }\n\n  diff = dateDiff(date, now);\n\n  function set_time() {\n    if (diff.day <= 0 && diff.hour <= 0 && diff.min <= 0 && diff.sec > 0) {\n      setTimeAfter(`${diff.sec} sec`);\n    } else if (diff.day <= 0 && diff.hour <= 0 && diff.min > 0) {\n      setTimeAfter(`${diff.min} min`);\n    } else if (diff.day <= 0 && diff.hour > 0) {\n      setTimeAfter(`${diff.hour} h`);\n    } else if (diff.day > 0) {\n      setTimeAfter(`${diff.day} jours`);\n    }\n  }\n\n  useEffect(() => {\n    set_time();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dateTime\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\" depuis \", timeAfter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DateTime, \"md5sYUZ7QXU5VMCEu8Xvm8H/wQo=\");\n\n_c = DateTime;\nexport default DateTime;\n\nvar _c;\n\n$RefreshReg$(_c, \"DateTime\");","map":{"version":3,"names":["React","useState","useEffect","DateTime","props","datetime","timeAfter","setTimeAfter","now","Date","date","diff","dateDiff","date1","date2","tmp","Math","floor","sec","min","hour","day","set_time"],"sources":["F:/Works/Formation OC/SOUTENANCES/P7/groupomania/client/src/components/DateTime.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction DateTime(props) {\r\n    const { datetime } = props;\r\n    const [timeAfter, setTimeAfter] = useState(\" \");\r\n    const now = new Date();\r\n    const date = new Date(datetime);\r\n    let diff = {}; // Initialisation du retour\r\n\r\n    function dateDiff(date1, date2) {\r\n        var tmp = date2 - date1;\r\n\r\n        tmp = Math.floor(tmp / 1000); // Nombre de secondes entre les 2 dates\r\n        diff.sec = tmp % 60; // Extraction du nombre de secondes\r\n\r\n        tmp = Math.floor((tmp - diff.sec) / 60); // Nombre de minutes (partie entière)\r\n        diff.min = tmp % 60; // Extraction du nombre de minutes\r\n\r\n        tmp = Math.floor((tmp - diff.min) / 60); // Nombre d'heures (entières)\r\n        diff.hour = tmp % 24; // Extraction du nombre d'heures\r\n\r\n        tmp = Math.floor((tmp - diff.hour) / 24); // Nombre de jours restants\r\n        diff.day = tmp;\r\n\r\n        return diff;\r\n    }\r\n\r\n    diff = dateDiff(date, now);\r\n\r\n    function set_time() {\r\n        if (diff.day <= 0 && diff.hour <= 0 && diff.min <= 0 && diff.sec > 0) {\r\n            setTimeAfter(`${diff.sec} sec`);\r\n        } else if (diff.day <= 0 && diff.hour <= 0 && diff.min > 0) {\r\n            setTimeAfter(`${diff.min} min`);\r\n        } else if (diff.day <= 0 && diff.hour > 0) {\r\n            setTimeAfter(`${diff.hour} h`);\r\n        } else if (diff.day > 0) {\r\n            setTimeAfter(`${diff.day} jours`);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        set_time();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"dateTime\">\r\n            <span> depuis {timeAfter}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DateTime;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EACrB,MAAM;IAAEC;EAAF,IAAeD,KAArB;EACA,MAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,GAAD,CAA1C;EACA,MAAMO,GAAG,GAAG,IAAIC,IAAJ,EAAZ;EACA,MAAMC,IAAI,GAAG,IAAID,IAAJ,CAASJ,QAAT,CAAb;EACA,IAAIM,IAAI,GAAG,EAAX,CALqB,CAKN;;EAEf,SAASC,QAAT,CAAkBC,KAAlB,EAAyBC,KAAzB,EAAgC;IAC5B,IAAIC,GAAG,GAAGD,KAAK,GAAGD,KAAlB;IAEAE,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWF,GAAG,GAAG,IAAjB,CAAN,CAH4B,CAGE;;IAC9BJ,IAAI,CAACO,GAAL,GAAWH,GAAG,GAAG,EAAjB,CAJ4B,CAIP;;IAErBA,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACF,GAAG,GAAGJ,IAAI,CAACO,GAAZ,IAAmB,EAA9B,CAAN,CAN4B,CAMa;;IACzCP,IAAI,CAACQ,GAAL,GAAWJ,GAAG,GAAG,EAAjB,CAP4B,CAOP;;IAErBA,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACF,GAAG,GAAGJ,IAAI,CAACQ,GAAZ,IAAmB,EAA9B,CAAN,CAT4B,CASa;;IACzCR,IAAI,CAACS,IAAL,GAAYL,GAAG,GAAG,EAAlB,CAV4B,CAUN;;IAEtBA,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACF,GAAG,GAAGJ,IAAI,CAACS,IAAZ,IAAoB,EAA/B,CAAN,CAZ4B,CAYc;;IAC1CT,IAAI,CAACU,GAAL,GAAWN,GAAX;IAEA,OAAOJ,IAAP;EACH;;EAEDA,IAAI,GAAGC,QAAQ,CAACF,IAAD,EAAOF,GAAP,CAAf;;EAEA,SAASc,QAAT,GAAoB;IAChB,IAAIX,IAAI,CAACU,GAAL,IAAY,CAAZ,IAAiBV,IAAI,CAACS,IAAL,IAAa,CAA9B,IAAmCT,IAAI,CAACQ,GAAL,IAAY,CAA/C,IAAoDR,IAAI,CAACO,GAAL,GAAW,CAAnE,EAAsE;MAClEX,YAAY,CAAE,GAAEI,IAAI,CAACO,GAAI,MAAb,CAAZ;IACH,CAFD,MAEO,IAAIP,IAAI,CAACU,GAAL,IAAY,CAAZ,IAAiBV,IAAI,CAACS,IAAL,IAAa,CAA9B,IAAmCT,IAAI,CAACQ,GAAL,GAAW,CAAlD,EAAqD;MACxDZ,YAAY,CAAE,GAAEI,IAAI,CAACQ,GAAI,MAAb,CAAZ;IACH,CAFM,MAEA,IAAIR,IAAI,CAACU,GAAL,IAAY,CAAZ,IAAiBV,IAAI,CAACS,IAAL,GAAY,CAAjC,EAAoC;MACvCb,YAAY,CAAE,GAAEI,IAAI,CAACS,IAAK,IAAd,CAAZ;IACH,CAFM,MAEA,IAAIT,IAAI,CAACU,GAAL,GAAW,CAAf,EAAkB;MACrBd,YAAY,CAAE,GAAEI,IAAI,CAACU,GAAI,QAAb,CAAZ;IACH;EACJ;;EAEDnB,SAAS,CAAC,MAAM;IACZoB,QAAQ;EACX,CAFQ,EAEN,EAFM,CAAT;EAIA,oBACI;IAAK,SAAS,EAAC,UAAf;IAAA,uBACI;MAAA,uBAAehB,SAAf;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH;;GAhDQH,Q;;KAAAA,Q;AAkDT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}