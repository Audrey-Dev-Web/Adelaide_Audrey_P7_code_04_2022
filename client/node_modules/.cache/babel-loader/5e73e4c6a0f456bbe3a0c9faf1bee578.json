{"ast":null,"code":"var _jsxFileName = \"F:\\\\Works\\\\Formation OC\\\\SOUTENANCES\\\\P7\\\\groupomania\\\\client\\\\src\\\\components\\\\EditComment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport jwt_decode from \"jwt-decode\";\nimport DeleteComment from \"../components/DeleteComment\";\nimport { BiEditAlt } from \"react-icons/bi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditComment(props) {\n  _s();\n\n  // On récupère les données de l'utilisateur avec props\n  const {\n    post_id,\n    author_id,\n    comment_id,\n    comment_value,\n    access\n  } = props; // On prépare le state local pour stocker les données à modifier\n\n  const [comment, setComment] = useState(comment_value);\n  const [isAuthor, setIsAuthor] = useState(false); // Hide and show form\n\n  const [editMod, setEditMod] = useState(false); // On récupère les données de connexion de l'utilisateur loggé\n\n  const token = access;\n  const decoded = jwt_decode(token);\n  const user_id = decoded.userId; // On créer un objet a envoyer pour la modification\n\n  const commentObject = {\n    comment: comment\n  };\n  const url = `http://localhost:8080/api/articles/${post_id}/comments/${comment_id}`;\n  const reqOptions = {\n    method: \"PUT\",\n    body: JSON.stringify(commentObject),\n    headers: {\n      Authorization: `Bearer ${token}`,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  const set_author = async () => {\n    if (user_id === author_id) {\n      setIsAuthor(true);\n    }\n  };\n\n  useEffect(() => {\n    set_author();\n  }, []);\n\n  const toggleEdit = () => {\n    if (!editMod) {\n      setEditMod(true);\n      console.log(\"mode edition activée !\");\n    } else {\n      setEditMod(false);\n      console.log(\"mode edition désactivée !\");\n    }\n  }; // Fonction pour modifier un commentaire\n\n\n  const modifyComment = async e => {\n    e.preventDefault();\n\n    try {\n      let res = await fetch(url, reqOptions);\n      let commentRes = await res.json();\n      console.log(\"=====> Réponse commentaire envoyé : \");\n      console.log(commentRes);\n      window.location.reload();\n    } catch (err) {\n      console.log(err);\n    }\n  }; // console.log(\"=====> Test sur le propriétaire du commentaire\");\n  // console.log(isAuthor);\n  // console.log(\"=====> Author id\");\n  // console.log(author_id);\n  // console.log(\"=====> User id\");\n  // console.log(user_id);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment\",\n    children: [!isAuthor ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment__buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"comment__edit--btn btn\",\n        onClick: toggleEdit,\n        children: [/*#__PURE__*/_jsxDEV(BiEditAlt, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"infobubble\",\n          children: \"Editer ce commentaire\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(DeleteComment, {\n        author_id: author_id,\n        post_id: post_id,\n        comment_id: comment_id,\n        access: access\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment__editForm\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"editMod\",\n        style: {\n          display: editMod ? \"block\" : \"none\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Modifier votre commentaire\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"comment__editForm--form\",\n          onSubmit: modifyComment,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              name: \"content\",\n              placeholder: \"Ajouter un nouveau commentaire\",\n              value: comment,\n              onChange: e => setComment(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"comment__send--btn btn\",\n              type: \"submit\",\n              value: \"Envoyer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditComment, \"KTPbug1M9dVZkaObo3dgi6oPmrw=\");\n\n_c = EditComment;\nexport default EditComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditComment\");","map":{"version":3,"names":["React","useState","useEffect","jwt_decode","DeleteComment","BiEditAlt","EditComment","props","post_id","author_id","comment_id","comment_value","access","comment","setComment","isAuthor","setIsAuthor","editMod","setEditMod","token","decoded","user_id","userId","commentObject","url","reqOptions","method","body","JSON","stringify","headers","Authorization","Accept","set_author","toggleEdit","console","log","modifyComment","e","preventDefault","res","fetch","commentRes","json","window","location","reload","err","display","target","value"],"sources":["F:/Works/Formation OC/SOUTENANCES/P7/groupomania/client/src/components/EditComment.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport DeleteComment from \"../components/DeleteComment\";\r\n\r\nimport { BiEditAlt } from \"react-icons/bi\";\r\n\r\nfunction EditComment(props) {\r\n    // On récupère les données de l'utilisateur avec props\r\n    const { post_id, author_id, comment_id, comment_value, access } = props;\r\n\r\n    // On prépare le state local pour stocker les données à modifier\r\n    const [comment, setComment] = useState(comment_value);\r\n    const [isAuthor, setIsAuthor] = useState(false);\r\n\r\n    // Hide and show form\r\n    const [editMod, setEditMod] = useState(false);\r\n\r\n    // On récupère les données de connexion de l'utilisateur loggé\r\n    const token = access;\r\n    const decoded = jwt_decode(token);\r\n    const user_id = decoded.userId;\r\n\r\n    // On créer un objet a envoyer pour la modification\r\n    const commentObject = {\r\n        comment: comment,\r\n    };\r\n\r\n    const url = `http://localhost:8080/api/articles/${post_id}/comments/${comment_id}`;\r\n    const reqOptions = {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(commentObject),\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    const set_author = async () => {\r\n        if (user_id === author_id) {\r\n            setIsAuthor(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        set_author();\r\n    }, []);\r\n\r\n    const toggleEdit = () => {\r\n        if (!editMod) {\r\n            setEditMod(true);\r\n            console.log(\"mode edition activée !\");\r\n        } else {\r\n            setEditMod(false);\r\n            console.log(\"mode edition désactivée !\");\r\n        }\r\n    };\r\n\r\n    // Fonction pour modifier un commentaire\r\n    const modifyComment = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            let res = await fetch(url, reqOptions);\r\n            let commentRes = await res.json();\r\n\r\n            console.log(\"=====> Réponse commentaire envoyé : \");\r\n            console.log(commentRes);\r\n\r\n            window.location.reload();\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    // console.log(\"=====> Test sur le propriétaire du commentaire\");\r\n    // console.log(isAuthor);\r\n    // console.log(\"=====> Author id\");\r\n    // console.log(author_id);\r\n    // console.log(\"=====> User id\");\r\n    // console.log(user_id);\r\n\r\n    return (\r\n        <div className=\"comment\">\r\n            {!isAuthor ? null : (\r\n                <div className=\"comment__buttons\">\r\n                    <button className=\"comment__edit--btn btn\" onClick={toggleEdit}>\r\n                        <BiEditAlt />\r\n                        <span className=\"infobubble\">Editer ce commentaire</span>\r\n                    </button>\r\n\r\n                    <DeleteComment author_id={author_id} post_id={post_id} comment_id={comment_id} access={access} />\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"comment__editForm\">\r\n                <span className=\"editMod\" style={{ display: editMod ? \"block\" : \"none\" }}>\r\n                    <h3>Modifier votre commentaire</h3>\r\n                    <form className=\"comment__editForm--form\" onSubmit={modifyComment}>\r\n                        <label>\r\n                            <textarea\r\n                                type=\"text\"\r\n                                name=\"content\"\r\n                                placeholder=\"Ajouter un nouveau commentaire\"\r\n                                value={comment}\r\n                                onChange={(e) => setComment(e.target.value)}\r\n                            />\r\n                        </label>\r\n\r\n                        <div>\r\n                            <input className=\"comment__send--btn btn\" type=\"submit\" value=\"Envoyer\" />\r\n                        </div>\r\n                    </form>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditComment;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}