{"ast":null,"code":"var _jsxFileName = \"F:\\\\Works\\\\Formation OC\\\\SOUTENANCES\\\\P7\\\\groupomania\\\\client\\\\src\\\\components\\\\DeleteComment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { BiTrash } from \"react-icons/bi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeleteComment(props) {\n  _s();\n\n  // On récupère l'id de l'utilisateur avec props\n  const {\n    post_id,\n    author_id,\n    comment_id\n  } = props; // On ajoute la double validation avant suppression\n  // useState pour stocker le boolean si oui ou non l'utilisateur est autorisé à supprimer\n\n  const [isAuthorized, setIsAuthorized] = useState(false); // On récupère les données de connexion de l'utilisateur loggé\n\n  const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\n  const token = user.pass;\n  const user_id = user.id;\n  const user_role = user.role;\n  const role = \"admin\"; // On prépare la requête delete\n\n  const url = `http://localhost:8080/api/articles/${post_id}/comments/${comment_id}`;\n  const reqOptions = {\n    method: \"DELETE\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  }; // On vérifi si l'utilisateur est autorisé à supprimer le commentaire\n\n  const authorization = async () => {\n    if (user_id === author_id || user_role === role) {\n      setIsAuthorized(true);\n    }\n  };\n\n  useEffect(() => {\n    authorization();\n  }, []);\n\n  const deleteComment = async e => {\n    // e.preventDefault();\n    try {\n      let res = await fetch(url, reqOptions);\n      let commentRes = await res.json();\n      console.log(\"=====> Réponse commentaire envoyé : \");\n      console.log(commentRes);\n      window.location.reload();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  /*\r\n    onClick : \r\n  <span> Voulez-vous vraiment supprimer ce commentaire ? </span>\r\n      if (!question) {\r\n          setQuestion(false)\r\n      } else {\r\n          setQuestion(true)\r\n      }\r\n  */\n  // doubleValidator = () => {\n  //     if (!isOk) {\n  //         setDelete(false)\n  //     } else {}\n  // }\n  // console.log(\"=====> Est-ce que l'utilisateur est autorisé à effectuer cette action ?\");\n  // console.log(isAuthorized);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !isAuthorized ? null :\n    /*#__PURE__*/\n    // <button className=\"comments__delete--btn btn\" onClick={(e) => deleteComment(e)}>\n    _jsxDEV(\"button\", {\n      className: \"comments__delete--btn btn\",\n      onClick: () => {\n        const confirmBox = window.confirm(\"Do you really want to delete this comment ?\");\n\n        if (confirmBox === true) {\n          deleteComment();\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(BiTrash, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"infobubble\",\n        children: \"Supprimer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DeleteComment, \"FV7dzwkab6YTO0GivVkj25/S9Kc=\");\n\n_c = DeleteComment;\nexport default DeleteComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteComment\");","map":{"version":3,"names":["React","useState","useEffect","BiTrash","DeleteComment","props","post_id","author_id","comment_id","isAuthorized","setIsAuthorized","user","JSON","parse","sessionStorage","getItem","token","pass","user_id","id","user_role","role","url","reqOptions","method","headers","Authorization","Accept","authorization","deleteComment","e","res","fetch","commentRes","json","console","log","window","location","reload","err","confirmBox","confirm"],"sources":["F:/Works/Formation OC/SOUTENANCES/P7/groupomania/client/src/components/DeleteComment.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { BiTrash } from \"react-icons/bi\";\r\n\r\nfunction DeleteComment(props) {\r\n    // On récupère l'id de l'utilisateur avec props\r\n    const { post_id, author_id, comment_id } = props;\r\n\r\n    // On ajoute la double validation avant suppression\r\n\r\n    // useState pour stocker le boolean si oui ou non l'utilisateur est autorisé à supprimer\r\n    const [isAuthorized, setIsAuthorized] = useState(false);\r\n\r\n    // On récupère les données de connexion de l'utilisateur loggé\r\n    const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\r\n    const token = user.pass;\r\n    const user_id = user.id;\r\n    const user_role = user.role;\r\n\r\n    const role = \"admin\";\r\n\r\n    // On prépare la requête delete\r\n    const url = `http://localhost:8080/api/articles/${post_id}/comments/${comment_id}`;\r\n    const reqOptions = {\r\n        method: \"DELETE\",\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    // On vérifi si l'utilisateur est autorisé à supprimer le commentaire\r\n    const authorization = async () => {\r\n        if (user_id === author_id || user_role === role) {\r\n            setIsAuthorized(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        authorization();\r\n    }, []);\r\n\r\n    const deleteComment = async (e) => {\r\n        // e.preventDefault();\r\n        try {\r\n            let res = await fetch(url, reqOptions);\r\n            let commentRes = await res.json();\r\n\r\n            console.log(\"=====> Réponse commentaire envoyé : \");\r\n            console.log(commentRes);\r\n\r\n            window.location.reload();\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    /*\r\n\r\n    onClick : \r\n    <span> Voulez-vous vraiment supprimer ce commentaire ? </span>\r\n        if (!question) {\r\n            setQuestion(false)\r\n        } else {\r\n            setQuestion(true)\r\n        }\r\n    */\r\n\r\n    // doubleValidator = () => {\r\n    //     if (!isOk) {\r\n    //         setDelete(false)\r\n    //     } else {}\r\n    // }\r\n\r\n    // console.log(\"=====> Est-ce que l'utilisateur est autorisé à effectuer cette action ?\");\r\n    // console.log(isAuthorized);\r\n\r\n    return (\r\n        <div>\r\n            {!isAuthorized ? null : (\r\n                // <button className=\"comments__delete--btn btn\" onClick={(e) => deleteComment(e)}>\r\n                <button\r\n                    className=\"comments__delete--btn btn\"\r\n                    onClick={() => {\r\n                        const confirmBox = window.confirm(\"Do you really want to delete this comment ?\");\r\n\r\n                        if (confirmBox === true) {\r\n                            deleteComment();\r\n                        }\r\n                    }}\r\n                >\r\n                    <BiTrash />\r\n                    <span className=\"infobubble\">Supprimer</span>\r\n                </button>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DeleteComment;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,OAAT,QAAwB,gBAAxB;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;EAAA;;EAC1B;EACA,MAAM;IAAEC,OAAF;IAAWC,SAAX;IAAsBC;EAAtB,IAAqCH,KAA3C,CAF0B,CAI1B;EAEA;;EACA,MAAM,CAACI,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,KAAD,CAAhD,CAP0B,CAS1B;;EACA,MAAMU,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,gBAAvB,CAAX,CAAb;EACA,MAAMC,KAAK,GAAGL,IAAI,CAACM,IAAnB;EACA,MAAMC,OAAO,GAAGP,IAAI,CAACQ,EAArB;EACA,MAAMC,SAAS,GAAGT,IAAI,CAACU,IAAvB;EAEA,MAAMA,IAAI,GAAG,OAAb,CAf0B,CAiB1B;;EACA,MAAMC,GAAG,GAAI,sCAAqChB,OAAQ,aAAYE,UAAW,EAAjF;EACA,MAAMe,UAAU,GAAG;IACfC,MAAM,EAAE,QADO;IAEfC,OAAO,EAAE;MACLC,aAAa,EAAG,UAASV,KAAM,EAD1B;MAELW,MAAM,EAAE,kBAFH;MAGL,gBAAgB;IAHX;EAFM,CAAnB,CAnB0B,CA4B1B;;EACA,MAAMC,aAAa,GAAG,YAAY;IAC9B,IAAIV,OAAO,KAAKX,SAAZ,IAAyBa,SAAS,KAAKC,IAA3C,EAAiD;MAC7CX,eAAe,CAAC,IAAD,CAAf;IACH;EACJ,CAJD;;EAMAR,SAAS,CAAC,MAAM;IACZ0B,aAAa;EAChB,CAFQ,EAEN,EAFM,CAAT;;EAIA,MAAMC,aAAa,GAAG,MAAOC,CAAP,IAAa;IAC/B;IACA,IAAI;MACA,IAAIC,GAAG,GAAG,MAAMC,KAAK,CAACV,GAAD,EAAMC,UAAN,CAArB;MACA,IAAIU,UAAU,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAvB;MAEAC,OAAO,CAACC,GAAR,CAAY,sCAAZ;MACAD,OAAO,CAACC,GAAR,CAAYH,UAAZ;MAEAI,MAAM,CAACC,QAAP,CAAgBC,MAAhB;IACH,CARD,CAQE,OAAOC,GAAP,EAAY;MACVL,OAAO,CAACC,GAAR,CAAYI,GAAZ;IACH;EACJ,CAbD;EAeA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAGI;EACA;EACA;EACA;EACA;EAEA;EACA;;;EAEA,oBACI;IAAA,UACK,CAAC/B,YAAD,GAAgB,IAAhB;IAAA;IACG;IACA;MACI,SAAS,EAAC,2BADd;MAEI,OAAO,EAAE,MAAM;QACX,MAAMgC,UAAU,GAAGJ,MAAM,CAACK,OAAP,CAAe,6CAAf,CAAnB;;QAEA,IAAID,UAAU,KAAK,IAAnB,EAAyB;UACrBZ,aAAa;QAChB;MACJ,CARL;MAAA,wBAUI,QAAC,OAAD;QAAA;QAAA;QAAA;MAAA,QAVJ,eAWI;QAAM,SAAS,EAAC,YAAhB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAXJ;IAAA;MAAA;MAAA;MAAA;IAAA;EAHR;IAAA;IAAA;IAAA;EAAA,QADJ;AAoBH;;GA9FQzB,a;;KAAAA,a;AAgGT,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}