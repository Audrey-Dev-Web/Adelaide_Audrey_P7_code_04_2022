{"ast":null,"code":"var _jsxFileName = \"F:\\\\Works\\\\Formation OC\\\\SOUTENANCES\\\\P7\\\\groupomania\\\\client\\\\src\\\\components\\\\usersProfile\\\\RealAuthor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RealAuthor(props) {\n  _s();\n\n  const {\n    realAuthor_id\n  } = props;\n  const [realAuthor, setRealAuthor] = useState({\n    userInfos: {}\n  });\n  const [dataOk, setDataOk] = useState(false);\n  console.log(realAuthor_id);\n  const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\n  const token = user.pass;\n  const url = `http://localhost:8080/api/profiles/${realAuthor_id}`;\n  const reqOptions = {\n    method: \"GET\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  const fetchRealAuthor = async () => {\n    try {\n      const res = await fetch(url, reqOptions);\n      const userData = await res.json();\n\n      if (res.status !== 404) {\n        // console.log(\"Utilisateur non trouvé\");\n        setRealAuthor(userData);\n        setDataOk(true); // console.log(realAuthor);\n      } // if (realAuthor.ERROR) {\n      //     console.log(\"ERROR\");\n      // } else {\n      //     console.log(realAuthor);\n      // }\n\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    if (realAuthor_id !== undefined) {\n      fetchRealAuthor();\n    } else {\n      console.log(\"bug\");\n    }\n  }, []); // const first_Name = realAuthor.profile.firstName;\n  // const last_Name = realAuthor.profile.lastName;\n  // const fullName = `${first_Name} ${last_Name}`;\n  // const initiales = fullName.match(/\\b\\w/g).join(\"\").toUpperCase();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Hello w!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n} // export default class RealAuthor extends Component {\n//     constructor(props) {\n//         super(props);\n//         // const { realAuthor_id } = this.props.realAuthor_id;\n//         this.state = {\n//             userInfo: [],\n//             DataIsLoaded: false,\n//         };\n//     }\n//     async componentDidMount() {\n//         const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\n//         const token = user.pass;\n//         const userId = user.id;\n//         const url = `http://localhost:8080/api/profiles/${this.props.realAuthor_id}`;\n//         const reqOptions = {\n//             method: \"GET\",\n//             headers: {\n//                 Authorization: `Bearer ${token}`,\n//                 Accept: \"application/json\",\n//                 \"Content-Type\": \"application/json\",\n//             },\n//         };\n//         try {\n//             const res = await fetch(url, reqOptions);\n//             const userData = await res.json();\n//             this.setState({ userInfo: userData, DataIsLoaded: true });\n//             console.log(this.state);\n//         } catch (err) {\n//             console.log(err);\n//         }\n//     }\n//     render() {\n//         const { DataIsLoaded, userInfo } = this.state;\n//         if (!DataIsLoaded)\n//             return (\n//                 <div>\n//                     <h1> Pleses wait some time.... </h1>\n//                 </div>\n//             );\n// const firstName = userInfo.profile.firstName;\n// const lastName = userInfo.profile.lastName;\n// const fullName = `${firstName} ${lastName}`;\n// const initiales = fullName.match(/\\b\\w/g).join(\"\").toUpperCase();\n// const profileImgUrl = userInfo.profile.avatarUrl;\n// return (\n// Ajouter un menu déroulant afin d'afficher la possibilité de modifier le profile\n// <div className=\"realAuthor\">\n\n_s(RealAuthor, \"IttwGvNcBTF8lfIDUs40eF0vHgw=\");\n\n_c = RealAuthor;\n{\n  /* {!profileImgUrl ? (\r\n                  <div className=\"realAuthor__avatar initiales\">\r\n                      <p>{initiales}</p>\r\n                  </div>\r\n              ) : (\r\n                  <img className=\"realAuthor__avatar\" src={userInfo.profile.avatarUrl} alt=\"Photo de profile\" />\r\n              )}\r\n                <div className=\"realAuthor__fullName\">\r\n                  <p>\r\n                      {firstName} {lastName}\r\n                  </p>\r\n              </div> */\n} //             </div>\n//         );\n//     }\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"RealAuthor\");","map":{"version":3,"names":["React","useEffect","useState","Component","Link","RealAuthor","props","realAuthor_id","realAuthor","setRealAuthor","userInfos","dataOk","setDataOk","console","log","user","JSON","parse","sessionStorage","getItem","token","pass","url","reqOptions","method","headers","Authorization","Accept","fetchRealAuthor","res","fetch","userData","json","status","err","undefined"],"sources":["F:/Works/Formation OC/SOUTENANCES/P7/groupomania/client/src/components/usersProfile/RealAuthor.js"],"sourcesContent":["import React, { useEffect, useState, Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function RealAuthor(props) {\r\n    const { realAuthor_id } = props;\r\n    const [realAuthor, setRealAuthor] = useState({ userInfos: {} });\r\n    const [dataOk, setDataOk] = useState(false);\r\n\r\n    console.log(realAuthor_id);\r\n\r\n    const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\r\n    const token = user.pass;\r\n\r\n    const url = `http://localhost:8080/api/profiles/${realAuthor_id}`;\r\n    const reqOptions = {\r\n        method: \"GET\",\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    const fetchRealAuthor = async () => {\r\n        try {\r\n            const res = await fetch(url, reqOptions);\r\n            const userData = await res.json();\r\n\r\n            if (res.status !== 404) {\r\n                // console.log(\"Utilisateur non trouvé\");\r\n                setRealAuthor(userData);\r\n                setDataOk(true);\r\n                // console.log(realAuthor);\r\n            }\r\n\r\n            // if (realAuthor.ERROR) {\r\n            //     console.log(\"ERROR\");\r\n            // } else {\r\n            //     console.log(realAuthor);\r\n            // }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (realAuthor_id !== undefined) {\r\n            fetchRealAuthor();\r\n        } else {\r\n            console.log(\"bug\");\r\n        }\r\n    }, []);\r\n\r\n    // const first_Name = realAuthor.profile.firstName;\r\n    // const last_Name = realAuthor.profile.lastName;\r\n    // const fullName = `${first_Name} ${last_Name}`;\r\n    // const initiales = fullName.match(/\\b\\w/g).join(\"\").toUpperCase();\r\n    return (\r\n        <div>\r\n            Hello w!\r\n            {/* <div className=\"realAuthor\">\r\n                {!realAuthor.profile.avatarUrl ? (\r\n                    <div className=\"realAuthor__avatar initiales\">\r\n                        <p>{initiales}</p>\r\n                    </div>\r\n                ) : (\r\n                    <img className=\"realAuthor__avatar\" src={realAuthor.profile.avatarUrl} alt=\"Photo de profile\" />\r\n                )}\r\n\r\n                <div className=\"realAuthor__fullName\">\r\n                    <p>\r\n                        {realAuthor.profile.firstName} {realAuthor.profile.lastName}\r\n                    </p>\r\n                </div>\r\n            </div> */}\r\n        </div>\r\n    );\r\n}\r\n\r\n// export default class RealAuthor extends Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n\r\n//         // const { realAuthor_id } = this.props.realAuthor_id;\r\n\r\n//         this.state = {\r\n//             userInfo: [],\r\n//             DataIsLoaded: false,\r\n//         };\r\n//     }\r\n\r\n//     async componentDidMount() {\r\n//         const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\r\n//         const token = user.pass;\r\n//         const userId = user.id;\r\n\r\n//         const url = `http://localhost:8080/api/profiles/${this.props.realAuthor_id}`;\r\n\r\n//         const reqOptions = {\r\n//             method: \"GET\",\r\n//             headers: {\r\n//                 Authorization: `Bearer ${token}`,\r\n//                 Accept: \"application/json\",\r\n//                 \"Content-Type\": \"application/json\",\r\n//             },\r\n//         };\r\n\r\n//         try {\r\n//             const res = await fetch(url, reqOptions);\r\n//             const userData = await res.json();\r\n//             this.setState({ userInfo: userData, DataIsLoaded: true });\r\n//             console.log(this.state);\r\n//         } catch (err) {\r\n//             console.log(err);\r\n//         }\r\n//     }\r\n\r\n//     render() {\r\n//         const { DataIsLoaded, userInfo } = this.state;\r\n\r\n//         if (!DataIsLoaded)\r\n//             return (\r\n//                 <div>\r\n//                     <h1> Pleses wait some time.... </h1>\r\n//                 </div>\r\n//             );\r\n\r\n// const firstName = userInfo.profile.firstName;\r\n// const lastName = userInfo.profile.lastName;\r\n// const fullName = `${firstName} ${lastName}`;\r\n// const initiales = fullName.match(/\\b\\w/g).join(\"\").toUpperCase();\r\n\r\n// const profileImgUrl = userInfo.profile.avatarUrl;\r\n\r\n// return (\r\n// Ajouter un menu déroulant afin d'afficher la possibilité de modifier le profile\r\n// <div className=\"realAuthor\">\r\n{\r\n    /* {!profileImgUrl ? (\r\n                    <div className=\"realAuthor__avatar initiales\">\r\n                        <p>{initiales}</p>\r\n                    </div>\r\n                ) : (\r\n                    <img className=\"realAuthor__avatar\" src={userInfo.profile.avatarUrl} alt=\"Photo de profile\" />\r\n                )}\r\n\r\n                <div className=\"realAuthor__fullName\">\r\n                    <p>\r\n                        {firstName} {lastName}\r\n                    </p>\r\n                </div> */\r\n}\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;EAAA;;EACtC,MAAM;IAAEC;EAAF,IAAoBD,KAA1B;EACA,MAAM,CAACE,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC;IAAEQ,SAAS,EAAE;EAAb,CAAD,CAA5C;EACA,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;EAEAW,OAAO,CAACC,GAAR,CAAYP,aAAZ;EAEA,MAAMQ,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,gBAAvB,CAAX,CAAb;EACA,MAAMC,KAAK,GAAGL,IAAI,CAACM,IAAnB;EAEA,MAAMC,GAAG,GAAI,sCAAqCf,aAAc,EAAhE;EACA,MAAMgB,UAAU,GAAG;IACfC,MAAM,EAAE,KADO;IAEfC,OAAO,EAAE;MACLC,aAAa,EAAG,UAASN,KAAM,EAD1B;MAELO,MAAM,EAAE,kBAFH;MAGL,gBAAgB;IAHX;EAFM,CAAnB;;EASA,MAAMC,eAAe,GAAG,YAAY;IAChC,IAAI;MACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACR,GAAD,EAAMC,UAAN,CAAvB;MACA,MAAMQ,QAAQ,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAvB;;MAEA,IAAIH,GAAG,CAACI,MAAJ,KAAe,GAAnB,EAAwB;QACpB;QACAxB,aAAa,CAACsB,QAAD,CAAb;QACAnB,SAAS,CAAC,IAAD,CAAT,CAHoB,CAIpB;MACH,CATD,CAWA;MACA;MACA;MACA;MACA;;IACH,CAhBD,CAgBE,OAAOsB,GAAP,EAAY;MACVrB,OAAO,CAACC,GAAR,CAAYoB,GAAZ;IACH;EACJ,CApBD;;EAsBAjC,SAAS,CAAC,MAAM;IACZ,IAAIM,aAAa,KAAK4B,SAAtB,EAAiC;MAC7BP,eAAe;IAClB,CAFD,MAEO;MACHf,OAAO,CAACC,GAAR,CAAY,KAAZ;IACH;EACJ,CANQ,EAMN,EANM,CAAT,CA1CsC,CAkDtC;EACA;EACA;EACA;;EACA,oBACI;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAoBH,C,CAED;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;GArIwBT,U;;KAAAA,U;AAsIxB;EACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEC,C,CACD;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}