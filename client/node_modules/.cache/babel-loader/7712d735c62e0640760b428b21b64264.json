{"ast":null,"code":"var _jsxFileName = \"F:\\\\Works\\\\Formation OC\\\\SOUTENANCES\\\\P7\\\\groupomania\\\\client\\\\src\\\\components\\\\Comments.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport DateTime from \"../components/DateTime\";\nimport CommentForm from \"../components/CommentForm\";\nimport EditComment from \"../components/EditComment\";\nimport DeleteComment from \"../components/DeleteComment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Comments(props) {\n  _s();\n\n  var _data$allComments;\n\n  const {\n    post_id\n  } = props;\n  const [data, setData] = useState({\n    data: []\n  });\n  const [showComments, setShowComments] = useState(false); // const [dataIsLoaded, setDataIsLoaded] = useState(false);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [err, setErr] = useState(\"\");\n  const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\n  const token = user.pass;\n  const url = `http://localhost:8080/api/articles/${post_id}/comments`;\n  const reqOptions = {\n    method: \"GET\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  const handleClick = async () => {\n    toggleComments();\n\n    if (isLoading) {\n      setIsLoading(false);\n    } else {\n      setIsLoading(true);\n\n      try {\n        const res = await fetch(url, reqOptions);\n\n        if (!res.ok) {\n          throw new Error(`Error! status: ${res.status}`);\n        }\n\n        const result = await res.json();\n        console.log(\"result is: \", result);\n        console.log(\"result de data.allComments: \", data.allComments); // console.log(\"Résultat de data.allComments[0].id: \", data.allComments[0].id);\n        // console.log(\"result is: \", JSON.stringify(result, null, 4));\n\n        setData(result);\n      } catch (err) {\n        setErr(\"Aucun commentaire à afficher\");\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n\n  const toggleComments = () => {\n    if (!showComments) {\n      setShowComments(true);\n      console.log(\"mode edition activée !\");\n    } else {\n      setShowComments(false);\n      console.log(\"mode edition désactivée !\");\n    }\n  };\n\n  console.log(data); // const showComments = data.allComments.map((comment) => {\n  //     return (\n  //         <div key={comment.id}>\n  //             <p>{comment.comment}</p>\n  //         </div>\n  //     );\n  // });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Fetch data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"showComments\",\n      style: {\n        display: showComments ? \"block\" : \"none\"\n      },\n      children: [err && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: err\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 31\n      }, this), (_data$allComments = data.allComments) === null || _data$allComments === void 0 ? void 0 : _data$allComments.map(comment => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment__author\",\n            children: [!comment.avatar ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment__author--avatar initiales\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: `${comment.firstName} ${comment.lastName}\n                                            `.match(/\\b\\w/g).join(\"\").toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n              width: \"100\",\n              className: \"comment__author--avatar\",\n              src: comment.avatar,\n              alt: comment.firstName + \" \" + comment.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment__author--infos\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: comment.firstName + \" \" + comment.lastName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comment__author--dateTime\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Post\\xE9\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 41\n                }, this), \" \", /*#__PURE__*/_jsxDEV(DateTime, {\n                  datetime: comment.timestamp\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 54\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(EditComment, {\n            author_id: comment.author_id,\n            post_id: comment.article_id,\n            comment_id: comment.id,\n            comment_value: comment.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(DeleteComment, {\n            author_id: comment.author_id,\n            post_id: comment.article_id,\n            comment_id: comment.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }, this)]\n        }, comment.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Comments, \"SkUomquneTrOmD55sPWrbPBgTps=\");\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","DateTime","CommentForm","EditComment","DeleteComment","Comments","props","post_id","data","setData","showComments","setShowComments","isLoading","setIsLoading","err","setErr","user","JSON","parse","sessionStorage","getItem","token","pass","url","reqOptions","method","headers","Authorization","Accept","handleClick","toggleComments","res","fetch","ok","Error","status","result","json","console","log","allComments","display","map","comment","avatar","firstName","lastName","match","join","toUpperCase","timestamp","author_id","article_id","id"],"sources":["F:/Works/Formation OC/SOUTENANCES/P7/groupomania/client/src/components/Comments.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport DateTime from \"../components/DateTime\";\r\nimport CommentForm from \"../components/CommentForm\";\r\nimport EditComment from \"../components/EditComment\";\r\nimport DeleteComment from \"../components/DeleteComment\";\r\n\r\nfunction Comments(props) {\r\n    const { post_id } = props;\r\n\r\n    const [data, setData] = useState({ data: [] });\r\n    const [showComments, setShowComments] = useState(false);\r\n    // const [dataIsLoaded, setDataIsLoaded] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [err, setErr] = useState(\"\");\r\n\r\n    const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\r\n    const token = user.pass;\r\n\r\n    const url = `http://localhost:8080/api/articles/${post_id}/comments`;\r\n    const reqOptions = {\r\n        method: \"GET\",\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    const handleClick = async () => {\r\n        toggleComments();\r\n\r\n        if (isLoading) {\r\n            setIsLoading(false);\r\n        } else {\r\n            setIsLoading(true);\r\n\r\n            try {\r\n                const res = await fetch(url, reqOptions);\r\n\r\n                if (!res.ok) {\r\n                    throw new Error(`Error! status: ${res.status}`);\r\n                }\r\n\r\n                const result = await res.json();\r\n\r\n                console.log(\"result is: \", result);\r\n                console.log(\"result de data.allComments: \", data.allComments);\r\n                // console.log(\"Résultat de data.allComments[0].id: \", data.allComments[0].id);\r\n                // console.log(\"result is: \", JSON.stringify(result, null, 4));\r\n\r\n                setData(result);\r\n            } catch (err) {\r\n                setErr(\"Aucun commentaire à afficher\");\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    const toggleComments = () => {\r\n        if (!showComments) {\r\n            setShowComments(true);\r\n            console.log(\"mode edition activée !\");\r\n        } else {\r\n            setShowComments(false);\r\n            console.log(\"mode edition désactivée !\");\r\n        }\r\n    };\r\n\r\n    console.log(data);\r\n\r\n    // const showComments = data.allComments.map((comment) => {\r\n    //     return (\r\n    //         <div key={comment.id}>\r\n    //             <p>{comment.comment}</p>\r\n    //         </div>\r\n    //     );\r\n    // });\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={handleClick}>Fetch data</button>\r\n            <div className=\"showComments\" style={{ display: showComments ? \"block\" : \"none\" }}>\r\n                {err && <h2>{err}</h2>}\r\n                {isLoading && <h2>Loading...</h2>}\r\n                {data.allComments?.map((comment) => {\r\n                    return (\r\n                        <div className=\"comment\" key={comment.id}>\r\n                            <div className=\"comment__author\">\r\n                                {!comment.avatar ? (\r\n                                    <div className=\"comment__author--avatar initiales\">\r\n                                        <p>\r\n                                            {`${comment.firstName} ${comment.lastName}\r\n                                            `\r\n                                                .match(/\\b\\w/g)\r\n                                                .join(\"\")\r\n                                                .toUpperCase()}\r\n                                        </p>\r\n                                    </div>\r\n                                ) : (\r\n                                    <img\r\n                                        width=\"100\"\r\n                                        className=\"comment__author--avatar\"\r\n                                        src={comment.avatar}\r\n                                        alt={comment.firstName + \" \" + comment.lastName}\r\n                                    />\r\n                                )}\r\n\r\n                                <div className=\"comment__author--infos\">\r\n                                    <p>{comment.firstName + \" \" + comment.lastName}</p>\r\n                                    <div className=\"comment__author--dateTime\">\r\n                                        <p>Posté</p> <DateTime datetime={comment.timestamp} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <p>{comment.comment}</p>\r\n\r\n                            <EditComment\r\n                                author_id={comment.author_id}\r\n                                post_id={comment.article_id}\r\n                                comment_id={comment.id}\r\n                                comment_value={comment.comment}\r\n                            />\r\n\r\n                            <DeleteComment\r\n                                author_id={comment.author_id}\r\n                                post_id={comment.article_id}\r\n                                comment_id={comment.id}\r\n                            />\r\n\r\n                            {/* <h2>{person.first_name}</h2>\r\n                    <h2>{person.last_name}</h2>\r\n                    <br /> */}\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Comments;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}