[{"F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\index.js":"1","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\App.js":"2","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\reportWebVitals.js":"3","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\webpages\\index.js":"4","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\webpages\\Home.js":"5","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\components\\Navigation.jsx":"6","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\components\\Footer.jsx":"7","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\routes\\PrivateRoute.js":"8","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\routes\\ProtectedRoutes.js":"9","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\routes\\PublicRoute.js":"10","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\routes\\Routes.js":"11","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\webpages\\Login.jsx":"12","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\webpages\\Signup.jsx":"13","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\components\\UserLoggedIn.jsx":"14","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\components\\PostForm.jsx":"15","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\webpages\\articles\\Posts.js":"16","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\webpages\\articles\\Post.js":"17","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\components\\Comments.js":"18","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\components\\UserDetails.js":"19","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\components\\CommentForm.js":"20","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\components\\EditComment.js":"21","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\components\\DeleteComment.js":"22","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\webpages\\profiles\\Profile.js":"23","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\components\\Editprofile.js":"24","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\components\\UsersProfile.js":"25","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\components\\DateTime.js":"26","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\components\\EditPost.js":"27","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\components\\DeletePost.js":"28","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\components\\ErrorBoundary.js":"29","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\components\\SharePost.js":"30","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\components\\DeleteAccount.js":"31"},{"size":667,"mtime":1653115441587,"results":"32","hashOfConfig":"33"},{"size":2459,"mtime":1653120303891,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1651500257136,"results":"35","hashOfConfig":"33"},{"size":437,"mtime":1652627425503,"results":"36","hashOfConfig":"33"},{"size":886,"mtime":1652803606142,"results":"37","hashOfConfig":"33"},{"size":2829,"mtime":1653123458430,"results":"38","hashOfConfig":"33"},{"size":187,"mtime":1651503101204,"results":"39","hashOfConfig":"33"},{"size":279,"mtime":1651771054863,"results":"40","hashOfConfig":"33"},{"size":252,"mtime":1651776386887,"results":"41","hashOfConfig":"33"},{"size":269,"mtime":1651771042356,"results":"42","hashOfConfig":"33"},{"size":337,"mtime":1651768725328,"results":"43","hashOfConfig":"33"},{"size":6799,"mtime":1652548294029,"results":"44","hashOfConfig":"33"},{"size":9191,"mtime":1652548308314,"results":"45","hashOfConfig":"33"},{"size":2604,"mtime":1652628181178,"results":"46","hashOfConfig":"33"},{"size":4092,"mtime":1652920120222,"results":"47","hashOfConfig":"33"},{"size":12006,"mtime":1653129727248,"results":"48","hashOfConfig":"33"},{"size":10887,"mtime":1653310028576,"results":"49","hashOfConfig":"33"},{"size":5818,"mtime":1653060436606,"results":"50","hashOfConfig":"33"},{"size":314,"mtime":1652364854989,"results":"51","hashOfConfig":"33"},{"size":1862,"mtime":1652893857251,"results":"52","hashOfConfig":"33"},{"size":3727,"mtime":1653120337257,"results":"53","hashOfConfig":"33"},{"size":2251,"mtime":1653129375867,"results":"54","hashOfConfig":"33"},{"size":5279,"mtime":1653121612590,"results":"55","hashOfConfig":"33"},{"size":9809,"mtime":1653129214496,"results":"56","hashOfConfig":"33"},{"size":3519,"mtime":1652790228085,"results":"57","hashOfConfig":"33"},{"size":1667,"mtime":1652699669750,"results":"58","hashOfConfig":"33"},{"size":5129,"mtime":1653065771799,"results":"59","hashOfConfig":"33"},{"size":2373,"mtime":1653129754099,"results":"60","hashOfConfig":"33"},{"size":1225,"mtime":1652797036058,"results":"61","hashOfConfig":"33"},{"size":1596,"mtime":1652975676342,"results":"62","hashOfConfig":"33"},{"size":2518,"mtime":1653123170811,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"1eaa84t",{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"67"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"67"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"67"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"67"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"67"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"67"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"67"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"67"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"67"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"67"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"67"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"67"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"67"},"F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\index.js",[],[],[],"F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\App.js",["171","172","173","174","175"],[],"import React, { useState } from \"react\";\nimport { Routes, Route, BrowserRouter, Router } from \"react-router-dom\";\nimport { Navigation, Footer, Login, Signup, Home, Profile } from \"./webpages\";\n\nimport { useCookies } from \"react-cookie\";\n\nimport Posts from \"./webpages/articles/Posts\";\nimport Post from \"./webpages/articles/Post\";\n\nfunction App() {\n    // Tuto cookies-react\n    const [cookies, setCookie] = useCookies([\"user\"]);\n\n    const user = sessionStorage.getItem(\"isAuthenticate\");\n    const [isAuthenticated, setIsAuthenticated] = useState(user ? true : false);\n\n    function handleCookie() {\n        setCookie(\"user\", \"gowtham\", {\n            path: \"/\",\n        });\n    }\n\n    console.log(cookies);\n\n    if (!isAuthenticated) {\n        return (\n            <BrowserRouter>\n                <div className=\"App\">\n                    <div className=\"App__bgColor\"></div>\n                    {/* <Login /> */}\n                    <Routes>\n                        <Route path=\"/\" element={<Login />} />\n                        {/* <Route path=\"/\" element={<Login />} /> */}\n                        <Route path=\"/signup\" element={<Signup />} />\n                    </Routes>\n                </div>\n            </BrowserRouter>\n        );\n    }\n\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n                <div className=\"App__bgColor\"></div>\n                <header className=\"App-header\">\n                    <Navigation />\n                    {/* <button onClick={handleCookie}>Set Cookie</button>\n                    {cookies.user && <p>{cookies.user}</p>} */}\n                </header>\n                <Routes>\n                    {/* Affichage des articles */}\n                    <Route path=\"/\" element={<Home />} />\n                    <Route path=\"/articles/\" element={<Post />}>\n                        {/* <Route path=\"\" element={<Post />} /> */}\n                        <Route path=\":postSlug\" element={<Post />} component={Post} />\n                    </Route>\n\n                    {/* Affichage des profiles utilisateurs */}\n                    {/* <Route path=\"/\" element={<Home />} /> */}\n                    <Route path=\"/profile/\" element={<Profile />}>\n                        <Route path=\":userSlug\" element={<Profile />} component={Profile} />\n                    </Route>\n                </Routes>\n                {/* <Footer /> */}\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\reportWebVitals.js",[],[],"F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\webpages\\index.js",[],[],"F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\webpages\\Home.js",[],[],"F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\components\\Navigation.jsx",[],[],"F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\components\\Footer.jsx",[],[],"F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\routes\\PrivateRoute.js",["176"],[],"F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\routes\\ProtectedRoutes.js",[],[],"F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\routes\\PublicRoute.js",[],[],"F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\routes\\Routes.js",[],[],"F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\webpages\\Login.jsx",["177"],[],"import React, { useState } from \"react\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nimport logo from \"../images/icon.svg\";\r\n\r\n// Import des icons de la page login\r\nimport { BiLogInCircle, BiLockOpenAlt, BiShow, BiHide } from \"react-icons/bi\";\r\n\r\nfunction Login() {\r\n    let navigate = useNavigate();\r\n\r\n    // connexion\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    // Creation du user connecté\r\n    const [user, setUser] = useState(\"\");\r\n\r\n    // Message d'erreur\r\n    const [msg, setMsg] = useState(\"\");\r\n\r\n    const url = `http://localhost:8080/api/auth/login`;\r\n\r\n    // L'objet user envoyer pour la connexion\r\n    const userObject = {\r\n        email: email,\r\n        password: password,\r\n    };\r\n\r\n    // La method\r\n    const postLoggedIn = {\r\n        method: \"POST\",\r\n        body: JSON.stringify(userObject),\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    const Auth = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            let res = await fetch(url, postLoggedIn);\r\n\r\n            if (res.status === 404) {\r\n                setMsg(\"Cet utilisateur n'existe pas !\");\r\n            } else {\r\n                const data = await res.json();\r\n                setUser({ id: data.userId, pass: data.token, role: data.userRole });\r\n            }\r\n\r\n            // if (res.ok) {\r\n            // }\r\n        } catch (error) {\r\n            setMsg(error);\r\n        }\r\n    };\r\n\r\n    if (user) {\r\n        sessionStorage.setItem(\"isAuthenticate\", JSON.stringify(user));\r\n        window.location.reload(true);\r\n    }\r\n\r\n    // icon pour afficher le mot de pass\r\n\r\n    // Pour afficher ou cacher le mot de passe\r\n    const [passwordShown, setPasswordShown] = useState(false);\r\n    const [show, setShow] = useState(false);\r\n\r\n    const togglePassword = () => {\r\n        setPasswordShown(!passwordShown);\r\n        setShow(!passwordShown);\r\n    };\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__flex\">\r\n                <div className=\"login__container\">\r\n                    <div className=\"login__branding\">\r\n                        <img src={logo} alt=\"Logo Groupomania\" />\r\n                        <h1 className=\"login__title\">Groupomania</h1>\r\n                    </div>\r\n                    <div className=\"login__links\">\r\n                        <ul className=\"login__links--items\">\r\n                            <li className=\"item\">\r\n                                <NavLink className=\"item\" to=\"/\">\r\n                                    Connexion\r\n                                </NavLink>\r\n                            </li>\r\n                            <p className=\"item\">|</p>\r\n                            <li className=\"item\">\r\n                                <NavLink className=\"item\" to=\"/signup\">\r\n                                    Inscription\r\n                                </NavLink>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <form onSubmit={Auth} className=\"login__form\">\r\n                        <div className=\"login__input-edit\">\r\n                            <div>\r\n                                <label className=\"login__label\">\r\n                                    <div className=\"login__icon\">\r\n                                        <BiLogInCircle />\r\n                                    </div>\r\n                                    <input\r\n                                        className=\"login__input-text\"\r\n                                        type=\"text\"\r\n                                        name=\"email\"\r\n                                        placeholder=\"email\"\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                </label>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <label className=\"login__label\">\r\n                                    <div className=\"login__icon\">\r\n                                        <BiLockOpenAlt />\r\n                                    </div>\r\n\r\n                                    <div className=\"login__icon--hideShow\">\r\n                                        <span\r\n                                            className=\"show\"\r\n                                            onClick={togglePassword}\r\n                                            style={{ display: show ? \"none\" : \"block\" }}\r\n                                        >\r\n                                            <BiShow />\r\n                                        </span>\r\n                                        <span\r\n                                            className=\"hide\"\r\n                                            onClick={togglePassword}\r\n                                            style={{ display: show ? \"block\" : \"none\" }}\r\n                                        >\r\n                                            <BiHide />\r\n                                        </span>\r\n                                    </div>\r\n                                    <input\r\n                                        className=\"login__input-text\"\r\n                                        // type=\"password\"\r\n                                        type={passwordShown ? \"text\" : \"password\"}\r\n                                        name=\"password\"\r\n                                        placeholder=\"******\"\r\n                                        value={password}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                    />\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        {/* <div>\r\n                    <label className=\"login__rememberMe\">\r\n                        <input className=\"login__rememberMe--checkbox\" type=\"checkbox\" id=\"scales\" name=\"scales\" />\r\n                        <p className=\"login__rememberMe--text\">Se souvenir de moi</p>\r\n                    </label>\r\n                </div> */}\r\n\r\n                        <p>{msg}</p>\r\n                        <input className=\"login__btn btn\" type=\"submit\" value=\"Connexion\" />\r\n                        {/* <p>\r\n                    <li>Mot de passe oublié ?</li>\r\n                </p> */}\r\n                        {/* {isAuthenticated ? <Navigate to=\"/\" replace /> : \"Vous devez vous connecter\"} */}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n    // }\r\n}\r\n\r\nexport default Login;\r\n","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\webpages\\Signup.jsx",[],[],"F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\components\\UserLoggedIn.jsx",["178","179","180","181"],[],"import React, { useEffect, useState, Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class UserLoggedIn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            userInfo: [],\r\n            DataIsLoaded: false,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\r\n        const token = user.pass;\r\n        const userId = user.id;\r\n\r\n        // console.log(userId);\r\n\r\n        const url = `http://localhost:8080/api/profiles/${userId}`;\r\n\r\n        const reqOptions = {\r\n            method: \"GET\",\r\n            headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        try {\r\n            const res = await fetch(url, reqOptions);\r\n            const userData = await res.json();\r\n            this.setState({ userInfo: userData, DataIsLoaded: true });\r\n            // console.log(this.state);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { DataIsLoaded, userInfo } = this.state;\r\n\r\n        if (!DataIsLoaded)\r\n            return (\r\n                <div>\r\n                    <h1> Pleses wait some time.... </h1>{\" \"}\r\n                </div>\r\n            );\r\n\r\n        const firstName = userInfo.profile.firstName;\r\n        const lastName = userInfo.profile.lastName;\r\n        const fullName = `${firstName} ${lastName}`;\r\n        const initiales = fullName.match(/\\b\\w/g).join(\"\").toUpperCase();\r\n        // console.log(initiales);\r\n\r\n        const profileImgUrl = userInfo.profile.avatarUrl;\r\n\r\n        return (\r\n            // Ajouter un menu déroulant afin d'afficher la possibilité de modifier le profile\r\n            <div className=\"userLoggedIn\">\r\n                {/* <Link to={\"/profile/\" + userInfo.profile.user_id}> */}\r\n                {!profileImgUrl ? (\r\n                    <div className=\"userLoggedIn__pix initiales\">\r\n                        <p>{initiales}</p>\r\n                    </div>\r\n                ) : (\r\n                    <img className=\"userLoggedIn__pix\" src={userInfo.profile.avatarUrl} alt=\"Photo de profile\" />\r\n                )}\r\n                {/* <img className=\"userLoggedIn__pix\" src={userInfo.profile.avatarUrl} alt=\"Photo de profile\" /> */}\r\n                <span className=\"username\">{userInfo.profile.firstName}</span>\r\n                {/* </Link> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\components\\PostForm.jsx",["182","183","184"],[],"import React, { useEffect, useState } from \"react\";\r\n\r\nfunction PostForm() {\r\n    // ===========> CREATE NEW POST\r\n\r\n    const [postTitle, setPostTitle] = useState(null);\r\n    const [postContent, setPostContent] = useState(null);\r\n    const [postImg, setPostImg] = useState(null);\r\n    const [fileDataURL, setFileDataURL] = useState(null);\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\r\n    const token = user.pass;\r\n\r\n    const postObject = {\r\n        title: postTitle,\r\n        content: postContent,\r\n        image: postImg,\r\n    };\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"title\", postTitle);\r\n    formData.append(\"content\", postContent);\r\n    formData.append(\"image\", postImg);\r\n    // console.log(postImg);\r\n\r\n    // requêtes pour créer un nouvel article\r\n    const sendNewPost = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!postTitle && !postContent && !postImg) {\r\n            setMessage(\"Vous avez ajouter au moins un titre avec du texte ou une image\");\r\n        } else if (!postTitle && postContent && !postImg) {\r\n            setMessage(\"Vous avez ajouter au moins un titre\");\r\n        } else if (!postTitle && !postContent && postImg) {\r\n            setMessage(\"Vous avez ajouter au moins un titre\");\r\n        } else if (!postTitle && postContent && postImg) {\r\n            setMessage(\"Vous avez ajouter un titre a votre article\");\r\n        } else {\r\n            try {\r\n                let res = await fetch(\"http://localhost:8080/api/articles/\", {\r\n                    method: \"POST\",\r\n                    body: formData,\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                });\r\n\r\n                const data = await res.json();\r\n                console.log(\"======> Verifier l'envoi du post\");\r\n                console.log(data);\r\n\r\n                window.location.reload();\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    };\r\n\r\n    function handleChange(event) {\r\n        setPostImg(event.target.files[0]);\r\n\r\n        var file = event.target.files[0];\r\n        var reader = new FileReader();\r\n        reader.onload = function (event) {\r\n            // The file's text will be printed here\r\n            const { result } = event.target;\r\n            console.log(event.target.result);\r\n            setFileDataURL(result);\r\n        };\r\n        reader.readAsDataURL(file);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={sendNewPost} className=\"newPost__add\" method=\"POST\" encType=\"multipart/form-data\">\r\n                <label>\r\n                    <input\r\n                        className=\"newPost__add--title\"\r\n                        type=\"text\"\r\n                        name=\"title\"\r\n                        placeholder=\"Votre titre ici...\"\r\n                        onChange={(e) => setPostTitle(e.target.value)}\r\n                    />\r\n                </label>\r\n\r\n                <label>\r\n                    <textarea\r\n                        className=\"newPost__add--content\"\r\n                        type=\"text\"\r\n                        name=\"content\"\r\n                        placeholder=\"Votre text ici....\"\r\n                        onChange={(e) => setPostContent(e.target.value)}\r\n                    />\r\n                </label>\r\n\r\n                {!postImg ? null : <img width=\"300\" src={fileDataURL} />}\r\n                <div className=\"newPost__btn\">\r\n                    {/* <label htmlFor=\"image\"> */}\r\n                    <input className=\"btn\" type=\"file\" id=\"image\" name=\"image\" onChange={handleChange} />\r\n                    {/* </label> */}\r\n                    {/* <input className=\"btn\" type=\"file\" name=\"image\" onChange={(e) => setPostImg(e.target.value)} /> */}\r\n                    {message}\r\n                    <input className=\"newPost__add--send btn\" type=\"submit\" value=\"Envoyer\" />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostForm;\r\n","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\webpages\\articles\\Posts.js",["185","186","187","188","189","190","191"],[],"F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\webpages\\articles\\Post.js",["192","193","194","195","196"],[],"F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\components\\Comments.js",["197","198"],[],"import React, { useState } from \"react\";\r\n\r\nimport DateTime from \"../components/DateTime\";\r\nimport CommentForm from \"../components/CommentForm\";\r\nimport EditComment from \"../components/EditComment\";\r\nimport DeleteComment from \"../components/DeleteComment\";\r\nimport ErrorBoundary from \"../components/ErrorBoundary\";\r\n\r\nfunction Comments(props) {\r\n    const { post_id } = props;\r\n\r\n    const [data, setData] = useState({ data: [] });\r\n    const [showComments, setShowComments] = useState(false);\r\n    // const [dataIsLoaded, setDataIsLoaded] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [err, setErr] = useState(\"\");\r\n\r\n    const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\r\n    const token = user.pass;\r\n\r\n    const url = `http://localhost:8080/api/articles/${post_id}/comments`;\r\n    const reqOptions = {\r\n        method: \"GET\",\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    const handleClick = async () => {\r\n        toggleComments();\r\n\r\n        if (isLoading) {\r\n            setIsLoading(false);\r\n        } else {\r\n            setIsLoading(true);\r\n\r\n            try {\r\n                const res = await fetch(url, reqOptions);\r\n\r\n                if (!res.ok) {\r\n                    throw new Error(`Error! status: ${res.status}`);\r\n                }\r\n\r\n                const result = await res.json();\r\n\r\n                console.log(\"result is: \", result);\r\n                console.log(\"result de data.allComments: \", data.allComments);\r\n                // console.log(\"Résultat de data.allComments[0].id: \", data.allComments[0].id);\r\n                // console.log(\"result is: \", JSON.stringify(result, null, 4));\r\n\r\n                setData(result);\r\n            } catch (err) {\r\n                setErr(\"Aucun commentaire à afficher\");\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    const toggleComments = () => {\r\n        if (!showComments) {\r\n            setShowComments(true);\r\n            console.log(\"mode edition activée !\");\r\n        } else {\r\n            setShowComments(false);\r\n            console.log(\"mode edition désactivée !\");\r\n        }\r\n    };\r\n\r\n    // console.log(data);\r\n\r\n    // const showComments = data.allComments.map((comment) => {\r\n    //     return (\r\n    //         <div key={comment.id}>\r\n    //             <p>{comment.comment}</p>\r\n    //         </div>\r\n    //     );\r\n    // });\r\n\r\n    return (\r\n        <div>\r\n            <button className=\"btn\" onClick={handleClick}>\r\n                Afficher les commentaires\r\n            </button>\r\n            {/* <ErrorBoundary>\r\n                <CommentForm post_id={post.article.id} />\r\n            </ErrorBoundary> */}\r\n            <div className=\"showComments\" style={{ display: showComments ? \"block\" : \"none\" }}>\r\n                {err && <h2>{err}</h2>}\r\n                {isLoading && <h2>Loading...</h2>}\r\n                {data.allComments?.map((comment) => {\r\n                    return (\r\n                        <div className=\"comments__post\" key={comment.id}>\r\n                            <div className=\"comments__author\">\r\n                                {!comment.avatar ? (\r\n                                    <div className=\"comments__author--avatar initiales\">\r\n                                        <p>\r\n                                            {`${comment.firstName} ${comment.lastName}\r\n                                            `\r\n                                                .match(/\\b\\w/g)\r\n                                                .join(\"\")\r\n                                                .toUpperCase()}\r\n                                        </p>\r\n                                    </div>\r\n                                ) : (\r\n                                    <img\r\n                                        width=\"100\"\r\n                                        className=\"comments__author--avatar\"\r\n                                        src={comment.avatar}\r\n                                        alt={comment.firstName + \" \" + comment.lastName}\r\n                                    />\r\n                                )}\r\n\r\n                                <div className=\"comments__author--infos\">\r\n                                    <p>{comment.firstName + \" \" + comment.lastName}</p>\r\n                                    <div className=\"comments__author--dateTime\">\r\n                                        <p>Posté</p> <DateTime datetime={comment.timestamp} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"comments__content\">\r\n                                <p>{comment.comment}</p>\r\n                            </div>\r\n\r\n                            <div className=\"comments__buttons\">\r\n                                <EditComment\r\n                                    author_id={comment.author_id}\r\n                                    post_id={comment.article_id}\r\n                                    comment_id={comment.id}\r\n                                    comment_value={comment.comment}\r\n                                />\r\n\r\n                                <DeleteComment\r\n                                    author_id={comment.author_id}\r\n                                    post_id={comment.article_id}\r\n                                    comment_id={comment.id}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Comments;\r\n","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\components\\UserDetails.js",[],[],"F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\components\\CommentForm.js",[],[],"F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\components\\EditComment.js",["199"],[],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { BiEditAlt } from \"react-icons/bi\";\r\n\r\nfunction EditComment(props) {\r\n    // On récupère les données de l'utilisateur avec props\r\n    const { post_id, author_id, comment_id, comment_value } = props;\r\n\r\n    // On prépare le state local pour stocker les données à modifier\r\n    const [comment, setComment] = useState(comment_value);\r\n    const [isAuthor, setIsAuthor] = useState(false);\r\n\r\n    // Hide and show form\r\n    const [editMod, setEditMod] = useState(false);\r\n\r\n    // On récupère les données de connexion de l'utilisateur loggé\r\n    const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\r\n    const token = user.pass;\r\n    const user_id = user.id;\r\n\r\n    // On créer un objet a envoyer pour la modification\r\n    const commentObject = {\r\n        comment: comment,\r\n    };\r\n\r\n    const url = `http://localhost:8080/api/articles/${post_id}/comments/${comment_id}`;\r\n    const reqOptions = {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(commentObject),\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    const set_author = async () => {\r\n        if (user_id === author_id) {\r\n            setIsAuthor(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        set_author();\r\n    }, []);\r\n\r\n    const toggleEdit = () => {\r\n        if (!editMod) {\r\n            setEditMod(true);\r\n            console.log(\"mode edition activée !\");\r\n        } else {\r\n            setEditMod(false);\r\n            console.log(\"mode edition désactivée !\");\r\n        }\r\n    };\r\n\r\n    // Fonction pour modifier un commentaire\r\n    const modifyComment = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            let res = await fetch(url, reqOptions);\r\n            let commentRes = await res.json();\r\n\r\n            console.log(\"=====> Réponse commentaire envoyé : \");\r\n            console.log(commentRes);\r\n\r\n            window.location.reload();\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    // console.log(\"=====> Test sur le propriétaire du commentaire\");\r\n    // console.log(isAuthor);\r\n    // console.log(\"=====> Author id\");\r\n    // console.log(author_id);\r\n    // console.log(\"=====> User id\");\r\n    // console.log(user_id);\r\n\r\n    return (\r\n        <div>\r\n            {!isAuthor ? null : (\r\n                <button className=\"comments__edit--btn btn\" onClick={toggleEdit}>\r\n                    <BiEditAlt />\r\n                    <span className=\"infobubble\">Editer ce commentaire</span>\r\n                </button>\r\n            )}\r\n\r\n            <div className=\"comments__editForm\">\r\n                <span className=\"editMod\" style={{ display: editMod ? \"block\" : \"none\" }}>\r\n                    <h3>Modifier votre commentaire</h3>\r\n                    <form className=\"comment_editForm--form\" onSubmit={modifyComment}>\r\n                        <label>\r\n                            <textarea\r\n                                type=\"text\"\r\n                                name=\"content\"\r\n                                placeholder=\"Ajouter un nouveau commentaire\"\r\n                                value={comment}\r\n                                onChange={(e) => setComment(e.target.value)}\r\n                            />\r\n                        </label>\r\n\r\n                        <div>\r\n                            <input className=\"comment__send--btn btn\" type=\"submit\" value=\"Envoyer\" />\r\n                        </div>\r\n                    </form>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditComment;\r\n","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\components\\DeleteComment.js",["200"],[],"F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\webpages\\profiles\\Profile.js",["201","202","203","204","205","206"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { BiCalendarCheck, BiUserCheck, BiMailSend, BiTrash } from \"react-icons/bi\";\r\n\r\nimport DateTime from \"../../components/DateTime\";\r\nimport EditProfile from \"../../components/Editprofile\";\r\n\r\nfunction Profile() {\r\n    let { userSlug } = useParams();\r\n    const [userData, setUserData] = useState({ profile: {} });\r\n    const [dataIsLoaded, setDataIsLoaded] = useState(false);\r\n\r\n    const [isAuthorized, setIsAuthorized] = useState(false);\r\n\r\n    const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\r\n    const token = user.pass;\r\n    const user_id = user.id;\r\n    const user_role = user.role;\r\n\r\n    // Request options\r\n    const url = `http://localhost:8080/api/profiles/${userSlug}`;\r\n    const reqOptions = {\r\n        method: \"GET\",\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    const fetchProfile = () => {\r\n        fetch(url, reqOptions)\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                    // console.log(res);\r\n                } else {\r\n                    console.log(\"Ce profile n'existe pas\");\r\n                }\r\n            })\r\n            .then((data) => {\r\n                setUserData(data);\r\n                setDataIsLoaded(true);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchProfile();\r\n    }, []);\r\n\r\n    // Afin de pouvoir attendre le chargement des données\r\n    if (!dataIsLoaded) {\r\n        return (\r\n            <div>\r\n                <h1> Pleases wait some time.... </h1>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    console.log(\"\", userData);\r\n\r\n    return (\r\n        <div className=\"profile\">\r\n            <div className=\"container\">\r\n                <div className=\"profile__data\">\r\n                    <div className=\"profile__user\">\r\n                        {!userData.profile.avatarUrl ? (\r\n                            <div className=\"profile__img initiales\">\r\n                                <p>\r\n                                    {`${userData.profile.firstName} ${userData.profile.lastName}\r\n                                                `\r\n                                        .match(/\\b\\w/g)\r\n                                        .join(\"\")\r\n                                        .toUpperCase()}\r\n                                </p>\r\n                            </div>\r\n                        ) : (\r\n                            <img\r\n                                className=\"profile__img\"\r\n                                src={userData.profile.avatarUrl}\r\n                                alt={\r\n                                    \"Photo de profile de \" +\r\n                                    userData.profile.firstName +\r\n                                    \" \" +\r\n                                    userData.profile.lastName\r\n                                }\r\n                            />\r\n                        )}\r\n                        <div>\r\n                            <h1 className=\"profile__title\">\r\n                                {userData.profile.firstName + \" \" + userData.profile.lastName} <BiUserCheck />\r\n                            </h1>\r\n                            <p className=\"profile__signupDate\">\r\n                                <BiCalendarCheck /> Inscrit <DateTime datetime={userData.profile.inscrit_le} />\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"profile__infos\">\r\n                        <div className=\"profile__user--margin\">\r\n                            <p>\r\n                                <BiCalendarCheck /> Date de naissance : <span>{userData.profile.birthdate}</span>\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div className=\"profile__user--margin\">\r\n                            <p>\r\n                                Role : <span>{userData.profile.role}</span>\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div className=\"profile__user--margin\">\r\n                            <p>\r\n                                <BiMailSend /> Adresse email : <span>{userData.profile.email}</span>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"profile__btn\">\r\n                        <EditProfile\r\n                            userId={userSlug}\r\n                            first_name={userData.profile.firstName}\r\n                            last_name={userData.profile.lastName}\r\n                            birthDate={userData.profile.birthdate}\r\n                            emailValue={userData.profile.email}\r\n                            password={userData.profile.password}\r\n                            avatar={userData.profile.avatarUrl}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\components\\Editprofile.js",["207","208","209","210","211"],[],"F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\components\\UsersProfile.js",["212","213","214","215"],[],"/*\r\nCette page sert à chercher et afficher tous les utilisateurs inscrits\r\n*/\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport DateTime from \"../components/DateTime\";\r\n\r\nfunction UsersProfile() {\r\n    const [users, setUsers] = useState([]);\r\n    const [dataIsLoaded, setDataIsLoaded] = useState(false);\r\n    const [showMore, setShowMore] = useState(false);\r\n\r\n    const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\r\n    const token = user.pass;\r\n\r\n    const url = `http://localhost:8080/api/profiles`;\r\n    const reqOptions = {\r\n        method: \"GET\",\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    const fetchUsers = () => {\r\n        fetch(url, reqOptions)\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n            })\r\n            .then((data) => {\r\n                // console.log(data);\r\n\r\n                setUsers(data);\r\n                setDataIsLoaded(true);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchUsers();\r\n    }, []);\r\n\r\n    // console.log(users);\r\n\r\n    if (!dataIsLoaded) {\r\n        return (\r\n            <div>\r\n                <h1> Pleases wait some time.... </h1>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const usersList = users.slice(0, 5).map((user) => {\r\n        return (\r\n            <li className=\"usersList__user\" key={user.usersProfile.user_Id}>\r\n                <NavLink className=\"usersList__user--link\" to={\"/profile/\" + user.usersProfile.user_Id}>\r\n                    {!user.usersProfile.avatar ? (\r\n                        <div className=\"usersList__user--avatar initiales\">\r\n                            <p>\r\n                                {`${user.usersProfile.first_name} ${user.usersProfile.last_name}\r\n                                                `\r\n                                    .match(/\\b\\w/g)\r\n                                    .join(\"\")\r\n                                    .toUpperCase()}\r\n                            </p>\r\n                        </div>\r\n                    ) : (\r\n                        <img className=\"usersList__user--avatar\" src={user.usersProfile.avatar} />\r\n                    )}\r\n                    <div>\r\n                        <div className=\"usersList__user--name\">\r\n                            <p>\r\n                                <span className=\"user__firstName\">{user.usersProfile.first_name} </span>\r\n                                <span className=\"user__lastName\">{user.usersProfile.last_name}</span>\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div className=\"usersList__user--signupDate\">\r\n                            <DateTime datetime={user.usersProfile.inscrit_le} />\r\n                        </div>\r\n                    </div>\r\n                </NavLink>\r\n                {/* <div className=\"usersList__user--signupDate\">{user.usersProfile.inscrit_le}</div> */}\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <ul className=\"usersList\">\r\n            <h3 className=\"usersList__title\">Nouveaux utilisateurs</h3>\r\n            {usersList}\r\n        </ul>\r\n    );\r\n    // return (\r\n    //     <div>\r\n    //         UsersProfile coding en cours\r\n    //         <div>{usersList}</div>\r\n    //     </div>\r\n    // );\r\n}\r\n\r\nexport default UsersProfile;\r\n","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\components\\DateTime.js",["216"],[],"import React, { useState, useEffect } from \"react\";\r\n\r\nfunction DateTime(props) {\r\n    const { datetime } = props;\r\n    const [timeAfter, setTimeAfter] = useState(\" \");\r\n    const now = new Date();\r\n    const date = new Date(datetime);\r\n    let diff = {}; // Initialisation du retour\r\n\r\n    function dateDiff(date1, date2) {\r\n        var tmp = date2 - date1;\r\n\r\n        tmp = Math.floor(tmp / 1000); // Nombre de secondes entre les 2 dates\r\n        diff.sec = tmp % 60; // Extraction du nombre de secondes\r\n\r\n        tmp = Math.floor((tmp - diff.sec) / 60); // Nombre de minutes (partie entière)\r\n        diff.min = tmp % 60; // Extraction du nombre de minutes\r\n\r\n        tmp = Math.floor((tmp - diff.min) / 60); // Nombre d'heures (entières)\r\n        diff.hour = tmp % 24; // Extraction du nombre d'heures\r\n\r\n        tmp = Math.floor((tmp - diff.hour) / 24); // Nombre de jours restants\r\n        diff.day = tmp;\r\n\r\n        return diff;\r\n    }\r\n\r\n    diff = dateDiff(date, now);\r\n\r\n    function set_time() {\r\n        if (diff.day <= 0 && diff.hour <= 0 && diff.min <= 0 && diff.sec > 0) {\r\n            setTimeAfter(`${diff.sec} sec`);\r\n        } else if (diff.day <= 0 && diff.hour <= 0 && diff.min > 0) {\r\n            setTimeAfter(`${diff.min} min`);\r\n        } else if (diff.day <= 0 && diff.hour > 0) {\r\n            setTimeAfter(`${diff.hour} h`);\r\n        } else if (diff.day > 0) {\r\n            setTimeAfter(`${diff.day} jours`);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        set_time();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"dateTime\">\r\n            <span>depuis {timeAfter}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DateTime;\r\n","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\components\\EditPost.js",["217","218","219","220"],[],"import React, { useState, useEffect } from \"react\";\r\n\r\nfunction EditPost(props) {\r\n    // On récupère les données utiles\r\n    const { post_id, author_id, post_title, post_content, post_img } = props;\r\n\r\n    // On prépare le state local\r\n    const [title, setTitle] = useState(post_title);\r\n    const [content, setContent] = useState(post_content);\r\n    const [image, setImage] = useState(post_img);\r\n\r\n    // const [editMod, setEditMod] = useState(false);\r\n\r\n    // On récupère les données pour les authorisations\r\n    const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\r\n    const token = user.pass;\r\n    const user_id = user.id;\r\n\r\n    // const [isAuthor, setIsAuthor] = useState(false);\r\n\r\n    // console.log(props);\r\n\r\n    // On créer le formData\r\n    const formData = new FormData();\r\n    formData.append(\"title\", title);\r\n    formData.append(\"content\", content);\r\n    formData.append(\"image\", image);\r\n\r\n    // On configure la requête\r\n    const url = `http://localhost:8080/api/articles/${post_id}`;\r\n    const reqOptions = {\r\n        method: \"PUT\",\r\n        body: formData,\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    };\r\n\r\n    // On vérifis si l'utilisateur est l'auteur du post\r\n    // const set_author = () => {\r\n    //     if (user_id === author_id) {\r\n    //         setIsAuthor(true);\r\n    //     }\r\n    // };\r\n\r\n    // useEffect(() => {\r\n    //     set_author();\r\n    // }, []);\r\n\r\n    // console.log(\"Est-ce que l'utilisateur est l'auteur du post ? \", isAuthor, author_id);\r\n    // console.log(user_id);\r\n\r\n    // Fonction pour modifier un commentaire\r\n    const editPost = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            let res = await fetch(url, reqOptions);\r\n            let editRes = await res.json();\r\n\r\n            console.log(\"=====> Réponse commentaire envoyé : \");\r\n            console.log(editRes);\r\n\r\n            window.location.reload();\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    function handleChange(e) {\r\n        setImage(e.target.files[0]);\r\n    }\r\n\r\n    // function handleDelete(e) {\r\n    //     setImage(null);\r\n    // }\r\n\r\n    // const toggleEdit = () => {\r\n    //     if (!editMod) {\r\n    //         setEditMod(true);\r\n    //         console.log(\"mode edition activée !\");\r\n    //     } else {\r\n    //         setEditMod(false);\r\n    //         console.log(\"mode edition désactivée !\");\r\n    //     }\r\n    // };\r\n\r\n    // console.log(image);\r\n\r\n    return (\r\n        <div>\r\n            {/* {!isAuthor ? null : (\r\n                <button className=\"postForm__edit btn btn__edit\" onClick={toggleEdit}>\r\n                    Editer\r\n                </button>\r\n            )} */}\r\n\r\n            {/* <span className=\"postForm postForm__editMod editMod\" style={{ display: editMod ? \"block\" : \"none\" }}> */}\r\n            <span className=\"postForm postForm__editMod editMod\">\r\n                <form onSubmit={editPost} className=\"postForm__edit--form\" method=\"PUT\" encType=\"multipart/form-data\">\r\n                    <h2>Modifier cet article</h2>\r\n                    <label>\r\n                        <input\r\n                            className=\"postForm__edit--title\"\r\n                            type=\"text\"\r\n                            name=\"title\"\r\n                            value={title}\r\n                            placeholder=\"Votre titre ici...\"\r\n                            onChange={(e) => setTitle(e.target.value)}\r\n                        />\r\n                    </label>\r\n\r\n                    <label>\r\n                        <textarea\r\n                            className=\"postForm__edit--textarea\"\r\n                            type=\"text\"\r\n                            name=\"content\"\r\n                            value={content}\r\n                            placeholder=\"Votre text ici....\"\r\n                            onChange={(e) => setContent(e.target.value)}\r\n                        />\r\n                    </label>\r\n\r\n                    <img className=\"postForm__edit--imgPreview\" src={image} />\r\n                    {/* <button type=\"button\" onClick={handleDelete}>\r\n                        Delete img\r\n                    </button> */}\r\n\r\n                    <div className=\"postForm__edit--btn\">\r\n                        {/* <button className=\"btn btn__file\">Ajouter une image</button> */}\r\n                        {/* <input\r\n                            className=\"btn hide\"\r\n                            type=\"file\"\r\n                            name=\"image\"\r\n                            onChange={(e) => setImage(setImage(e.target.files[0]))}\r\n                        /> */}\r\n                        {/* <input className=\"btn hide\" type=\"file\" name=\"image\" onChange={handleChange} /> */}\r\n                        <input className=\"btn\" type=\"file\" name=\"image\" src={image} onChange={handleChange} />\r\n                        <input className=\"postForm__edit--send btn\" type=\"submit\" value=\"Envoyer\" />\r\n                    </div>\r\n                </form>\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditPost;\r\n","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\components\\DeletePost.js",["221","222"],[],"F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\components\\ErrorBoundary.js",["223","224"],[],"import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\n\r\nexport default class ErrorBoundary extends React.Component {\r\n    // static propTypes = {}\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { error: null, errorInfo: null };\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        // Catch errors in any components below and re-render with error message\r\n        this.setState({\r\n            error: error,\r\n            errorInfo: errorInfo,\r\n        });\r\n        // You can also log error messages to an error reporting service here\r\n    }\r\n\r\n    render() {\r\n        if (this.state.errorInfo) {\r\n            // Error path\r\n            return (\r\n                <div>\r\n                    <h2>Something went wrong.</h2>\r\n                    <details style={{ whiteSpace: \"pre-wrap\" }}>\r\n                        {this.state.error && this.state.error.toString()}\r\n                        <br />\r\n                        {this.state.errorInfo.componentStack}\r\n                    </details>\r\n                </div>\r\n            );\r\n        }\r\n        // Normally, just render children\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\n// export default ErrorBoundary;\r\n","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\components\\SharePost.js",["225","226","227","228"],[],"import React, { useState } from \"react\";\r\n\r\nimport { BiShare } from \"react-icons/bi\";\r\n\r\nfunction SharePost(props) {\r\n    const { post_id, userId } = props;\r\n    const [shareNumber, setShareNumber] = useState(1);\r\n\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const [shared, setShared] = useState(false);\r\n\r\n    const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\r\n    const token = user.pass;\r\n    const user_id = user.id;\r\n\r\n    const shareObject = {\r\n        share: shareNumber,\r\n    };\r\n\r\n    const url = `http://localhost:8080/api/articles/${post_id}/share`;\r\n    const reqOptions = {\r\n        method: \"POST\",\r\n        body: JSON.stringify(shareObject),\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    function shareButton(e) {\r\n        // setShared(true)\r\n        setShareNumber(1);\r\n\r\n        fetch(url, reqOptions)\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n            })\r\n            .then((data) => {\r\n                console.log(data);\r\n                setMessage(data.MESSAGE);\r\n            })\r\n            .catch((err) => {\r\n                setMessage(\"Une erreur est survenue ! \" + err);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={(e) => shareButton()}>\r\n                <BiShare />\r\n            </button>\r\n\r\n            <div>{message}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SharePost;\r\n","F:\\Works\\Formation OC\\SOUTENANCES\\P7\\groupomania\\client\\src\\components\\DeleteAccount.js",["229","230"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { BiTrash } from \"react-icons/bi\";\r\n\r\nfunction DeleteAccount(props) {\r\n    let navigate = useNavigate();\r\n    let { postSlug } = useParams();\r\n\r\n    // On récupère l'id de l'utilisateur\r\n    const { userId } = props;\r\n\r\n    const [isAuthorized, setIsAuthorized] = useState(false);\r\n\r\n    // On récupère les données pour les authorisations\r\n    const user = JSON.parse(sessionStorage.getItem(\"isAuthenticate\"));\r\n    const token = user.pass;\r\n    const user_id = user.id;\r\n    const user_role = user.role;\r\n    const role = \"admin\";\r\n\r\n    // On configure la requête\r\n    const url = `http://localhost:8080/api/profiles/${userId}`;\r\n    const reqOptions = {\r\n        method: \"DELETE\",\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    // On vérifi si l'utilisateur est autorisé à supprimer ce compte\r\n    const authorization = async () => {\r\n        if (user_id === userId || user_role === role) {\r\n            setIsAuthorized(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        authorization();\r\n    }, []);\r\n\r\n    // Requête pour supprimer le compte\r\n    const delAccount = async (e) => {\r\n        e.preventDefault();\r\n\r\n        console.log(\"click\");\r\n        try {\r\n            let res = await fetch(url, reqOptions);\r\n            let deleteRes = await res.json();\r\n            // console.log(\"=====> Réponse commentaire envoyé : \");\r\n            // console.log(deleteRes);\r\n\r\n            if (res.ok) {\r\n                // window.location.reload();\r\n                if (postSlug === undefined) {\r\n                    window.location.reload();\r\n                }\r\n\r\n                navigate(\"/\");\r\n                window.location.reload();\r\n                sessionStorage.removeItem(\"isAuthenticate\");\r\n            } else {\r\n                throw new Error(\"Error\");\r\n            }\r\n\r\n            // window.location.reload();\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!isAuthorized ? null : (\r\n                <button className=\"account__delete btn btn__delete\" onClick={(e) => delAccount(e)}>\r\n                    <BiTrash />\r\n                </button>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DeleteAccount;\r\n",{"ruleId":"231","severity":1,"message":"232","line":2,"column":40,"nodeType":"233","messageId":"234","endLine":2,"endColumn":46},{"ruleId":"231","severity":1,"message":"235","line":3,"column":22,"nodeType":"233","messageId":"234","endLine":3,"endColumn":28},{"ruleId":"231","severity":1,"message":"236","line":7,"column":8,"nodeType":"233","messageId":"234","endLine":7,"endColumn":13},{"ruleId":"231","severity":1,"message":"237","line":15,"column":29,"nodeType":"233","messageId":"234","endLine":15,"endColumn":47},{"ruleId":"231","severity":1,"message":"238","line":17,"column":14,"nodeType":"233","messageId":"234","endLine":17,"endColumn":26},{"ruleId":"231","severity":1,"message":"239","line":1,"column":27,"nodeType":"233","messageId":"234","endLine":1,"endColumn":33},{"ruleId":"231","severity":1,"message":"240","line":9,"column":9,"nodeType":"233","messageId":"234","endLine":9,"endColumn":17},{"ruleId":"231","severity":1,"message":"241","line":1,"column":17,"nodeType":"233","messageId":"234","endLine":1,"endColumn":26},{"ruleId":"231","severity":1,"message":"242","line":1,"column":28,"nodeType":"233","messageId":"234","endLine":1,"endColumn":36},{"ruleId":"231","severity":1,"message":"243","line":2,"column":10,"nodeType":"233","messageId":"234","endLine":2,"endColumn":14},{"ruleId":"244","severity":1,"message":"245","line":69,"column":21,"nodeType":"246","endLine":69,"endColumn":114},{"ruleId":"231","severity":1,"message":"241","line":1,"column":17,"nodeType":"233","messageId":"234","endLine":1,"endColumn":26},{"ruleId":"231","severity":1,"message":"247","line":15,"column":11,"nodeType":"233","messageId":"234","endLine":15,"endColumn":21},{"ruleId":"248","severity":1,"message":"249","line":97,"column":36,"nodeType":"246","endLine":97,"endColumn":73},{"ruleId":"231","severity":1,"message":"250","line":1,"column":17,"nodeType":"233","messageId":"234","endLine":1,"endColumn":26},{"ruleId":"231","severity":1,"message":"239","line":2,"column":16,"nodeType":"233","messageId":"234","endLine":2,"endColumn":22},{"ruleId":"231","severity":1,"message":"251","line":6,"column":10,"nodeType":"233","messageId":"234","endLine":6,"endColumn":20},{"ruleId":"231","severity":1,"message":"252","line":8,"column":10,"nodeType":"233","messageId":"234","endLine":8,"endColumn":23},{"ruleId":"231","severity":1,"message":"253","line":10,"column":29,"nodeType":"233","messageId":"234","endLine":10,"endColumn":36},{"ruleId":"231","severity":1,"message":"254","line":10,"column":49,"nodeType":"233","messageId":"234","endLine":10,"endColumn":61},{"ruleId":"248","severity":1,"message":"249","line":117,"column":37,"nodeType":"246","endLine":117,"endColumn":101},{"ruleId":"231","severity":1,"message":"255","line":3,"column":10,"nodeType":"233","messageId":"234","endLine":3,"endColumn":15},{"ruleId":"231","severity":1,"message":"253","line":5,"column":29,"nodeType":"233","messageId":"234","endLine":5,"endColumn":36},{"ruleId":"231","severity":1,"message":"256","line":28,"column":12,"nodeType":"233","messageId":"234","endLine":28,"endColumn":20},{"ruleId":"257","severity":1,"message":"258","line":64,"column":8,"nodeType":"259","endLine":64,"endColumn":10,"suggestions":"260"},{"ruleId":"248","severity":1,"message":"249","line":193,"column":47,"nodeType":"246","endLine":193,"endColumn":99},{"ruleId":"231","severity":1,"message":"261","line":4,"column":8,"nodeType":"233","messageId":"234","endLine":4,"endColumn":19},{"ruleId":"231","severity":1,"message":"262","line":7,"column":8,"nodeType":"233","messageId":"234","endLine":7,"endColumn":21},{"ruleId":"257","severity":1,"message":"263","line":45,"column":8,"nodeType":"259","endLine":45,"endColumn":10,"suggestions":"264"},{"ruleId":"257","severity":1,"message":"265","line":40,"column":8,"nodeType":"259","endLine":40,"endColumn":10,"suggestions":"266"},{"ruleId":"231","severity":1,"message":"267","line":4,"column":52,"nodeType":"233","messageId":"234","endLine":4,"endColumn":59},{"ruleId":"231","severity":1,"message":"268","line":14,"column":12,"nodeType":"233","messageId":"234","endLine":14,"endColumn":24},{"ruleId":"231","severity":1,"message":"269","line":14,"column":26,"nodeType":"233","messageId":"234","endLine":14,"endColumn":41},{"ruleId":"231","severity":1,"message":"270","line":18,"column":11,"nodeType":"233","messageId":"234","endLine":18,"endColumn":18},{"ruleId":"231","severity":1,"message":"271","line":19,"column":11,"nodeType":"233","messageId":"234","endLine":19,"endColumn":20},{"ruleId":"257","severity":1,"message":"272","line":53,"column":8,"nodeType":"259","endLine":53,"endColumn":10,"suggestions":"273"},{"ruleId":"231","severity":1,"message":"267","line":3,"column":21,"nodeType":"233","messageId":"234","endLine":3,"endColumn":28},{"ruleId":"231","severity":1,"message":"274","line":9,"column":67,"nodeType":"233","messageId":"234","endLine":9,"endColumn":75},{"ruleId":"231","severity":1,"message":"270","line":36,"column":11,"nodeType":"233","messageId":"234","endLine":36,"endColumn":18},{"ruleId":"257","severity":1,"message":"275","line":90,"column":8,"nodeType":"259","endLine":90,"endColumn":10,"suggestions":"276"},{"ruleId":"248","severity":1,"message":"249","line":157,"column":25,"nodeType":"246","endLine":157,"endColumn":83},{"ruleId":"231","severity":1,"message":"277","line":13,"column":12,"nodeType":"233","messageId":"234","endLine":13,"endColumn":20},{"ruleId":"231","severity":1,"message":"278","line":13,"column":22,"nodeType":"233","messageId":"234","endLine":13,"endColumn":33},{"ruleId":"257","severity":1,"message":"279","line":45,"column":8,"nodeType":"259","endLine":45,"endColumn":10,"suggestions":"280"},{"ruleId":"248","severity":1,"message":"249","line":72,"column":25,"nodeType":"246","endLine":72,"endColumn":99},{"ruleId":"257","severity":1,"message":"281","line":44,"column":8,"nodeType":"259","endLine":44,"endColumn":10,"suggestions":"282"},{"ruleId":"231","severity":1,"message":"241","line":1,"column":27,"nodeType":"233","messageId":"234","endLine":1,"endColumn":36},{"ruleId":"231","severity":1,"message":"283","line":5,"column":22,"nodeType":"233","messageId":"234","endLine":5,"endColumn":31},{"ruleId":"231","severity":1,"message":"270","line":17,"column":11,"nodeType":"233","messageId":"234","endLine":17,"endColumn":18},{"ruleId":"248","severity":1,"message":"249","line":123,"column":21,"nodeType":"246","endLine":123,"endColumn":79},{"ruleId":"257","severity":1,"message":"265","line":43,"column":8,"nodeType":"259","endLine":43,"endColumn":10,"suggestions":"284"},{"ruleId":"231","severity":1,"message":"285","line":51,"column":17,"nodeType":"233","messageId":"234","endLine":51,"endColumn":26},{"ruleId":"231","severity":1,"message":"286","line":1,"column":8,"nodeType":"233","messageId":"234","endLine":1,"endColumn":17},{"ruleId":"231","severity":1,"message":"250","line":2,"column":17,"nodeType":"233","messageId":"234","endLine":2,"endColumn":26},{"ruleId":"231","severity":1,"message":"287","line":6,"column":22,"nodeType":"233","messageId":"234","endLine":6,"endColumn":28},{"ruleId":"231","severity":1,"message":"288","line":11,"column":12,"nodeType":"233","messageId":"234","endLine":11,"endColumn":18},{"ruleId":"231","severity":1,"message":"289","line":11,"column":20,"nodeType":"233","messageId":"234","endLine":11,"endColumn":29},{"ruleId":"231","severity":1,"message":"270","line":15,"column":11,"nodeType":"233","messageId":"234","endLine":15,"endColumn":18},{"ruleId":"257","severity":1,"message":"265","line":43,"column":8,"nodeType":"259","endLine":43,"endColumn":10,"suggestions":"290"},{"ruleId":"231","severity":1,"message":"285","line":52,"column":17,"nodeType":"233","messageId":"234","endLine":52,"endColumn":26},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Footer' is defined but never used.","'Posts' is defined but never used.","'setIsAuthenticated' is assigned a value but never used.","'handleCookie' is defined but never used.","'Outlet' is defined but never used.","'navigate' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'postObject' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Component' is defined but never used.","'useCookies' is defined but never used.","'CSSTransition' is defined but never used.","'BiShare' is defined but never used.","'BiCommentAdd' is defined but never used.","'Route' is defined but never used.","'isAuthor' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchDetails'. Either include it or remove the dependency array.","ArrayExpression",["291"],"'CommentForm' is defined but never used.","'ErrorBoundary' is defined but never used.","React Hook useEffect has a missing dependency: 'set_author'. Either include it or remove the dependency array.",["292"],"React Hook useEffect has a missing dependency: 'authorization'. Either include it or remove the dependency array.",["293"],"'BiTrash' is defined but never used.","'isAuthorized' is assigned a value but never used.","'setIsAuthorized' is assigned a value but never used.","'user_id' is assigned a value but never used.","'user_role' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchProfile'. Either include it or remove the dependency array.",["294"],"'password' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'set_authorization'. Either include it or remove the dependency array.",["295"],"'showMore' is assigned a value but never used.","'setShowMore' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array.",["296"],"React Hook useEffect has a missing dependency: 'set_time'. Either include it or remove the dependency array.",["297"],"'author_id' is assigned a value but never used.",["298"],"'deleteRes' is assigned a value but never used.","'PropTypes' is defined but never used.","'userId' is assigned a value but never used.","'shared' is assigned a value but never used.","'setShared' is assigned a value but never used.",["299"],{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"304","fix":"314"},{"desc":"304","fix":"315"},"Update the dependencies array to be: [fetchDetails]",{"range":"316","text":"317"},"Update the dependencies array to be: [set_author]",{"range":"318","text":"319"},"Update the dependencies array to be: [authorization]",{"range":"320","text":"321"},"Update the dependencies array to be: [fetchProfile]",{"range":"322","text":"323"},"Update the dependencies array to be: [set_authorization]",{"range":"324","text":"325"},"Update the dependencies array to be: [fetchUsers]",{"range":"326","text":"327"},"Update the dependencies array to be: [set_time]",{"range":"328","text":"329"},{"range":"330","text":"321"},{"range":"331","text":"321"},[2241,2243],"[fetchDetails]",[1403,1405],"[set_author]",[1313,1315],"[authorization]",[1640,1642],"[fetchProfile]",[2972,2974],"[set_authorization]",[1234,1236],"[fetchUsers]",[1507,1509],"[set_time]",[1320,1322],[1299,1301]]